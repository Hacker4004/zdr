rconsolename('KHV2');
game:GetService('ScriptContext').Error:Connect(function(Error)
	print(tostring(Error));
end)

xpcall(function()
	getgenv().KHV2Executed = true;
	
	if (not syn) then 
		getgenv().AltExecutor = true;
		syn = {};
		syn.request = request;
		syn.crypt = {};
		syn.crypt.custom = {};
		syn.crypt.custom.decrypt = crypt.decrypt;
		syn.protect_gui = function(...) return ... end;
		getsynasset = getcustomasset;
		getvirtualinputmanager = function() return game:GetService('VirtualInputManager'); end;
		--// this will only work for the values collected by the script
		gethiddenproperties = function(instance) 
			return {
				size = gethiddenproperty(instance, 'Size'),
				CameraCFrame = gethiddenproperty(instance, 'CameraCFrame')
			};
		end;
		getspecialinfo = function() return {AssetId = ''}; end;
		setfpscap(300);
	end;
	
	-- ui already has variables so no need to grab them again
	LPH_NO_VIRTUALIZE = function(...) return ... end;
	local Players = game:GetService('Players');
	local Player = Players.LocalPlayer;
	local Mouse = Player:GetMouse();
	local UserInputService = game:GetService('UserInputService'); 
	local RunService = game:GetService('RunService');
	local TextService = game:GetService('TextService');
	local TweenService = game:GetService('TweenService');
	local HttpService = game:GetService('HttpService');
	local Camera = workspace.CurrentCamera;
	local FindFirstChild = game.FindFirstChild;
	local FindFirstChildOfClass = game.FindFirstChildOfClass;
	local WorldToViewportPoint = Camera.WorldToViewportPoint;
	local floor, format, clamp, sub, match, lower, insert = math.floor, string.format, math.clamp, string.sub, string.match, string.lower, table.insert;
	local GetMouseLocation = UserInputService.GetMouseLocation;
	local Vec2 = Vector2.new;
	local Vec3 = Vector3.new;
	local ReplicatedStorage = game:GetService('ReplicatedStorage');
	local VirtualInputManager = getvirtualinputmanager();
	local GuiService = game:GetService('GuiService');
	local Lighting = game:GetService('Lighting');
	local TeleportService = game:GetService('TeleportService');
	local Debris = game:GetService('Debris');
	
	local UiData = {
		Connections = {}, 
		Functions = {},
		Settings = {
			MainColour = {25, 25, 25},
			FontColour = {255, 255, 255},
			AccentDarkColour = {138, 97, 154},
			AccentLightColour = {215, 169, 255},
			DropdownColour = {31, 31, 31},
			SectionColour = {35, 35, 35},
			ButtonColour = {38, 38, 38},
			SliderColour = {38, 38, 38},
			SliderHolderColour = {31, 31, 31},
			ColourPickerBackdropColour = {36, 36, 36},
			TabHolderColour = {35, 35, 35},
			DiscordBackdropColour = {35, 35, 35},
			SelectedTabColour = {215, 169, 255},
			ButtonClickedColour = {28, 28, 28},
			LabelColour = {27, 27, 27},
			TextBoxColour = {27, 27, 27},
			ToggleBackdropColour = {35, 35, 35},
			ToggleUncheckedColour = {53, 53, 53};
			ToggleCircleUncheckedColour = {107, 107, 107},
			KeybindBackdropColour = {38, 38, 38},
			ChatLoggerBackdropColour = {35, 35, 35},
			ChatLoggerColour = {39, 39, 39},
		},
		HiddenFunctions = {},
	};
	
	function UiData.HiddenFunctions:TableToColour(List)
		return Color3.fromRGB(List[1], List[2], List[3]);
	end;
	
	local function NewUiObject(Class, Properties)
		local New = Instance.new(Class);
		syn.protect_gui(New);
		for i,v in pairs(Properties) do New[i] = v; end;
		return New;
	end;
	
	local MainScreen = NewUiObject('ScreenGui', {Parent = game:GetService('CoreGui')});
	local NotifScreen = NewUiObject('ScreenGui', {Parent = game:GetService('CoreGui')});
	local ChatlogsScreen = NewUiObject('ScreenGui', {Enabled = false, Parent = game:GetService('CoreGui')});
	
	function UiData.Functions:MakeInstanceDraggable(Object, Target)
		local DragConnection;
		table.insert(UiData.Connections, Object.InputBegan:Connect(function(Input)
			if (Input.UserInputType == Enum.UserInputType.MouseButton1) then 
				local Start = Target.Position;
	
				DragConnection = UserInputService.InputChanged:Connect(function(DragInput)
					if (DragInput.UserInputType == Enum.UserInputType.MouseMovement) then
						local Offset = DragInput.Position - Input.Position;
						Target.Position = UDim2.new(Start.X.Scale, Start.X.Offset + Offset.X, Start.Y.Scale, Start.Y.Offset + Offset.Y);
					end;
				end)
			end;
		end))
	
		table.insert(UiData.Connections, Object.InputEnded:Connect(function(Input)
			if (Input.UserInputType == Enum.UserInputType.MouseButton1 and DragConnection ~= nil) then DragConnection:Disconnect(); end;
		end))
	end;
	
	function UiData.HiddenFunctions:AddDescription(Txt, Target)
		local OldColour = Target.BackgroundColor3;
		local Result = TextService:GetTextSize(Txt, 14, Enum.Font.Arial, Camera.ViewportSize);
		local DescriptionBackdrop = NewUiObject('Frame', {Size = UDim2.fromOffset(Result.X + 6, Result.Y + 4), Visible = false, BackgroundColor3 = Color3.fromRGB(35, 35, 35), BorderSizePixel = 0, Parent = MainScreen});
		local DescriptionText = NewUiObject('TextLabel', {BackgroundTransparency = 1, Size = UDim2.fromOffset(Result.X, Result.Y), Font = Enum.Font.Arial, Position = UDim2.fromOffset(3, 1), Parent = DescriptionBackdrop, TextSize = 14, Text = Txt, TextColor3 = UiData.HiddenFunctions:TableToColour(UiData.Settings.FontColour)});
	
		local LeaveConnection, HoverConnection;
		local IsHovering = false;
		table.insert(UiData.Connections, Target.MouseEnter:Connect(function()
			IsHovering = true;
			DescriptionBackdrop.Visible = true;
			Target.BackgroundColor3 = Color3.new(OldColour.R / 1.5, OldColour.G / 1.5, OldColour.B / 1.5);
	
			HoverConnection = RunService.RenderStepped:Connect(function()
				DescriptionBackdrop.Position = UDim2.fromOffset(Mouse.X - Result.X, Mouse.Y - (Result.Y + 6));
			end)
	
			table.insert(UiData.Connections, HoverConnection);
	
			LeaveConnection = Target.MouseLeave:Connect(function()
				IsHovering = false;
				DescriptionBackdrop.Visible = false;
				Target.BackgroundColor3 = OldColour;
				HoverConnection:Disconnect();
				LeaveConnection:Disconnect();
			end)
			table.insert(UiData.Connections, LeaveConnection);
		end))
	end;
	
	function UiData.Functions:Kill(Func)
		for i,v in pairs(UiData.Connections) do 
			v:Disconnect();
		end;
	
		MainScreen:Destroy();
		NotifScreen:Destroy();
		ChatlogsScreen:Destroy();
	
		Func();
	end;
	
	local NotificationHolders = {
		['topleft'] = {
			Holder = NewUiObject('Frame', {Size = UDim2.new(1, 0, 0.98, 0), Position = UDim2.new(0, 0, 0, 0), BackgroundTransparency = 1, Parent = NotifScreen});
		},
		['topright'] = {
			Holder = NewUiObject('Frame', {Size = UDim2.new(1, 0, 0.98, 0), Position = UDim2.new(0, 0, 0, 0), BackgroundTransparency = 1, Parent = NotifScreen});
		},
		['bottomleft'] = {
			Holder = NewUiObject('Frame', {Size = UDim2.new(1, 0, 0.98, 0), Position = UDim2.new(0, 0, 0, 0), BackgroundTransparency = 1, Parent = NotifScreen});
		},
		['bottomright'] = {
			Holder = NewUiObject('Frame', {Size = UDim2.new(1, 0, 0.98, 0), Position = UDim2.new(0, 0, 0, 0), BackgroundTransparency = 1, Parent = NotifScreen});
		},
	};
	
	do
		NewUiObject('UIListLayout', {VerticalAlignment = Enum.VerticalAlignment.Top, HorizontalAlignment = Enum.HorizontalAlignment.Left, Padding = UDim.new(0, 8), Parent = NotificationHolders['topleft'].Holder, FillDirection = Enum.FillDirection.Vertical, SortOrder = Enum.SortOrder.LayoutOrder});
		NewUiObject('UIListLayout', {VerticalAlignment = Enum.VerticalAlignment.Top, HorizontalAlignment = Enum.HorizontalAlignment.Right, Padding = UDim.new(0, 8), Parent = NotificationHolders['topright'].Holder, FillDirection = Enum.FillDirection.Vertical, SortOrder = Enum.SortOrder.LayoutOrder});
		NewUiObject('UIListLayout', {VerticalAlignment = Enum.VerticalAlignment.Bottom, HorizontalAlignment = Enum.HorizontalAlignment.Left, Padding = UDim.new(0, 8), Parent = NotificationHolders['bottomleft'].Holder, FillDirection = Enum.FillDirection.Vertical, SortOrder = Enum.SortOrder.LayoutOrder});
		NewUiObject('UIListLayout', {VerticalAlignment = Enum.VerticalAlignment.Bottom, HorizontalAlignment = Enum.HorizontalAlignment.Right, Padding = UDim.new(0, 8), Parent = NotificationHolders['bottomright'].Holder, FillDirection = Enum.FillDirection.Vertical, SortOrder = Enum.SortOrder.LayoutOrder});
	end;
	
	function UiData.Functions:Notify(Title, Length, Corner)
		Corner = Corner:lower():match('top') and Corner:lower():match('left') and 'topleft' or Corner:lower():match('top') and Corner:lower():match('right') and 'topright' or Corner:lower():match('bottom') and Corner:lower():match('left') and 'bottomleft' or Corner:lower():match('bottom') and Corner:lower():match('right') and 'bottomright' or 'topleft';
		local RemoveButton = NewUiObject('TextButton', {Parent = NotificationHolders[Corner].Holder, Size = UDim2.new(0, 435, 0, 45), Font = Enum.Font.Arial, TextSize = 14, TextWrapped = true, Text = Title, BorderSizePixel = 0, BackgroundColor3 = UiData.HiddenFunctions:TableToColour(UiData.Settings.MainColour), TextColor3 = UiData.HiddenFunctions:TableToColour(UiData.Settings.FontColour)});
		local Line = NewUiObject('Frame', {Size = UDim2.new(0, 435, 0, 5), Position = UDim2.new(0, 0, 0, 45), Parent = RemoveButton, BackgroundColor3 = UiData.HiddenFunctions:TableToColour(UiData.Settings.AccentDarkColour), BorderSizePixel = 0});
	
		TweenService:Create(Line, TweenInfo.new(Length, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {Size = UDim2.new(0, 0, 0, 5)}):Play(); 
	
		local ClickedCon; ClickCon = RemoveButton.MouseButton1Click:Connect(function()
			TweenService:Create(Line, TweenInfo.new(0.09, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {BackgroundTransparency = 1}):Play(); 
			TweenService:Create(RemoveButton, TweenInfo.new(0.09, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {BackgroundTransparency = 1}):Play(); 
			task.wait(0.09);
			RemoveButton:Destroy(); Line:Destroy();
		end)
	
		task.delay(Length, function()
			TweenService:Create(RemoveButton, TweenInfo.new(0.09, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {BackgroundTransparency = 1}):Play();
			task.wait(0.09)
			RemoveButton:Destroy(); Line:Destroy();
		end)
	end;
	
	function UiData.Functions:CreateChatLogger(Default)
		local ChatlogsBackdrop = NewUiObject('Frame', {Parent = ChatlogsScreen, BorderSizePixel = 0, BackgroundColor3 = UiData.HiddenFunctions:TableToColour(UiData.Settings.ChatLoggerBackdropColour), Position = UDim2.new(0.786935639, 0, 0.425844342, 0), Size = UDim2.new(0, 350, 0, 250)});
		local ChatLogsTitle = NewUiObject('TextLabel', {Parent = ChatlogsBackdrop, BackgroundTransparency = 1, Size = UDim2.new(1, 0, 0.1, 0), Font = Enum.Font.Arial, Text = 'Chat Logs', TextSize = 14, TextColor3 = UiData.HiddenFunctions:TableToColour(UiData.Settings.FontColour)});
		local MessageHolderBackdrop = NewUiObject('Frame', {Parent = ChatlogsBackdrop, BorderSizePixel = 0, BackgroundColor3 = UiData.HiddenFunctions:TableToColour(UiData.Settings.ChatLoggerColour), Position = UDim2.new(0, 0, 0.1, 0), Size = UDim2.new(1, 0, 0.9, 0)});
		local MessageHolder = NewUiObject('ScrollingFrame', {ScrollingEnabled = false, Parent = MessageHolderBackdrop, BackgroundTransparency = 1, Position = UDim2.new(0.02, 0, 0, 0), Size = UDim2.new(0.98, 0, 1, 0), ScrollBarThickness = 0});
		local MessageLayout = NewUiObject('UIListLayout', {Parent = MessageHolder, SortOrder = Enum.SortOrder.LayoutOrder});
		
		UiData.Functions:MakeInstanceDraggable(ChatLogsTitle, ChatlogsBackdrop);
	
		MessageLayout:GetPropertyChangedSignal('AbsoluteContentSize'):Connect(function() 
			MessageHolder.CanvasSize = UDim2.new(1, 0, 0, MessageLayout.AbsoluteContentSize.Y);
			MessageHolder.CanvasPosition = Vec2(0, MessageLayout.AbsoluteContentSize.Y);
		end)
	
		local MessageHandler = {};
	
		function MessageHandler:Toggle()
			if (ChatlogsScreen and ChatlogsScreen.Enabled == true) then 
				ChatlogsScreen.Enabled = false;
			else
				ChatlogsScreen.Enabled = true;
			end;
		end;
	
		function MessageHandler:CreateMessage(Message, Colour)
			Message = Message or '';
			local MessageLabel = NewUiObject('TextLabel', {Parent = MessageHolder, BackgroundTransparency = 1, TextWrapped = true, Font = Enum.Font.Arial, Text = Message, TextSize = 14, TextColor3 = Colour == nil and UiData.HiddenFunctions:TableToColour(UiData.Settings.FontColour) or Colour, Position = UDim2.new(0.0514285713, 0, 0, 0), TextXAlignment = Enum.TextXAlignment.Left, Size = UDim2.new(0.974285722, 0, 0, 12)});
			local TargetSize = TextService:GetTextSize(Message, 14, Enum.Font.Arial, Vec2(MessageLabel.AbsoluteSize.X, 2^30));
			MessageLabel.Size = UDim2.new(0.974285722, 0, 0, TargetSize.Y);
		end;
	
		return MessageHandler;
	end;
	
	function UiData.Functions:ToggleUi()
		if (MainScreen and MainScreen.Enabled == true) then 
			MainScreen.Enabled = false;
		else
			MainScreen.Enabled = true;
		end;
	end;
	
	function UiData.Functions:CreateWindow(Version, GameThumbnail, GameName, Logo)
		DiscordThumbnail = DiscordThumbnail or 'rbxasset://textures/ui/GuiImagePlaceholder.png';
		Discord = Discord or 'Korotbh#4422';
		GameThumbnail = GameThumbnail or 'rbxasset://textures/ui/GuiImagePlaceholder.png';
		Version = Version or 'Public Version';
		GameName = GameName or 'Rogue Lineage';
		Logo = Logo or 'rbxasset://textures/ui/GuiImagePlaceholder.png';
	
		local Main = NewUiObject('Frame', {Name = 'Main', Parent = MainScreen, AnchorPoint = Vector2.new(0.5, 0.5), BackgroundColor3 = UiData.HiddenFunctions:TableToColour(UiData.Settings.MainColour), BorderSizePixel = 0, Position = UDim2.new(0.5, 0, 0.5, 0), Size = UDim2.new(0, 600, 0, 495)});
		local Containers = NewUiObject('Folder', {Parent = Main});
		local MainCorner = NewUiObject('UICorner', {Parent = Main});
		local DiscBackdrop = NewUiObject('Frame', {Parent = Main, BackgroundColor3 = UiData.HiddenFunctions:TableToColour(UiData.Settings.DiscordBackdropColour), Position = UDim2.new(0.152093664, 0, 0, 0), Size = UDim2.new(0.847906351, 0, 0.0961923897, 0)});
		local DiscBackdropCorner = NewUiObject('UICorner', {Parent = DiscBackdrop});
		local GameBackdrop = NewUiObject('Frame', {Parent = Main, BackgroundTransparency = 1, Position = UDim2.new(0.160158217, 0, 0.0946643502, 0), Size = UDim2.new(0.839841783, 0, 0.177125439, 0)});
		local GameBackdropLogo = NewUiObject('ImageLabel', {Parent = GameBackdrop, BackgroundTransparency = 1, Position = UDim2.new(0.0233727284, 0, 0.159753665, 0), Size = UDim2.new(0, 105, 0, 59), Image = GameThumbnail});
		local GameBackdropCorner = NewUiObject('UICorner', {Parent = GameBackdropLogo});
		local GameNameLabel = NewUiObject('TextLabel', {BackgroundTransparency = 1, Position = UDim2.new(0.264, 0, 0.16, 0), Size = UDim2.new(0.753, 0, 0.681, 0), Font = Enum.Font.Arial, Text = GameName .. '\n' .. Version, TextColor3 = UiData.HiddenFunctions:TableToColour(UiData.Settings.FontColour), TextXAlignment = Enum.TextXAlignment.Left, TextSize = 16, Parent = GameBackdrop});
		local TabHolder = NewUiObject('Frame', {Parent = Main, BackgroundColor3 = UiData.HiddenFunctions:TableToColour(UiData.Settings.TabHolderColour), Size = UDim2.new(0.160158202, 0, 1, 0)});
		local TabHolderCorner = NewUiObject('UICorner', {Parent = TabHolder});
		local TabButtonHolder = NewUiObject('Frame', {Parent = TabHolder, BackgroundTransparency = 1, Position = UDim2.new(0.0201341528, 0, 0.196392775, 0), Size = UDim2.new(1, 0, 0.803607225, 0)});
		local TabContainers = NewUiObject('Folder', {Parent = TabButtonHolder});
		local TabButtonListLayout = NewUiObject('UIListLayout', {HorizontalAlignment = Enum.HorizontalAlignment.Center, SortOrder = Enum.SortOrder.LayoutOrder, Parent = TabContainers});
		local TabHolderLine = NewUiObject('Frame', {Parent = TabHolder, BorderSizePixel = 0, BackgroundColor3 = UiData.HiddenFunctions:TableToColour(UiData.Settings.TabHolderColour), Position = UDim2.new(0.919462979, 0, 0, 0), Size = UDim2.new(0.101000004, 0, 1, 0)});
		local LogoFrame = NewUiObject('ImageLabel', {Parent = TabHolder, BackgroundTransparency = 1, Size = UDim2.new(0, 100, 0, 100), Image = Logo});
		local TabHandler = {};
	
		function TabHandler:CreateTab(Name, Logo)
			Logo = Logo or 'rbxasset://textures/ui/GuiImagePlaceholder.png';
			local SectionBackdrop = NewUiObject('ScrollingFrame', {Parent = Containers, BackgroundTransparency = 1, Position = UDim2.new(0.163000003, 0, 0.272000015, 0), Size = UDim2.new(0.837000012, 0, 0.727999985, 0), ScrollBarThickness = 7, BorderSizePixel = 0});
			local LeftHolder = NewUiObject('Frame', {BackgroundTransparency = 1, Parent = SectionBackdrop, Position = UDim2.new(0, 5, 0, 0), Size = UDim2.new(0, 240, 0, 360)});
			local RightHolder = NewUiObject('Frame', {BackgroundTransparency = 1, Parent = SectionBackdrop, Position = UDim2.new(0.5, 0, 0, 0), Size = UDim2.new(0, 240, 0, 360)});
			local SectionListLayoutLeft = NewUiObject('UIListLayout', {Padding = UDim.new(0, 5), Parent = LeftHolder});
			local SectionListLayoutRight = NewUiObject('UIListLayout', {Padding = UDim.new(0, 5), Parent = RightHolder});
			local TabButtonBackdrop = NewUiObject('TextButton', {Parent = TabContainers, BackgroundTransparency = 1, Size = UDim2.new(0, 50, 0, 50), Text = ''});
			local TabButton = NewUiObject('TextButton', {BackgroundTransparency = 1, Position = UDim2.new(0, 0, 0.699999988, 0), Size = UDim2.new(1, 0, 0.200000003, 0), Font = Enum.Font.Arial, Text = Name, TextSize = 14, TextColor3 = UiData.HiddenFunctions:TableToColour(UiData.Settings.FontColour), Parent = TabButtonBackdrop});
			local TabButtonImage = NewUiObject('ImageButton', {Parent = TabButtonBackdrop, BackgroundTransparency = 1, Position = UDim2.new(0.229721949, 0, 0.125794336, 0), Size = UDim2.new(0.5, 0, 0.5, 0), Image = Logo});
	
			local function OnTabPressed()
				for i,v in pairs(Containers:GetChildren()) do 
					v.Visible = false;
				end;
				SectionBackdrop.Visible = true;
	
				for i,v in pairs(TabContainers:GetChildren()) do 
					if (v.ClassName == 'UIListLayout') then continue; end;
					for q,r in pairs(v:GetChildren()) do 
						if (r.ClassName == 'TextButton') then 
							TweenService:Create(r, TweenInfo.new(0.2, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {TextColor3 = Color3.fromRGB(255, 255, 255)}):Play(); 
						elseif (r.ClassName == 'ImageButton') then
							TweenService:Create(r, TweenInfo.new(0.2, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {ImageColor3 = Color3.fromRGB(255, 255, 255)}):Play(); 
						end;
					end;
				end;
	
				TweenService:Create(TabButtonImage, TweenInfo.new(0.2, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {ImageColor3 = UiData.HiddenFunctions:TableToColour(UiData.Settings.SelectedTabColour)}):Play(); 
				TweenService:Create(TabButton, TweenInfo.new(0.2, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {TextColor3 = UiData.HiddenFunctions:TableToColour(UiData.Settings.SelectedTabColour)}):Play(); 
				SectionBackdrop.Visible = true;
			end;
	
			local function ResizeCanvas()
				local LeftLarger = SectionListLayoutLeft.AbsoluteContentSize.Y >= SectionListLayoutRight.AbsoluteContentSize.Y;
				SectionBackdrop.CanvasSize = UDim2.new(0, 0, 0, LeftLarger == true and SectionListLayoutLeft.AbsoluteContentSize.Y or SectionListLayoutRight.AbsoluteContentSize.Y);
			end;
	
			SectionListLayoutLeft:GetPropertyChangedSignal('AbsoluteContentSize'):Connect(ResizeCanvas);
			SectionListLayoutRight:GetPropertyChangedSignal('AbsoluteContentSize'):Connect(ResizeCanvas);
	
	
			table.insert(UiData.Connections, TabButton.MouseButton1Click:Connect(OnTabPressed));
			table.insert(UiData.Connections, TabButtonImage.MouseButton1Click:Connect(OnTabPressed));
			table.insert(UiData.Connections, TabButtonBackdrop.MouseButton1Click:Connect(OnTabPressed));
	
			OnTabPressed();
			
			local SectionHandler = {};
			local ColourPickers = {};
	
			function SectionHandler:CreateSection(Title, Direction)
				Direction = Direction or 'left';
	
				local SectionOutline = NewUiObject('Frame', {Parent = SectionHolder, BackgroundColor3 = UiData.HiddenFunctions:TableToColour(UiData.Settings.AccentDarkColour), BorderSizePixel = 0, Size = UDim2.new(0, 242.5, 0, 396), Parent = (Direction:lower() == 'left' and LeftHolder or RightHolder)});
				local Section = NewUiObject('Frame', {Parent = SectionOutline, BackgroundColor3 = UiData.HiddenFunctions:TableToColour(UiData.Settings.SectionColour), BorderSizePixel = 0, Size = UDim2.new(1, 0, 1, -2), Position = UDim2.new(0, 0, 0, 2)});
				local SectionLayout = NewUiObject('UIListLayout', {Parent = Section, SortOrder = Enum.SortOrder.LayoutOrder});
				local SectionTitle = NewUiObject('TextLabel', {Parent = Section, BackgroundTransparency = 1, Size = UDim2.new(1, 0, 0, 24), Font = Enum.Font.Arial, Text = Title, TextSize = 14, TextColor3 = UiData.HiddenFunctions:TableToColour(UiData.Settings.FontColour)});
	
				SectionLayout:GetPropertyChangedSignal('AbsoluteContentSize'):Connect(function()
					SectionOutline.Size = UDim2.new(0, 242.5, 0, SectionLayout.AbsoluteContentSize.Y);
					Section.Size = UDim2.new(1, 0, 0, SectionLayout.AbsoluteContentSize.Y);
				end);
	
				local InnerHandler = {};
	
				function InnerHandler:CreateButton(Title, Callback, Parent)
					local ButtonBackdrop = NewUiObject('Frame', {Name = Title, Parent = Parent == nil and Section or Parent, BackgroundColor3 = UiData.HiddenFunctions:TableToColour(UiData.Settings.ButtonColour), BorderSizePixel = 0, Size = UDim2.new(0, 240, 0, 38)});
					local Button = NewUiObject('TextButton', {Text = Title, Parent = ButtonBackdrop, BackgroundTransparency = 1, Position = UDim2.new(0, 10, 0, 0), Font = Enum.Font.Arial, TextSize = 14, TextColor3 = UiData.HiddenFunctions:TableToColour(UiData.Settings.FontColour), TextXAlignment = Enum.TextXAlignment.Left, Size = UDim2.new(0.954326153, 0, 1, 0)});
	
					Button.MouseButton1Click:Connect(function()
						task.spawn(Callback);
						TweenService:Create(ButtonBackdrop, TweenInfo.new(0.09, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {BackgroundColor3 = UiData.HiddenFunctions:TableToColour(UiData.Settings.ButtonClickedColour)}):Play(); 
						task.wait(0.09);
						TweenService:Create(ButtonBackdrop, TweenInfo.new(0.09, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {BackgroundColor3 = UiData.HiddenFunctions:TableToColour(UiData.Settings.ButtonColour)}):Play(); 
					end);
	
					local ButtonHandler = {};
	
					function ButtonHandler:AddDescription(Txt)
						UiData.HiddenFunctions:AddDescription(Txt, Button);
					end;
	
					return ButtonHandler;
				end;
	
				function InnerHandler:CreateColourPicker(Title, DefaultColour, Callback, Parent, NoOveride)
					Title = Title or '';
					DefaultColour = DefaultColour or Color3.fromRGB(255, 255, 255);
					Callback = Callback or function() end;
	
					local ColourBackdrop = NewUiObject('Frame', {Name = Title, Parent = Parent == nil and Section or Parent, BackgroundColor3 = UiData.HiddenFunctions:TableToColour(UiData.Settings.ColourPickerBackdropColour), BorderSizePixel = 0, Size = UDim2.new(0, 240, 0, 38), BackgroundTransparency = NoOveride == true and 1 or 0});
					local ColourTitle = NewUiObject('TextLabel', {Parent = ColourBackdrop, BackgroundTransparency = 1, Position = UDim2.new(0.0456736237, 0, 0, 0), Size = UDim2.new(0.954326093, 0, 1, 0), Font = Enum.Font.Arial, Text = Title, TextColor3 = UiData.HiddenFunctions:TableToColour(UiData.Settings.FontColour), TextSize = 14, TextXAlignment = Enum.TextXAlignment.Left});
					local ColourDisplay = NewUiObject('TextButton', {Text = '', Parent = ColourBackdrop, AnchorPoint = Vector2.new(0, 0.5), BackgroundColor3 = DefaultColour, Position = UDim2.new(0.787500024, 0, 0.5, 0), Size = UDim2.new(0, 39, 0, 25)});
					local ColourCorner = NewUiObject('UICorner', {CornerRadius = UDim.new(0, 4), Parent = ColourDisplay});
	
					local ColourPickerBackdrop = NewUiObject('Frame', {Visible = false, Parent = MainScreen, BackgroundColor3 = UiData.HiddenFunctions:TableToColour(UiData.Settings.ColourPickerBackdropColour), Position = UDim2.new(0.669879496, 0, 0.210314065, 0), Size = UDim2.new(0, 290, 0, 275), BorderSizePixel = 0});
					local ColourBoxDisplayBackdrop = NewUiObject('Frame', {Parent = ColourPickerBackdrop, Position = UDim2.new(0, 5, 0, 5), Size = UDim2.new(0, 230, 0, 230), BorderSizePixel = 0});
					local ColourBox = NewUiObject('ImageLabel', {Parent = ColourBoxDisplayBackdrop, BackgroundTransparency = 1, Size = UDim2.new(1, 0, 1, 0), Image = 'rbxassetid://4155801252'});
					local ColourCursor = NewUiObject('Frame', {Parent = ColourBox, BackgroundColor3 = Color3.fromRGB(255, 255, 255), BorderSizePixel = 0, AnchorPoint = Vector2.new(0.5, 0.5), Size = UDim2.new(0, 5, 0, 5), Position = UDim2.new(0.5, 0, 0.5, 0)});
					local CursorCorner = NewUiObject('UICorner', {CornerRadius = UDim.new(0, 99), Parent = ColourCursor});
					local ColourDimmer = NewUiObject('Frame', {BackgroundColor3 = Color3.fromRGB(255, 255, 255), Parent = ColourPickerBackdrop, BorderSizePixel = 0, Position = UDim2.new(0, 240, 0, 5), Size = UDim2.new(0, 20, 0, 230)});
					local ColourDimmerGradient = NewUiObject('UIGradient', {Color = ColorSequence.new({ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 255, 255)), ColorSequenceKeypoint.new(1, Color3.fromRGB(1, 1, 1))}), Rotation = 90, Parent = ColourDimmer});
					local ColourDimmerCursor = NewUiObject('Frame', {Parent = ColourDimmer, BackgroundColor3 = Color3.fromRGB(16, 16, 16), BorderSizePixel = 0, Size = UDim2.new(1, 0, 0, 4), Position = UDim2.new(0, 0, 0.5, 0)});
					local ColourSlider = NewUiObject('Frame', {BackgroundColor3 = Color3.fromRGB(255, 255, 255), Parent = ColourPickerBackdrop, BorderSizePixel = 0, Position = UDim2.new(0, 265, 0, 5), Size = UDim2.new(0, 20, 0, 230)});
					local ColourSliderGradient = NewUiObject('UIGradient', {Rotation = 90, Parent = ColourSlider, Color = ColorSequence.new({ColorSequenceKeypoint.new(0, Color3.fromHSV(0, 1, 1)), ColorSequenceKeypoint.new(0.1, Color3.fromHSV(0.1, 1, 1)), ColorSequenceKeypoint.new(0.2, Color3.fromHSV(0.2, 1, 1)), ColorSequenceKeypoint.new(0.30000000000000004, Color3.fromHSV(0.30000000000000004, 1, 1)), ColorSequenceKeypoint.new(0.4, Color3.fromHSV(0.4, 1, 1)), ColorSequenceKeypoint.new(0.5, Color3.fromHSV(0.5, 1, 1)), ColorSequenceKeypoint.new(0.6, Color3.fromHSV(0.6, 1, 1)), ColorSequenceKeypoint.new(0.7, Color3.fromHSV(0.7, 1, 1)), ColorSequenceKeypoint.new(0.7999999999999999, Color3.fromHSV(0.7999999999999999, 1, 1)), ColorSequenceKeypoint.new(0.8999999999999999, Color3.fromHSV(0.8999999999999999, 1, 1)), ColorSequenceKeypoint.new(0.9999999999999999, Color3.fromHSV(0.9999999999999999, 1, 1))})});
					local ColourSliderCursor = NewUiObject('Frame', {Parent = ColourSlider, BackgroundColor3 = Color3.fromRGB(16, 16, 16), BorderSizePixel = 0, Size = UDim2.new(1, 0, 0, 4), Position = UDim2.new(0, 0, 0.5, 0)});
					local ColourDisplayBox = NewUiObject('Frame', {Parent = ColourPickerBackdrop, BackgroundColor3 = DefaultColour, Position = UDim2.new(0, 240, 0, 240), Size = UDim2.new(0, 45, 0, 30), BorderSizePixel = 0});
					local ColourFinal = NewUiObject('TextLabel', {Parent = ColourPickerBackdrop, BackgroundTransparency = 1, Position = UDim2.new(0, 10, 0, 240), Size = UDim2.new(0, 225, 0, 30), Font = Enum.Font.Arial, Text = ('R: %0.f G: %0.f B: %0.f | #%s'):format(DefaultColour.R * 255, DefaultColour.G * 255, DefaultColour.B * 255, DefaultColour:ToHex():upper()), TextSize = 14, TextXAlignment = Enum.TextXAlignment.Left, TextColor3 = UiData.HiddenFunctions:TableToColour(UiData.Settings.FontColour)});
	
					table.insert(ColourPickers, ColourPickerBackdrop);
	
					local Hue, Saturation, Vibrance = Color3.toHSV(DefaultColour);
					local CurrentColour = Color3.toHSV(DefaultColour);
	
					table.insert(UiData.Connections, ColourDisplay.MouseButton1Click:Connect(function()
						ColourPickerBackdrop.Position = UDim2.new(0, (Main.AbsolutePosition.X + Main.AbsoluteSize.X) + 10, 0, Main.AbsolutePosition.Y);
						ColourPickerBackdrop.Visible = ColourPickerBackdrop.Visible == false and true or false;
						for i,v in pairs(ColourPickers) do v.Visible = v == ColourPickerBackdrop and ColourPickerBackdrop.Visible or false; end;
					end))
	
					local function DisplayCurrentValues()
						CurrentColour = Color3.fromHSV(Hue, Saturation, Vibrance);
						ColourFinal.Text = ('R: %0.f G: %0.f B: %0.f | #%s'):format(CurrentColour.R * 255, CurrentColour.G * 255, CurrentColour.B * 255, CurrentColour:ToHex():upper());
						ColourDisplayBox.BackgroundColor3 = CurrentColour;
						ColourDisplay.BackgroundColor3 = CurrentColour;
						ColourBoxDisplayBackdrop.BackgroundColor3 = Color3.fromHSV(Hue, 1, 1);
						Callback(CurrentColour);
					end;
	
					DisplayCurrentValues();
	
					local Dragging, DragConnection = false;
	
					table.insert(UiData.Connections, ColourBox.InputBegan:Connect(function(Input)
						if (Input.UserInputType == Enum.UserInputType.MouseButton1) then 
							local Start = ColourCursor.Position;
							Dragging = true;
	
							DragConnection = UserInputService.InputChanged:Connect(function(DragInput)
								if (DragInput.UserInputType == Enum.UserInputType.MouseMovement) then
									local MinX = ColourBox.AbsolutePosition.X;
									local MaxX = MinX + ColourBox.AbsoluteSize.X;
									local MouseX = math.clamp(Mouse.X, MinX, MaxX);
	
									local MinY = ColourBox.AbsolutePosition.Y;
									local MaxY = MinY + ColourBox.AbsoluteSize.Y;
									local MouseY = math.clamp(Mouse.Y, MinY, MaxY);
	
									Saturation, Vibrance = (MouseX - MinX) / (MaxX - MinX), 1 - (MouseY - MinY) / (MaxY - MinY);
	
									if (Mouse.X >= MinX and Mouse.X <= MaxX and Mouse.Y >= MinY and Mouse.Y <= MaxY) then 
										ColourCursor.Position = UDim2.new(0, (MouseX - MinX), 0, (MouseY - MinY));
									end;
									DisplayCurrentValues();
								end;
							end)
	
							table.insert(UiData.Connections, DragConnection);
						end;
					end))
	
					table.insert(UiData.Connections, ColourBox.InputEnded:Connect(function(Input)
						if (Input.UserInputType == Enum.UserInputType.MouseButton1 and DragConnection) then DragConnection:Disconnect(); Dragging = false; end;
					end))
	
					local Dragging2, DragConnection2 = false;
	
					table.insert(UiData.Connections, ColourSlider.InputBegan:Connect(function(Input)
						if (Input.UserInputType == Enum.UserInputType.MouseButton1) then 
							local Start = ColourCursor.Position;
							Dragging2 = true;
	
							DragConnection2 = UserInputService.InputChanged:Connect(function(DragInput)
								if (DragInput.UserInputType == Enum.UserInputType.MouseMovement) then
									local MinY = ColourSlider.AbsolutePosition.Y;
									local MaxY = MinY + ColourSlider.AbsoluteSize.Y;
									local MouseY = math.clamp(Mouse.Y, MinY, MaxY);
	
									Hue = (MouseY - MinY) / (MaxY - MinY);
	
									if (Mouse.Y >= MinY and Mouse.Y <= MaxY) then 
										ColourSliderCursor.Position = UDim2.new(0, 0, 0, (MouseY - MinY));
									end;
									DisplayCurrentValues();
								end;
							end)
	
							table.insert(UiData.Connections, DragConnection2);
						end;
					end))
	
					table.insert(UiData.Connections, ColourSlider.InputEnded:Connect(function(Input)
						if (Input.UserInputType == Enum.UserInputType.MouseButton1 and DragConnection2) then DragConnection2:Disconnect(); Dragging2 = false; end;
					end))
	
					local Dragging3, DragConnection3 = false;
	
					table.insert(UiData.Connections, ColourDimmer.InputBegan:Connect(function(Input)
						if (Input.UserInputType == Enum.UserInputType.MouseButton1) then 
							local Start = ColourCursor.Position;
							Dragging3 = true;
	
							DragConnection3 = UserInputService.InputChanged:Connect(function(DragInput)
								if (DragInput.UserInputType == Enum.UserInputType.MouseMovement) then
									local MinY = ColourSlider.AbsolutePosition.Y;
									local MaxY = MinY + ColourSlider.AbsoluteSize.Y;
									local MouseY = math.clamp(Mouse.Y, MinY, MaxY);
	
									Vibrance = 1 - (MouseY - MinY) / (MaxY - MinY);
	
									if (Mouse.Y >= MinY and Mouse.Y <= MaxY) then 
										ColourDimmerCursor.Position = UDim2.new(0, 0, 0, (MouseY - MinY));
									end;
									DisplayCurrentValues();
								end;
							end)
	
							table.insert(UiData.Connections, DragConnection3);
						end;
					end))
	
					table.insert(UiData.Connections, ColourDimmer.InputEnded:Connect(function(Input)
						if (Input.UserInputType == Enum.UserInputType.MouseButton1 and DragConnection3) then DragConnection3:Disconnect(); Dragging3 = false; end;
					end))
	
					local ColourHandler = {};
	
					function ColourHandler:AddDescription(Txt)
						UiData.HiddenFunctions:AddDescription(Txt, ColourPickerBackdrop);
						UiData.HiddenFunctions:AddDescription(Txt, ColourBackdrop);
					end;
	
					return ColourHandler;
				end;
	
				function InnerHandler:CreateLabel(Title, Parent)
					local LabelBackdrop = NewUiObject('Frame', {Name = Title, Parent = Parent == nil and Section or Parent, BackgroundColor3 = UiData.HiddenFunctions:TableToColour(UiData.Settings.LabelColour), BorderSizePixel = 0, Size = UDim2.new(1, 0, 0, 38)});
					local Label = NewUiObject('TextLabel', {Text = Title, Parent = LabelBackdrop, BackgroundTransparency = 1, Size = UDim2.new(1, 0, 1, 0), Font = Enum.Font.Arial, TextSize = 14, TextColor3 = UiData.HiddenFunctions:TableToColour(UiData.Settings.FontColour)});
	
					local LabelHandler = {};
	
					function LabelHandler:ChangeText(NewText)
						Label.Text = NewText;
					end;
	
					function LabelHandler:AddDescription(Txt)
						UiData.HiddenFunctions:AddDescription(Txt, LabelBackdrop);
					end;
	
					return LabelHandler;
				end;
	
				function InnerHandler:CreateSlider(Title, Min, Max, Start, Suffix, Callback, DecimalCount, Parent)
					Start = Start or Min;
					DecimalCount = DecimalCount or 0;
					local SliderBackdrop = NewUiObject('Frame', {Name = Title, Parent = Parent == nil and Section or Parent, BackgroundColor3 = UiData.HiddenFunctions:TableToColour(UiData.Settings.SliderColour), BorderSizePixel = 0, Size = UDim2.new(0, 240, 0, 38)});
					local SliderHolder = NewUiObject('Frame', {Parent = SliderBackdrop, BackgroundColor3 = UiData.HiddenFunctions:TableToColour(UiData.Settings.SliderHolderColour), Position = UDim2.new(0.0958333313, 0, 0.578947365, 0), Size = UDim2.new(0, 200, 0, 8)});
					local SliderHolderCorner = NewUiObject('UICorner', {CornerRadius = UDim.new(0, 99), Parent = SliderHolder});
					local SliderFill = NewUiObject('Frame', {BorderSizePixel = 0, BackgroundColor3 = UiData.HiddenFunctions:TableToColour(UiData.Settings.AccentDarkColour), Parent = SliderHolder, Size = UDim2.new(Start / Max, 0, 1, 0)});
					local SliderFillCorner = NewUiObject('UICorner', {CornerRadius = UDim.new(0, 99), Parent = SliderFill});
					local SliderAmount = NewUiObject('TextLabel', {Parent = SliderHolder, BackgroundTransparency = 1, Position = UDim2.new(0, 0, -2.125, 0), TextXAlignment = Enum.TextXAlignment.Right, Size = UDim2.new(0.98, 0, 0, 16), Font = Enum.Font.Arial, Text = string.format('%.' .. DecimalCount .. 'f', SliderFill.Size.X.Scale * Max) .. Suffix, TextSize = 14, TextColor3 = UiData.HiddenFunctions:TableToColour(UiData.Settings.FontColour)});
					local SliderTitle = NewUiObject('TextLabel', {Parent = SliderHolder, BackgroundTransparency = 1, Position = UDim2.new(-0.0599999987, 0, -2.125, 0), Size = UDim2.new(0, 85, 0, 16), Font = Enum.Font.Arial, Text = Title, TextSize = 14, TextColor3 = UiData.HiddenFunctions:TableToColour(UiData.Settings.FontColour), TextXAlignment = Enum.TextXAlignment.Left});
	
					local Dragging, DragConnection = false;
	
					table.insert(UiData.Connections, SliderHolder.InputBegan:Connect(function(Input)
						if (Input.UserInputType == Enum.UserInputType.MouseButton1) then
							Dragging = true;
	
							DragConnection = UserInputService.InputChanged:Connect(function(DragInput)
								if (DragInput.UserInputType == Enum.UserInputType.MouseMovement) then
									local Value = UDim2.new(math.clamp((DragInput.Position.X - SliderHolder.AbsolutePosition.X) / SliderHolder.AbsoluteSize.X, 0, 1), 0, 1, 0);
									SliderFill.Size = UDim2.new(Value.X.Scale, 0, 1, 0);
									Value = string.format('%.' .. DecimalCount .. 'f', Value.X.Scale * Max);
									SliderAmount.Text = Value .. Suffix;
									Callback(tonumber(Value));
								end;
							end)
						end;
					end))
	
					Callback(SliderFill.Size.X.Scale * Max);
	
					table.insert(UiData.Connections, SliderHolder.InputEnded:Connect(function(Input)
						if (Input.UserInputType == Enum.UserInputType.MouseButton1 and DragConnection) then DragConnection:Disconnect(); Dragging = false; end;
					end))
	
					local SliderHandler = {};
	
					function SliderHandler:AddDescription(Txt)
						UiData.HiddenFunctions:AddDescription(Txt, SliderBackdrop);
					end;
	
					return SliderHandler;
				end;
	
				function InnerHandler:CreateTextbox(Default, Callback, Parent)
					Default = Default or 'Textbox';
	
					local TextBoxBackdrop = NewUiObject('Frame', {Name = Default, Parent = Parent == nil and Section or Parent, BackgroundTransparency = 1, Size = UDim2.new(1, 0, 0, 38)});
					local TextBox = NewUiObject('TextBox', {Parent = TextBoxBackdrop, BorderSizePixel = 0, BackgroundColor3 = UiData.HiddenFunctions:TableToColour(UiData.Settings.TextBoxColour), Size = UDim2.new(1, 0, 0, 38), Font = Enum.Font.Arial, Text = Default, TextSize = 14, TextWrapped = true, TextColor3 = UiData.HiddenFunctions:TableToColour(UiData.Settings.FontColour)});
	
					table.insert(UiData.Connections, TextBox:GetPropertyChangedSignal('Text'):Connect(function()
						Callback(TextBox.Text);
					end))
	
					local TextHandler = {};
	
					function TextHandler:AddDescription(Txt)
						UiData.HiddenFunctions:AddDescription(Txt, TextBoxBackdrop);
					end;
	
					return TextHandler;
				end;
	
				function InnerHandler:CreateToggle(Title, Default, Callback, Parent, CustomPos)
					local Toggled = false;
	
					local ToggleBackdrop = NewUiObject('Frame', {Name = Title, Parent = Parent == nil and Section or Parent, BackgroundColor3 = UiData.HiddenFunctions:TableToColour(UiData.Settings.ToggleBackdropColour), BorderSizePixel = 0, Size = UDim2.new(0, 240, 0, 38)});
					local ToggleName = NewUiObject('TextLabel', {Parent = ToggleBackdrop, BackgroundTransparency = 1, Position = UDim2.new(0.0456738546, 0, 0, 0), Size = UDim2.new(0.954326153, 0, 1, 0), Font = Enum.Font.Arial, Text = Title, TextSize = 14, TextXAlignment = Enum.TextXAlignment.Left, TextColor3 = UiData.HiddenFunctions:TableToColour(UiData.Settings.FontColour)});
					local ToggleButton = NewUiObject('TextButton', {AnchorPoint = Vector2.new(0.5, 0.5), Parent = ToggleBackdrop, BackgroundColor3 = UiData.HiddenFunctions:TableToColour(UiData.Settings.ToggleUncheckedColour), Position = CustomPos == nil and UDim2.new(0.862500012, 0, 0.5, 0) or UDim2.new(0.662999988, 0, 0.5, 0), Size = UDim2.new(0, 36, 0, 19), Text = ''});
					local ToggleButtonCorner = NewUiObject('UICorner', {CornerRadius = UDim.new(0, 99), Parent = ToggleButton});
					local ToggleCircle = NewUiObject('Frame', {AnchorPoint = Vector2.new(0, 0.5), Parent = ToggleButton, BackgroundColor3 = UiData.HiddenFunctions:TableToColour(UiData.Settings.ToggleCircleUncheckedColour), Position = UDim2.new(0, 0, 0.5, 0), Size = UDim2.new(0, 21, 0, 21)});
					local ToggleCircleCorner = NewUiObject('UICorner', {CornerRadius = UDim.new(0, 99), Parent = ToggleCircle});
	
					local function OnToggleClicked()
						if (Toggled == true) then
							Callback(false);
							Toggled = false;
							TweenService:Create(ToggleCircle, TweenInfo.new(0.09, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {BackgroundColor3 = UiData.HiddenFunctions:TableToColour(UiData.Settings.ToggleCircleUncheckedColour)}):Play(); 
							TweenService:Create(ToggleButton, TweenInfo.new(0.09, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {BackgroundColor3 = UiData.HiddenFunctions:TableToColour(UiData.Settings.ToggleUncheckedColour)}):Play(); 
							TweenService:Create(ToggleCircle, TweenInfo.new(0.09, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {Position = UDim2.new(0, 0, 0.5, 0)}):Play(); 
						else
							Callback(true);
							Toggled = true;
							TweenService:Create(ToggleCircle, TweenInfo.new(0.09, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {BackgroundColor3 = UiData.HiddenFunctions:TableToColour(UiData.Settings.AccentLightColour)}):Play();
							TweenService:Create(ToggleButton, TweenInfo.new(0.09, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {BackgroundColor3 = UiData.HiddenFunctions:TableToColour(UiData.Settings.AccentDarkColour)}):Play();  
							TweenService:Create(ToggleCircle, TweenInfo.new(0.09, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {Position = UDim2.new(0.5, 0, 0.5, 0)}):Play(); 
						end;
					end;
	
					if (Default == true) then OnToggleClicked() end;
	
					table.insert(UiData.Connections, ToggleButton.MouseButton1Click:Connect(OnToggleClicked));
	
					local ToggleHandler = {};
	
					function ToggleHandler:AddDescription(Txt)
						UiData.HiddenFunctions:AddDescription(Txt, ToggleBackdrop);
					end;
	
					function ToggleHandler:GetBackdrop()
						return ToggleBackdrop;
					end;
	
					function ToggleHandler:Change()
						OnToggleClicked();
					end;
	
					return ToggleHandler;
				end;
	
				function InnerHandler:CreateKeybind(Title, Bind, Callback, Parent)
					local KeybindBackdrop = NewUiObject('Frame', {Name = Bind, Parent = Parent == nil and Section or Parent, BackgroundColor3 = UiData.HiddenFunctions:TableToColour(UiData.Settings.KeybindBackdropColour), BorderSizePixel = 0, Size = UDim2.new(0, 240, 0, 38)});
					local KeybindChangeButton = NewUiObject('TextButton', {Text = '[' .. Bind .. ']', Parent = KeybindBackdrop, BackgroundTransparency = 1, TextXAlignment = Enum.TextXAlignment.Right, Size = UDim2.new(0.95, 0, 1, 0), Font = Enum.Font.Arial, TextSize = 14, TextColor3 = UiData.HiddenFunctions:TableToColour(UiData.Settings.FontColour)});
					local KeybindName = NewUiObject('TextLabel', {TextXAlignment = Enum.TextXAlignment.Left, Parent = KeybindBackdrop, Font = Enum.Font.Arial, Text = Title, TextSize = 14, TextColor3 = UiData.HiddenFunctions:TableToColour(UiData.Settings.FontColour), Size = UDim2.new(0.954326153, 0, 1, 0), Position = UDim2.new(0.0456738546, 0, 0, 0), BackgroundTransparency = 1});
					
					local WaitingForKeypress = false;
					local BlacklistedKeys = {'W', 'A', 'S', 'D', 'Slash', 'Tab', 'Backquote', 'Unknown', 'Delete', 'Space', 'Escape', 'Backspace'};
					table.insert(UiData.Connections, KeybindChangeButton.MouseButton1Click:Connect(function()
						KeybindChangeButton.Text = '[...]';
						WaitingForKeypress = true;
						TweenService:Create(KeybindBackdrop, TweenInfo.new(0.09, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {BackgroundColor3 = UiData.HiddenFunctions:TableToColour(UiData.Settings.AccentDarkColour)}):Play();  
					end))
	
					local SetKeybind = Bind;
	
					table.insert(UiData.Connections, UserInputService.InputBegan:Connect(function(Input, Processed)
						if (not Processed and WaitingForKeypress == true) then
							local Key = Input.KeyCode.Name;
	
							if (not table.find(BlacklistedKeys, Key)) then
								SetKeybind = Key;
								KeybindChangeButton.Text = '[' .. Key .. ']';
							else
								KeybindChangeButton.Text = '[N/A]';
								SetKeybind = 'N/A';
							end;
							WaitingForKeypress = false;
							TweenService:Create(KeybindBackdrop, TweenInfo.new(0.09, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {BackgroundColor3 = UiData.HiddenFunctions:TableToColour(UiData.Settings.KeybindBackdropColour)}):Play();  
						elseif (not Processed) then
							local Key = Input.KeyCode.Name;
							if (Key == SetKeybind) then 
								Callback();
							end;
						end;
					end))
	
					local BindHandler = {};
	
					function BindHandler:GetBind()
						return SetKeybind;
					end;
	
					function BindHandler:SetBind(Key)
						KeybindChangeButton.Text = '[' .. Key .. ']';
						SetKeybind = Key;
					end;
	
					function BindHandler:AddDescription(Txt)
						UiData.HiddenFunctions:AddDescription(Txt, KeybindBackdrop);
					end;
	
					return BindHandler;
				end;
	
				function InnerHandler:CreateToggleColour(Title, DefaultToggle, DefaultColour, Callback, Parent)
					Title = Title or 'Toggle Colour';
					DefaultToggle = DefaultToggle or false;
					DefaultColour = DefaultColour or Color3.fromRGB(255, 255, 255);
					Callback = Callback or function() end;
	
					local UiObjectToggled = DefaultToggle;
					local ColourCollected = DefaultColour;
	
					local ToggleObject = InnerHandler:CreateToggle('', DefaultToggle, function(Toggled) UiObjectToggled = Toggled; Callback(UiObjectToggled, ColourCollected); end, Parent, UDim2.new(0.662999988, 0, 0.5, 0));
					InnerHandler:CreateColourPicker(Title, DefaultColour, function(Colour) ColourCollected = Colour; Callback(UiObjectToggled, ColourCollected); end, ToggleObject:GetBackdrop(), true);
	
					local ToggleColourHandler = {};
	
					function ToggleColourHandler:AddDescription(Txt)
						UiData.HiddenFunctions:AddDescription(Txt, ToggleObject:GetBackdrop());
					end;
	
					return ToggleColourHandler;
				end;
	
				function InnerHandler:CreateDropdown(Title, Default)
					Default = Default or 'Unselected';
					local Toggled = false;
	
					local DropdownTitleHolder = NewUiObject('Frame', {Parent = Section, BackgroundColor3 = UiData.HiddenFunctions:TableToColour(UiData.Settings.DropdownColour), BorderSizePixel = 0, Size = UDim2.new(1, 0, 0, 63)});
					local ExtendButton = NewUiObject('TextButton', {Parent = DropdownTitleHolder, BackgroundTransparency = 1, Position = UDim2.new(0, 203, 0, 30), Size = UDim2.new(0, 25, 0, 25), Font = Enum.Font.Arial, Text = '+', TextColor3 = UiData.HiddenFunctions:TableToColour(UiData.Settings.FontColour), TextSize = 25});
					local DropdownSelected = NewUiObject('TextLabel', {Parent = DropdownTitleHolder, BackgroundTransparency = 1, Position = UDim2.new(0, 11, 0, 23), Size = UDim2.new(0, 229, 0, 38), Font = Enum.Font.Arial, Text = Default, TextColor3 = UiData.HiddenFunctions:TableToColour(UiData.Settings.FontColour), TextSize = 14, TextXAlignment = Enum.TextXAlignment.Left});
					local DropdownTitle = NewUiObject('TextLabel', {Parent = DropdownTitleHolder, BackgroundTransparency = 1, Position = UDim2.new(0, 11, 0, 0), Size = UDim2.new(0, 229, 0, 38), Font = Enum.Font.Arial, Text = Title, TextColor3 = UiData.HiddenFunctions:TableToColour(UiData.Settings.FontColour), TextSize = 14, TextXAlignment = Enum.TextXAlignment.Left});
					local Dropdown = NewUiObject('ScrollingFrame', {Visible = false, BackgroundColor3 = UiData.HiddenFunctions:TableToColour(UiData.Settings.DropdownColour), Parent = DropdownTitleHolder, BorderSizePixel = 0, Position = UDim2.new(0, 0, 0, 63), Size = UDim2.new(0, 240, 0, 0), ScrollBarThickness = 8});
					local DropdownListLayout = NewUiObject('UIListLayout', {Parent = Dropdown, SortOrder = Enum.SortOrder.LayoutOrder});
	
					local function CountObjects()
						local Count = 0;
						for i,v in pairs(Dropdown:GetChildren()) do if (v ~= DropdownListLayout) then Count += 1; end; end;
						return Count;
					end;
	
					ExtendButton.MouseButton1Click:Connect(function()
						if (Toggled == false) then 
							Dropdown.CanvasSize = UDim2.new(1, 0, 0, DropdownListLayout.AbsoluteContentSize.Y);
							if (CountObjects() > 8) then 
								Dropdown.Size = UDim2.new(1, 0, 0, 304);
								DropdownTitleHolder.Size = UDim2.new(1, 0, 0, 367);
								Dropdown.Visible = true;
							else
								Dropdown.Size = UDim2.new(1, 0, 0, DropdownListLayout.AbsoluteContentSize.Y);
								DropdownTitleHolder.Size = UDim2.new(1, 0, 0, DropdownListLayout.AbsoluteContentSize.Y + 63);
								Dropdown.Visible = true;
							end;
	
							ExtendButton.Text = '-';
							Toggled = true;
						else
							Dropdown.Size = UDim2.new(0, 240, 0, 0);
							Dropdown.Visible = false;
							ExtendButton.Text = '+';
							Toggled = false;
							DropdownTitleHolder.Size = UDim2.new(1, 0, 0, 63);
						end;
					end)
	
					local DropdownHandler = {};
	
					function DropdownHandler:RemoveItem(Name)
						local Item = Dropdown:FindFirstChild(Name);
						if (Item) then Item:Destroy(); end;
					end;
	
					function DropdownHandler:AddItem(Name, Callback)
						local Item = Dropdown:FindFirstChild(Name);
						if (Item) then return; end;
						return InnerHandler:CreateButton(Name, function(Value) DropdownSelected.Text = Name; Callback() end, Dropdown);
					end;
	
					function DropdownHandler:AddColourPicker(Title, Default, Callback)
						local Item = Dropdown:FindFirstChild(Title);
						if (Item) then return {}; end;
						return InnerHandler:CreateColourPicker(Title, Default, Callback, Dropdown);
					end;
	
					function DropdownHandler:AddLabel(Title)
						local Item = Dropdown:FindFirstChild(Title);
						if (Item) then return {}; end;
						return InnerHandler:CreateLabel(Title, Dropdown);
					end;
	
					function DropdownHandler:AddSlider(Title, Min, Max, Start, Suffix, Callback, DecimalCount)
						local Item = Dropdown:FindFirstChild(Title);
						if (Item) then return {}; end;
						return InnerHandler:CreateSlider(Title, Min, Max, Start, Suffix, Callback, DecimalCount, Dropdown);
					end;
	
					function DropdownHandler:AddTextbox(Title, Callback)
						local Item = Dropdown:FindFirstChild(Title);
						if (Item) then return {}; end;
						return InnerHandler:CreateTextbox(Title, Callback, Dropdown);
					end;
	
					function DropdownHandler:AddToggle(Title, Default, Callback)
						local Item = Dropdown:FindFirstChild(Title);
						if (Item) then return {}; end;
						return InnerHandler:CreateToggle(Title, Default, Callback, Dropdown);
					end;
	
					function DropdownHandler:AddToggleColour(Title, DefaultToggle, DefaultColour, Callback)
						local Item = Dropdown:FindFirstChild(Title);
						if (Item) then return {}; end;
						return InnerHandler:CreateToggleColour(Title, DefaultToggle, DefaultColour, Callback, Dropdown);
					end;
	
					function DropdownHandler:AddKeybind(Title, Bind, Callback)
						local Item = Dropdown:FindFirstChild(Title);
						if (Item) then return {}; end;
						return InnerHandler:CreateKeybind(Title, Bind, Callback, Dropdown);
					end;
	
					function DropdownHandler:GetSelected()
						return DropdownSelected.Text;
					end;
	
					function DropdownHandler:AddDescription(Txt)
						UiData.HiddenFunctions:AddDescription(Txt, DropdownTitleHolder);
					end;
	
					return DropdownHandler;
				end;
	
				return InnerHandler;
			end;
			return SectionHandler;
		end;
		UiData.Functions:MakeInstanceDraggable(TabHolder, Main);
		UiData.Functions:MakeInstanceDraggable(DiscBackdrop, Main);
	
		return TabHandler;
	end;
	
	for i,v in pairs(getconnections(Player.Idled)) do
		v:Disable();
	end;
	
	getgenv().RogueVersion = game.PlaceId == 3541987450 and 'Khei' or game.PlaceId == 5208655184 and 'Gaia';
	if (RogueVersion == nil) then return; end;
	
	getgenv().Settings = {};
	local SaveSettings;
	do
		local DefaultSettings = {
			['Toggle Bind'] = 'RightAlt',
			['Notification Location'] = 'Bottom Right',
			['Moderator Notification'] = true,
			['Artifact Notification'] = true,
			['Combat Log Notification'] = true,
			['Illusionist Notification'] = true,
			['Flight Keybind'] = 'Z',
			['Flight Speed'] = 350,
			['Flight Follow Mode'] = 'Camera',
			['Noclip Bind'] = 'P',
			['Chat Logs Enabled'] = true,
			['Chatlogs Bind'] = 'N/A',
			['Spectate Colour'] = {8, 21, 212},
			['Walkspeed Enabled'] = false,
			['Walkspeed Amount'] = 250,
			['Walkspeed Bind'] = 'N/A',
			['No Fall Enabled'] = true,
			['Fall Damage Dampening Amount'] = 100,
			['No Fire Enabled'] = true,
			['Auto Mana Charge Enabled'] = false,
			['Mana Charge Amount'] = 100,
			['Mana Charge Bind'] = 'N/A',
			['No Kill Blocks'] = true,
			['Back Attach Bind'] = 'X',
			['Back Attach Silhouette Colour'] = {82, 192, 202},
			['Back Attach Silhouette Count'] = 2,
			['Back Attach Radius'] = 7,
			['Show Mana Amounts'] = true,
			['Spell Range M1 Colour'] = {37, 0, 252},
			['Spell Range M2 Colour'] = {0, 195, 255},
			['Anti Backcast'] = true,
			['Anti Stun'] = true,
			['Spell Stack'] = true,
			['Climb Speed Enabled'] = false,
			['Climb Speed Multiplier'] = 75,
			['Climbspeed Bind'] = 'N/A',
			['Trinket Box'] = true,
			['Trinket Box Filled'] = true,
			['Trinket Tracer'] = true,
			['Trinket Distance'] = true,
			['Trinket Tracer Location'] = 'Bottom',
			['Trinket Info Outline'] = true,
			['Trinket Info Font'] = 2,
			['Trinket Info Font Size'] = 13,
			['Trinket Distance Text Font'] = 2,
			['Trinket Distance Text Outline'] = true,
			['Trinket Distance Font Size'] = 13,
			['Trinket Tracer Transparency'] = 10,
			['Trinket Tracer Thickness'] = 3,
			['Trinket Box Fill Transparency'] = 15,
			['All Trinket Colours'] = {
				['Rift Gem'] = {255, 0, 255},
				['Amulet of the White King'] = {255, 255, 255},
				['Lannis Amulet'] = {32, 1, 41},
				['Mysterious Artifact'] = {136, 253, 0},
				['Night Stone'] = {0, 0, 0},
				['Howler Friend'] = {156, 126, 126},
				['Phoenix Down'] = {238, 255, 9},
				['Ice Essence'] = {0, 255, 235},
				['Yaalda'] = {24, 1, 72},
				['Idol of the Forgotten'] = {75, 75, 75},
				['Old Ring'] = {32, 32, 32},
				['Opal'] = {255, 255, 255},
				['Scroll'] = {151, 173, 85},
				['Diamond'] = {161, 202, 201},
				['Emerald'] = {0, 255, 0},
				['Ruby'] = {255, 0, 0},
				['Sapphire'] = {0, 255, 0},
				['Ring'] = {16, 11, 20},
				['Goblet'] = {83, 58, 20},
				['Old Amulet'] = {79, 79, 79},
				['Amulet'] = {120, 120, 120},
				['Candy'] = {38, 9, 9},
				['Azael Horn'] = {255, 0, 0},
				['Gem'] = {255, 255, 255}
			},
			['Autopickup Trinkets'] = false,
			['No Fog Enabled'] = true,
			['Max Zoom Enabled'] = true,
			['Fullbright Enabled'] = false,
			['Fullbright Amount'] = 255,
			['Npc Esp'] = true,
			['Npc Outline'] = true,
			['Npc Info Font'] = 2,
			['Npc Info Font Size'] = 13,
			['Npc Info Colour'] = {0, 255, 0},
			['All Npc Names'] = {},
			['Gacha Farm Log Distance'] = 1000,
			['Gacha Farm Moderator Kick Delay'] = 8,
			['Gacha Farm Skip Mod Servers'] = true,
			['Gacha Farm Skip Illus Servers'] = true,
			['Gacha Farm Silver Kick'] = true,
			['Gacha Farm Equip Helmet'] = true,
			['Gacha Farm Equip Chair'] = true,
			['Rare Scroll Kick'] = true,
			['Gacha Farm Scroll Webhook'] = 'Webhook',
			['Gacha Farm General Webhook'] = 'Webhook',
			['Gacha Farm Skip Druid Servers'] = true,
			['Gacha Farm Loaded Accounts'] = {},
			['Artifact Farm Pickup Settings'] = {
				['Rift Gem'] = false,
				['Amulet of the White King'] = false,
				['Lannis Amulet'] = false,
				['Mysterious Artifact'] = false,
				['Night Stone'] = false,
				['Howler Friend'] = false,
				['Phoenix Down'] = true,
				['Ice Essence'] = false,
				['Yaalda'] = true,
				['Idol of the Forgotten'] = true,
				['Old Ring'] = true,
				['Opal'] = true,
				['Scroll'] = false,
				['Diamond'] = true,
				['Emerald'] = true,
				['Ruby'] = true,
				['Sapphire'] = true,
				['Ring'] = true,
				['Goblet'] = true,
				['Old Amulet'] = true,
				['Amulet'] = true,
				['Candy'] = true,
				['Azael Horn'] = false,
			},
			['Artifact Farm Skip Mod Servers'] = true,
			['Artifact Farm Skip Illus Servers'] = true,
			['Artifact Farm Skip Druid Servers'] = true,
			['Artifact Farm Log Distance'] = 100,
			['Artifact Farm One Server'] = false,
			['Artifact Farm Kick On Artifact Pickup'] = false,
			['Artifact Farm Loaded Accounts'] = {},
			['Artifact Farm Account Paths'] = {},
			['Artifact Farm Webhook'] = 'Webhook',
			['CR Farm Pickup Settings'] = {
				['Rift Gem'] = false,
				['Amulet of the White King'] = false,
				['Lannis Amulet'] = false,
				['Mysterious Artifact'] = false,
				['Night Stone'] = false,
				['Howler Friend'] = false,
				['Phoenix Down'] = true,
				['Ice Essence'] = false,
				['Yaalda'] = true,
				['Idol of the Forgotten'] = true,
				['Old Ring'] = true,
				['Opal'] = true,
				['Scroll'] = false,
				['Diamond'] = true,
				['Emerald'] = true,
				['Ruby'] = true,
				['Sapphire'] = true,
				['Ring'] = true,
				['Goblet'] = true,
				['Old Amulet'] = true,
				['Amulet'] = true,
				['Candy'] = true,
				['Azael Horn'] = false,
			},
			['CR Farm Loaded Accounts'] = {},
			['CR Farm Webhook'] = 'Webhook',
			['CR Farm Log Distance'] = 100,
			['CR Farm Skip Mod Servers'] = true,
			['CR Farm Skip Illus Servers'] = true,
			['Cr Farm Skip Druid Servers'] = true,
			['CR Farm Last Looted Min Time'] = 10,
			['CR Farm Kick On Artifact Pickup'] = false,
			['Day Farm Loaded Accounts'] = {},
			['Day Farm Log Distance'] = 1000,
			['Day Farm Skip Druid Servers'] = true,
			['Pickup Bags'] = false,
			['Pickup Ingredients'] = false,
			['Show Inventory'] = true,
			['Instant Log Bind'] = 'N/A',
		};
		local KHV2Folder = 'Koro Hub V2'; 
		local KHV2File = KHV2Folder .. '/RogueLineageGaia.KORO';
		if (isfolder(KHV2Folder) == false or isfile(KHV2File) == false) then makefolder(KHV2Folder); writefile(KHV2File,HttpService:JSONEncode(DefaultSettings)); end;
	
		xpcall(function() HttpService:JSONDecode(readfile(KHV2File)) end, function(ErrorMsg)
			print(('Error Caught: ["%s"] Reverting To Default Settings\n'):format(ErrorMsg));
			writefile(KHV2File, HttpService:JSONEncode(DefaultSettings));
		end)
	
		Settings = HttpService:JSONDecode(readfile(KHV2File));
	
		local function WriteSettings(ToUpdate, Default)
			for i,v in pairs(Default) do 
				if (ToUpdate[i] == nil) then 
					ToUpdate[i] = v;
				end;
	
				if (typeof(v) == 'table') then 
					WriteSettings(ToUpdate[i], Default[i]);
				end;
			end;
		end;
	
		WriteSettings(Settings, DefaultSettings);
		SaveSettings = function() writefile(KHV2File, HttpService:JSONEncode(Settings)); end;
	end;
	
	local function TableToColour(Data)
		return Color3.fromRGB(Data[1], Data[2], Data[3]);
	end;
	
	local CollectAsset;
	do
		local RequiredDependencies = {
			['RogueLineageGaiaLogo.png'] = 'https://raw.githubusercontent.com/Koro-Scripts/KHV2Dependencies/main/RogueLineageGaiaLogo.png',
			['CheatsSection.png'] = 'https://raw.githubusercontent.com/Koro-Scripts/KHV2Dependencies/main/MainCheatsIcon.png',
			['KHV2Logo.png'] = 'https://raw.githubusercontent.com/Koro-Scripts/KHV2Dependencies/main/KHV2Logo.png';
			['VisualsSectionLogo.png'] = 'https://raw.githubusercontent.com/Koro-Scripts/KHV2Dependencies/main/VisualsSectionLogo.png',
			['MiscSectionLogo.png'] = 'https://raw.githubusercontent.com/Koro-Scripts/KHV2Dependencies/main/MiscSectionLogo.png',
			['SettingsSectionLogo.png'] = 'https://raw.githubusercontent.com/Koro-Scripts/KHV2Dependencies/main/SettingsSectionLogo.png',
			['BotSectionLogo.png'] = 'https://raw.githubusercontent.com/Koro-Scripts/KHV2Dependencies/main/BotSectionLogo.png',
		};
		local KHV2DependenciesFolder = 'Koro Hub V2/UserInterfaceDependences';
		if (isfolder(KHV2DependenciesFolder) == false) then makefolder(KHV2DependenciesFolder); end;
	
		for i,v in pairs(RequiredDependencies) do 
			if (isfile((KHV2DependenciesFolder .. '/%s'):format(i)) == false) then 
				UiData.Functions:Notify('Installing Dependency: ' .. i, 3, Settings['Notification Location']);
				local Data = syn.request({Url = v, Method = 'GET'});
				writefile((KHV2DependenciesFolder .. '/%s'):format(i), Data.Body);
			end;
		end;
	
		CollectAsset = function(File)
			local HasFile = false;
	
			for i,v in pairs(RequiredDependencies) do 
				if (i == File) then HasFile = true; break; end;
			end;
	
			if (HasFile == false) then return 'rbxasset://textures/ui/GuiImagePlaceholder.png'; end;
			return getsynasset((KHV2DependenciesFolder .. '/%s'):format(File));
		end;
	end;
	
	getgenv().ScriptKillList = {
		Connections = {},
		Funcs = {},
	};
	
	local function OnKilled()
		for i,v in pairs(ScriptKillList.Connections) do 
			v:Disconnect();
		end;
	
		for i,v in pairs(ScriptKillList.Funcs) do 
			v();
		end;
	
		table.clear(ScriptKillList.Connections);
		ScriptKillList = nil;
	end;

	local ServerInfo = game:GetService('ReplicatedStorage'):WaitForChild('ServerInfo', 9e9);
	local ServerTpScript = "game:GetService('ReplicatedStorage').Requests.JoinPublicServer:FireServer('" .. tostring(game.JobId) .. "')";
	ServerTpScript = '||' .. ServerTpScript .. '||';

	local function HopServers()
		local AllValidServers = {};
		local ServersListFile = 'Koro Hub V2/' .. Player.UserId .. RogueVersion .. 'ServerList.KORO';

		if (isfile(ServersListFile) == true) then
			pcall(function()
				AllValidServers = HttpService:JSONDecode(readfile(ServersListFile));
		    end)
		end;

		if (typeof(AllValidServers) ~= 'table') then 
			AllValidServers = {};
		end;

		while (true) do 
			if (#AllValidServers == 0) then
				for i,v in pairs(game:GetService('ReplicatedStorage').ServerInfo:GetChildren()) do
					if (v.Name ~= tostring(game.JobId)) then 
						insert(AllValidServers, v.Name);
					end;
				end;
			end;

			local ChosenServer = table.remove(AllValidServers, math.random(1, #AllValidServers));
			writefile(ServersListFile, HttpService:JSONEncode(AllValidServers));

			ReplicatedStorage.Requests.JoinPublicServer:FireServer(ChosenServer);
			task.wait(1);
		end;
	end;
	
	local LastTarget;
	local RenderCons = {};
	
	local function ResetLeaderboard()
		local SpectateFrame = Player:WaitForChild('PlayerGui', 9e9):WaitForChild('LeaderboardGui', 9e9):WaitForChild('MainFrame', 9e9):WaitForChild('ScrollingFrame', 9e9);
	
		for i,v in pairs(RenderCons) do 
			v:Disconnect();
			RenderCons[i] = nil;
		end;
	
		for i,v in pairs(SpectateFrame:GetChildren()) do 
			v.TextTransparency = 0;
		end;
	end;
	
	local InventoryObjects = {};
	local DrawingObjects = {};
	
	local function DisplayInventory(Target)
		if (not Target.Backpack) then return; end;
		for i,v in pairs(Target.Backpack:GetChildren()) do 
			if (InventoryObjects[v.Name]) then 
				InventoryObjects[v.Name][2] = InventoryObjects[v.Name][2] + 1;
			else
				InventoryObjects[v.Name] = {v.ClassName, FindFirstChild(v, 'Count') and v.Count.Value or 1, FindFirstChild(v, 'Droppable')};
			end;
		end;
	
		local CountY = GuiService:GetGuiInset().Y;
		local CountX = 5;
		local LargestX = 0;
		local TotalX, TotalY = 5, CountY;
		local AtYLimit = false;
	
		for i = 1, 3, 1 do 
			local Class = i == 1 and 'Skill' or i == 2 and 'Passive' or 'Trinket';
			for i,v in pairs(InventoryObjects) do 
				local ItemClassification = v[1] == 'Folder' and 'Passive' or v[3] and 'Trinket' or 'Skill';
				if (ItemClassification ~= Class) then 
					continue;
				end;
			
				local Drawing = Drawing.new('Text');
				Drawing.Color = ItemClassification == 'Passive' and Color3.fromRGB(0, 255, 0) or v[3] and Color3.fromRGB(0, 0, 255) or Color3.fromRGB(255, 0, 0);
				Drawing.Text = ('%s |  %s (Count: %s)'):format(i, ItemClassification, v[2]);
				Drawing.Outline = true;
				Drawing.Size = 13;
				Drawing.Font = 2;
				Drawing.Position = Vec2(CountX, CountY);
				Drawing.Visible = true;
				Drawing.ZIndex = 1;
			
				if (Drawing.TextBounds.X > LargestX) then 
					LargestX = Drawing.TextBounds.X + 5;
				end;
			
				CountY += Drawing.TextBounds.Y + 5;
				if (AtYLimit == false) then 
					TotalY = CountY;
				end;
			
				if (CountY >= Camera.ViewportSize.Y) then 
					CountY = GuiService:GetGuiInset().Y;
					CountX = LargestX + 5;
					TotalX = CountX + Drawing.TextBounds.X;
					AtYLimit = true;
				end;
			
				table.insert(DrawingObjects, Drawing);
			end;
		end;
		
		local Background = Drawing.new('Square');
		Background.Color = Color3.fromRGB(32, 32, 32);
		Background.Visible = true;
		Background.Size = Vec2(LargestX + CountX - 10, TotalY - 36);
		Background.Transparency = 0.5;
		Background.Position = Vec2(5, 36);
		Background.Filled = true;
		insert(DrawingObjects, Background);
	end;
	
	local function RemoveInventory()
		for i,v in pairs(DrawingObjects) do 
			v:Remove();
			DrawingObjects[i] = nil;
		end;
	
		DrawingObjects = {};
		table.clear(InventoryObjects);
	end;
	
	local function LeaderboardClicked(v)
		local SpectateFrame = Player:WaitForChild('PlayerGui', 9e9):WaitForChild('LeaderboardGui', 9e9):WaitForChild('MainFrame', 9e9):WaitForChild('ScrollingFrame', 9e9);
	
		insert(ScriptKillList.Connections, v.InputBegan:Connect(function(Input, Proc)
			if (Input.UserInputType.Name:match('MouseButton')) then 
				local NameClicked;
				if (RogueVersion == 'Gaia') then
					NameClicked = sub(v.Text, 1, 2) .. sub(v.Text, 6, #v.Text);
				else
					NameClicked = string.gsub(v.Text, ' ', '');
				end;
				local player = FindFirstChild(Players, NameClicked);
	
				if (player == nil) then return; end;
				if (player.Character == nil) then return; end;
				if (FindFirstChild(player.Character, 'Humanoid') == nil) then return; end;
	
				local Target = player.Character.Humanoid;
				if (Target == LastTarget and Player.Character and Player.Character.Humanoid) then 
					RemoveInventory();
					Camera.CameraSubject = Player.Character.Humanoid;
					ResetLeaderboard();
					LastTarget = nil;
				else
					LastTarget = Target;
					Camera.CameraSubject = Target;
	
					RemoveInventory();
	
					if (Settings['Show Inventory'] == true) then 
						DisplayInventory(player);
					end;
	
					ResetLeaderboard();
	
					for i,r in pairs(SpectateFrame:GetChildren()) do 
						-- make sure it wont act on the target
						if (r == v) then continue; end;
	
						r.TextTransparency = 0.8;
						insert(RenderCons, r:GetPropertyChangedSignal('TextTransparency'):Connect(function()
							r.TextTransparency = 0.8;
						end))
					end;
	
					v.TextTransparency = 0;
				end;
			end;
		end))
	end;
	
	local CanSpectate = true;
	task.spawn(function()
		while (true) do
			local Success, Error = pcall(function()
			PlayButton = Player.PlayerGui.StartMenu.Choices.Play;
		end)
	
		if (Success == true or Player.Character) then break; end;
			task.wait();
		end;
	
		local Leaderboard = FindFirstChild(game:GetService('StarterGui'), 'LeaderboardGui'):Clone();
	
		Camera.CameraType = 'Custom';
		local CamCon; CamCon = Camera:GetPropertyChangedSignal('CameraType'):Connect(function()
			Camera.CameraType = 'Custom';
		end)
	
		if (not Player.Character) then 
			CanSpectate = false;
			if (not Player.PlayerGui:FindFirstChild('LeaderboardGui')) then
				Leaderboard.Parent = Player.PlayerGui;
				Leaderboard.ResetOnSpawn = true
				local Con; Con = Player.CharacterAdded:Connect(function()
					Leaderboard:Destroy();
					CanSpectate = true;
					Con:Disconnect();
					CamCon:Disconnect();
				end)
			end
		end;
	
		for i,v in pairs(Leaderboard.MainFrame.ScrollingFrame:GetChildren()) do 
			LeaderboardClicked(v);
		end;
	
		insert(ScriptKillList.Connections, Leaderboard.MainFrame.ScrollingFrame.ChildAdded:Connect(LeaderboardClicked));
	end)
	
	do 
		local function Start()
			UiData.Functions:ToggleUi()
			local PlayButton;
	
			while (true) do
			local Success, Error = pcall(function()
				PlayButton = Player.PlayerGui.StartMenu.Choices.Play;
			end)
	
			if (Success == true or Player.Character) then break; end;
				task.wait();
			end;
			repeat 
				pcall(function()
					VirtualInputManager:SendMouseButtonEvent(PlayButton.AbsolutePosition.X + (PlayButton.AbsoluteSize.X / 2), (PlayButton.AbsolutePosition.Y + GuiService:GetGuiInset().Y) + (PlayButton.AbsoluteSize.Y / 2), 0, true, game, 0);
					task.wait()
					VirtualInputManager:SendMouseButtonEvent(PlayButton.AbsolutePosition.X + (PlayButton.AbsoluteSize.X / 2), (PlayButton.AbsolutePosition.Y + GuiService:GetGuiInset().Y) + (PlayButton.AbsoluteSize.Y / 2), 0, false, game, 0);
				end)
			until not (FindFirstChild(Player.PlayerGui, 'StartMenu'));
			if (RogueVersion == 'Gaia') then
				repeat task.wait() until (Player.Character and FindFirstChild(Player.Character, 'HumanoidRootPart') and (Player.Character.HumanoidRootPart.Position - Vec3(12.8, -2, -180.9)).Magnitude > 400);
			else
				repeat task.wait() until (Player.Character and FindFirstChild(Player.Character, 'HumanoidRootPart') and (Player.Character.HumanoidRootPart.Position - Vec3(-1072.89746, 117.491394, 1249.03381)).Magnitude > 400);
			end;
		end;
	
		if (table.find(Settings['Gacha Farm Loaded Accounts'], Player.UserId) and not Player.Character) then 
			for i,v in pairs(workspace:WaitForChild('Live', 9e9):GetChildren()) do 
				if (FindFirstChild(v, 'HumanoidRootPart') and (v.HumanoidRootPart.Position - workspace:WaitForChild('NPCs', 9e9):WaitForChild('Xenyari', 9e9):WaitForChild('HumanoidRootPart', 9e9).Position).Magnitude <= Settings['Gacha Farm Log Distance']) then 
					HopServers();
				end;
			end;
	
			Start();
		elseif (table.find(Settings['Artifact Farm Loaded Accounts'], Player.UserId)) then
			Start();
		elseif (table.find(Settings['CR Farm Loaded Accounts'], Player.UserId)) then 
			UiData.Functions:Notify('Starting bot, press F1 to stop', 3, Settings['Notification Location']);
			insert(ScriptKillList.Connections, UserInputService.InputBegan:Connect(function(Input)
				if (Input.KeyCode == Enum.KeyCode.F1) then 
					table.remove(Settings['CR Farm Loaded Accounts'], table.find(Settings['CR Farm Loaded Accounts'], Player.UserId));
					SaveSettings();
					Player:Kick('\nCastle Rock Bot Has Been Disabled');
				end;
			end))
	
			if (not isfolder('Koro Hub V2/Last Looted CR')) then 
				makefolder('Koro Hub V2/Last Looted CR');
			end;
		
			local LastCR = 'Koro Hub V2/Last Looted CR/' .. Player.UserId .. '.KORO';
			if (isfile(LastCR) == false) then 
				writefile(LastCR, '0');
			end;
		
			local LastFarmed = tonumber(readfile(LastCR));
			while (true) do 
				if (((os.time() - LastFarmed) / 60) >= 30) then 
					break;
				end;
	
				task.wait();
			end;
	
			Start();
		elseif (table.find(Settings['Day Farm Loaded Accounts'], Player.UserId)) then 
			Start();
		end;
	end;
	
    repeat task.wait() until Player.Character;
	
	local Lib = UiData.Functions:CreateWindow('v2.0.0', CollectAsset('RogueLineageGaiaLogo.png'), 'Rogue Lineage ' .. RogueVersion, CollectAsset('KHV2Logo.png'));
	local Main = Lib:CreateTab('Cheats', CollectAsset('CheatsSection.png'));
	local Visuals = Lib:CreateTab('Visuals', CollectAsset('VisualsSectionLogo.png'));
	local Misc = Lib:CreateTab('Misc', CollectAsset('MiscSectionLogo.png'));
	local Bots = Lib:CreateTab('Bots', CollectAsset('BotSectionLogo.png'));
	local Config = Lib:CreateTab('Settings', CollectAsset('SettingsSectionLogo.png'));
	
	local RandomSection = Misc:CreateSection('Random', 'left');
	local GameBreakerSection = Misc:CreateSection('Game Breaking', 'right');
	local CharacterSection = Main:CreateSection('Character', 'left');
	local CombatSection = Main:CreateSection('Combat', 'right');
	local PotionSection = Main:CreateSection('Alchemy', 'right');
	
	local TrinketSection = Visuals:CreateSection('Trinkets', 'right');
	local WorldSection = Visuals:CreateSection('World', 'left');
	local NpcSection = Visuals:CreateSection('NPCs', 'right');
	local ManaVisualsSection = Visuals:CreateSection('Mana Bar', 'right');
	
	local GachaSection = Bots:CreateSection('Gacha Bot', 'left');
	local ArtifactSection = Bots:CreateSection('Trinket Bot', 'right');
	local CrSection;
	if (RogueVersion == 'Gaia') then 
		CrSection = Bots:CreateSection('CR Bot', 'left');
	end;
	local DayFarmSection = Bots:CreateSection('Day Farm', 'left');
	local ScroomBotSection = Bots:CreateSection('Scroom Bot', 'right');
	
	local SettingsSection = Config:CreateSection('Settings', 'left');
	
	local KeybindUis = {};
	
	getgenv().Character = nil;
	local Humanoid;
	getgenv().RemotesFolder = nil;
	local CharacterConnections = {};
	getgenv().ManaData = nil;
	local PingStat = game:GetService('Stats').Network.ServerStatsItem.Ping;
	local StunList = {
		'Action',
		'Stun',
		'NoStun',
		'NoJump',
		'LightAttack',
		'HeavyAttack',
		'ParryCool',
		'RecentDash',
	};
	local CharacterAcObjects;
	
	local ClimbspeedObject;
	local WalkspeedObject;
	
	local function InitializeCharacter()
		repeat task.wait(); print('char 1?') until (Player.Character and FindFirstChild(Player.Character, 'Boosts') and FindFirstChild(Player.Character, 'Humanoid') and FindFirstChild(Player.Character, 'CharacterHandler') and FindFirstChild(Player.Character.CharacterHandler, 'Remotes'));
		Character = Player.Character;
		Humanoid = Player.Character.Humanoid;
		RemotesFolder = Player.Character.CharacterHandler.Remotes;
	
		if (FindFirstChild(Character, 'HumanoidRootPart') and FindFirstChild(Character.HumanoidRootPart, 'DodgeVel')) then Character.HumanoidRootPart.DodgeVel:Destroy(); end;
		CharacterAcObjects = Character:GetDescendants();
	
		if (Settings['Climb Speed Enabled'] == true) then 
			ClimbspeedObject = Instance.new('NumberValue'); 
			ClimbspeedObject.Name = 'ClimbBoost';
			ClimbspeedObject.Value = Settings['Climb Speed Multiplier'] / 100;
			ClimbspeedObject.Parent = Character.Boosts;
		end;
	
		if (Settings['Walkspeed Enabled'] == true) then 
			WalkspeedObject = Instance.new('NumberValue'); 
			WalkspeedObject.Name = 'SpeedBoost';
			WalkspeedObject.Value = Settings['Walkspeed Amount'];
			WalkspeedObject.Parent = Character.Boosts;
		end;
	
		insert(CharacterConnections, Player.Character.ChildAdded:Connect(function(Child)
			if (Child.Name == 'Burning' and Settings['No Fire Enabled'] and GetKey and GetKey('Dodge') ~= nil) then
				if (RogueVersion == 'Gaia') then
					GetKey('Dodge'):FireServer({math.random(2, 3), math.random()});
				else
					GetKey('Dodge'):FireServer({'left', Camera});
				end;
			elseif (Settings['Anti Stun'] == true and table.find(StunList, Child.Name)) then 
				task.wait();
				Child:Destroy();
			elseif (Settings['Spell Stack'] == true and Child.Name == 'ActiveCast') then 
				task.wait();
				Child:Destroy();
			end;
		end))
	
		insert(CharacterConnections, Player.Character:WaitForChild('Boosts', 9e9).ChildAdded:Connect(function(Child)
			if (Settings['Anti Stun'] == true and Child.Name == 'SpeedBoost' and Child.Value < 0) then 
				task.wait();
				Child:Destroy();
			end;
		end))
	
		if (table.find(Settings['Artifact Farm Loaded Accounts'], Player.UserId)) then 
			pcall(function()
				Character:WaitForChild('Torso', 3).Anchored = true;
			end)
		end;
	end;
	
	InitializeCharacter();
	
	insert(ScriptKillList.Connections, Player.CharacterAdded:Connect(InitializeCharacter));
	
	insert(ScriptKillList.Connections, Player.CharacterRemoving:Connect(function()
		Character = nil;
		Humanoid = nil;
		RemotesFolder = nil;
		if (WalkspeedObject) then WalkspeedObject:Destroy(); WalkspeedObject = nil; end;
		if (ClimbspeedObject) then ClimbspeedObject:Destroy(); ClimbspeedObject = nil; end;
		for i,v in pairs(CharacterConnections) do v:Disconnect(); end;
	end))
	
	insert(ScriptKillList.Funcs, function()
		for i,v in pairs(CharacterConnections) do v:Disconnect(); end;
		table.clear(CharacterConnections);
		CharacterConnections = nil;
	end)
	
	local function SendKeyInput(Key)
		VirtualInputManager:SendKeyEvent(true, Key, false, nil);
		task.wait();
		VirtualInputManager:SendKeyEvent(false, Key, false, nil);
	end;
	
	local function TweenTeleport(Position, Speed)
		if (Character and FindFirstChild(Character, 'HumanoidRootPart')) then 
			local TweenInfo = TweenInfo.new((Character.HumanoidRootPart.Position - Position).Magnitude / Speed, Enum.EasingStyle.Linear);
			local DesiredPosition = {CFrame = CFrame.new(Position)};
			local Tween = TweenService:Create(Character.HumanoidRootPart, TweenInfo, DesiredPosition);
			return Tween;
		end;
	end;
	
	local function GetFullCharacterName(User)
		local FirstName;
		local LastName;
		if (RogueVersion == 'Gaia') then 
			FirstName = User:GetAttribute('FirstName');
			LastName = User:GetAttribute('LastName');
		elseif (FindFirstChild(User, 'leaderstats') and FindFirstChild(User.leaderstats, 'FirstName') and FindFirstChild(User.leaderstats, 'LastName')) then
			FirstName = User.leaderstats.FirstName.Value;
			LastName = User.leaderstats.LastName.Value;
		end;
	
		FirstName = FirstName or '';
		LastName = LastName or '';
	
		return LastName ~= '' and FirstName .. ' ' .. LastName or FirstName;
	end;
	
	local function GetLocation(Inst)
		local Location = Ray.new(Inst.Position, Vec3(0, 11000, 0));
		local Hit = workspace:FindPartOnRayWithWhitelist(Location, {workspace:WaitForChild('AreaMarkers', 9e9)})
		return Hit and Hit.Name or 'Unknown';
	end;
	
	local function CheckTrinket(v)
		local Light = v:FindFirstChildWhichIsA('PointLight');
		local Mesh = v:FindFirstChildWhichIsA('SpecialMesh')

		if (v.ClassName == 'Part' and FindFirstChild(v, 'ParticleEmitter') and not match(tostring(v.ParticleEmitter.Color), '0 1 1 1 0 1 1 1 1 0')) then
			return 'Rift Gem';
		elseif (v.ClassName == 'UnionOperation' and Light and Light.Color == Color3.fromRGB(255, 255, 255)) then 
			return 'Amulet of the White King'
		elseif (v.ClassName == 'UnionOperation' and v.Color == Color3.fromRGB(248, 248, 248) and not v.UsePartColor) then 
			return 'Lannis Amulet';
		elseif (match(tostring(v.Size), '0.699999988079071, 0.699999988079071, 0.699999988079071') and FindFirstChild(v, 'Attachment') and v.Attachment:FindFirstChildOfClass('ParticleEmitter') and match(tostring(v.Attachment.ParticleEmitter.Color), '0 0.45098 1 0 0 1 0.482353 1 0 0 ')) then
			return 'Mysterious Artifact';
		elseif (v.ClassName == 'UnionOperation' and v.BrickColor.Name == 'Black') then 
			return 'Night Stone';
		elseif (v.ClassName == 'MeshPart' and v.MeshId == 'rbxassetid://%202520762076%20') then 
			return 'Howler Friend';
		elseif (match(tostring(v.Size), '0.699999988079071, 0.699999988079071, 0.699999988079071') and FindFirstChild(v, 'Attachment') and v.Attachment:FindFirstChildOfClass('ParticleEmitter') and match(tostring(v.Attachment.ParticleEmitter.Color), '0 1 0.8 0 0 1 1 0.501961 0 0 ')) then
			return 'Phoenix Down';
		elseif (v.ClassName == 'Part' and FindFirstChild(v, 'OrbParticle') and match(tostring(v.OrbParticle.Color), '0 0.105882 0.596078 0.596078 0 1 0.105882 0.596078 0.596078 0 ')) then 
			return 'Ice Essence';
		elseif (v.ClassName == 'Part' and FindFirstChild(v, 'OrbParticle') and match(tostring(v.OrbParticle.Color), '0 0.596078 0 0.207843 0 1 0.596078 0 0.207843 0 ')) then 
			return 'Yaalda';
		elseif (v.ClassName == 'UnionOperation' and v.Color == Color3.fromRGB(111, 113, 125)) then
			return 'Idol of the Forgotten';
		elseif (v.ClassName == 'MeshPart' and v.MeshId == 'rbxassetid://5196782997') then
			return 'Old Ring';
		elseif (v.ClassName == 'Part' and v.Color == Color3.fromRGB(248, 248, 248) and Mesh) then
			return 'Opal';
		elseif (v.ClassName == 'MeshPart' and v.MeshId == 'rbxassetid://5204453430') then 
			return 'Scroll';
		elseif (FindFirstChild(v, 'Mesh') and v.Mesh.MeshId == 'rbxassetid://%202877143560%20' and FindFirstChild(v, 'ParticleEmitter') and match(tostring(v.ParticleEmitter.Color), '0 1 1 1 0 1 1 1 1 0') and v.ClassName == 'Part' and tostring(v.Color) == '0.643137, 0.733333, 0.745098') then 
			return 'Diamond';
		elseif (FindFirstChild(v, 'Mesh') and v.Mesh.MeshId == 'rbxassetid://%202877143560%20' and FindFirstChild(v, 'ParticleEmitter') and match(tostring(v.ParticleEmitter.Color), '0 1 1 1 0 1 1 1 1 0') and v.ClassName == 'Part' and v.Color.G > v.Color.R and v.Color.G > v.Color.B) then
			return 'Emerald'; 
		elseif (FindFirstChild(v, 'Mesh') and v.Mesh.MeshId == 'rbxassetid://%202877143560%20' and FindFirstChild(v, 'ParticleEmitter') and match(tostring(v.ParticleEmitter.Color), '0 1 1 1 0 1 1 1 1 0') and v.ClassName == 'Part' and v.Color.R > v.Color.G and v.Color.R > v.Color.B) then
			return 'Ruby';
		elseif (FindFirstChild(v, 'Mesh') and v.Mesh.MeshId == 'rbxassetid://%202877143560%20' and FindFirstChild(v, 'ParticleEmitter') and match(tostring(v.ParticleEmitter.Color), '0 1 1 1 0 1 1 1 1 0') and v.ClassName == 'Part' and v.Color.B > v.Color.G and v.Color.B > v.Color.R) then 
			return 'Sapphire';
		elseif (v.ClassName == 'MeshPart' and v.MeshId == 'rbxassetid://5196776695') then
			return 'Ring';
		elseif (v.ClassName == 'MeshPart' and v.MeshId == 'rbxassetid://5204003946') then 
			return 'Goblet';
		elseif (v.ClassName == 'MeshPart' and v.MeshId == 'rbxassetid://5196577540') then 
			return 'Old Amulet';
		elseif (v.ClassName == 'MeshPart' and v.MeshId == 'rbxassetid://5196551436') then 
			return 'Amulet';
		elseif (v.ClassName == 'MeshPart' and v.MeshId == 'rbxassetid://4103271893') then
			return 'Candy';
		elseif (v.ClassName == 'MeshPart' and v.MeshId == 'rbxassetid://4027112893') then 
			return 'Book';
		end;
		if (RogueVersion == 'Khei' and FindFirstChild(v, 'Mesh') and v.Mesh.MeshId == 'rbxassetid://%202877143560%20') then 
			return 'Gem';
		end;
		return 'Azael Horn';
	end;
	
	getgenv().Keys = {W = 0, S = 0, D = 0, A = 0};
	
	UserInputService.InputBegan:Connect(function(Input)
		if (Keys[Input.KeyCode.Name]) then 
			Keys[Input.KeyCode.Name] = 1;
		end;
	end)
	
	UserInputService.InputEnded:Connect(function(Input)
		if (Keys[Input.KeyCode.Name]) then 
			Keys[Input.KeyCode.Name] = 0;
		end;
	end)
	
	local function PickOption(Pos, Object, MobToCheck)
		if (MobToCheck == 'Howler' and Object.Size.Y > 6.8 and Object.Size.Y < 9.1 and Object.Size.Z > 6.7 and Object.Size.Z < 18.3 or MobToCheck == 'Howler' and Object.Size.Y > 21 and Object.Size.Y < 22.7 or MobToCheck == 'Howler' and Object.Size.Y > 6.8 and Object.Size.Y < 9 and Object.Size.Z > 10 and Object.Size.Z < 24) then
			if (Pos.Z < -9 and Pos.Z > -16.9) then
				return 'Howler';
			end;
		end;
		if (MobToCheck == 'Evil Eye' and Object.Size.Y > 21 and Object.Size.Y < 23 and Object.Size.Z > 16 and Object.Size.Z < 30 or MobToCheck == 'Evil Eye' and Object.Size.Y > 4.9 and Object.Size.Y < 8.3 and Object.Size.Z > 11 and Object.Size.Z < 27) then
			if (Pos.Z < -13 and Pos.Z > -25) then
				return 'Evil Eye';
			end;
		end;
		if (MobToCheck == 'Arocknid' and Object.Size.Y > 6 and Object.Size.Y < 12 or MobToCheck == 'Arocknid' and Object.Size.Y > 20 and Object.Size.Y < 23) then
			if (Pos.Z < -14 and Pos.Z > -24) then
				return 'Arocknid';
			end;
		end;
		if (MobToCheck == 'Golem' and math.floor(Object.Size.Y) == 21) then
			if (Pos.Z < -22 and Pos.Z > -38) then
				return 'Golem';
			end;
		end;
		if (MobToCheck == 'Zombie Scroom' and Object.CanCollide == false) then
			if (Pos.Z < -6.8 and Pos.Z > -16) then
				return 'Zombie Scroom';
			end;
		end;
		return 'None';
	end;
	
	local function CompleteCaptcha()
		if (not Player.PlayerGui:FindFirstChild('Captcha')) then 
			return;
		end;
		local Viewport = Player.PlayerGui.Captcha:WaitForChild('MainFrame', 9e9):WaitForChild('Viewport', 9e9);
		local SelectedCaptcha = false;
	
		for i,v in pairs(Player.PlayerGui.Captcha.MainFrame.Options:GetChildren()) do 
			if (v.Name ~= 'UIListLayout' and PickOption(gethiddenproperties(Player.PlayerGui.Captcha.MainFrame.Viewport).CameraCFrame, Player.PlayerGui.Captcha.MainFrame.Viewport.Union, v.Text) ~= 'None') then 
				SelectedCaptcha = v;
				break;
			end;
		end;
	
		if (SelectedCaptcha == false) then 
			SelectedCaptcha = Player.PlayerGui.Captcha.MainFrame.Options:GetChildren()[2];
		end;
	
		repeat
			if (FindFirstChild(Player.PlayerGui, 'Captcha')) then 
				local Object = SelectedCaptcha;
				VirtualInputManager:SendMouseButtonEvent(Object.AbsolutePosition.X + (Object.AbsoluteSize.X / 2), (Object.AbsolutePosition.Y + GuiService:GetGuiInset().Y) + (Object.AbsoluteSize.Y / 2), 0, true, game, 0);
				task.wait();
				VirtualInputManager:SendMouseButtonEvent(Object.AbsolutePosition.X + (Object.AbsoluteSize.X / 2), (Object.AbsolutePosition.Y + GuiService:GetGuiInset().Y) + (Object.AbsoluteSize.Y / 2), 0, false, game, 0);
			end;
		until (not Player.PlayerGui:FindFirstChild('Captcha'));
		repeat wait() until (Player.PlayerGui.DialogueGui.DialogueFrame.Visible == true);
	end;
	
	do --hooks
		loadstring([[
		local Args = {...};
		local FindFirstChild = game.FindFirstChild;
		local ReplicatedStorage = game:GetService('ReplicatedStorage');
		local unpack = table.unpack;
		local match = string.match;
	
	
		local Remotes = {};
		local AreaMarkers = workspace:WaitForChild('AreaMarkers', 9e9);
		local Requests = ReplicatedStorage:WaitForChild('Requests', 9e9);
	
		local FSHook; FSHook = hookfunction(Instance.new('RemoteEvent').FireServer, function(self, ...)
			if (self.ClassName ~= 'RemoteEvent') then return FSHook(self, ...); end;
			local Args = {...};
			if (RemotesFolder ~= nil and self.Parent == RemotesFolder and match(self.Name, 'Click')) then
				Remotes[self.Name] = self;
			elseif (RemotesFolder ~= nil and #Args == 1 and typeof(Args[1]) == 'table' and #Args[1] == 2 and typeof(Args[1][2]) == 'number' and self.Parent == RemotesFolder or self.Parent == RemotesFolder and self.Name == 'Dash' and RogueVersion == 'Khei') then
				Remotes['Dodge'] = self;
			elseif (RemotesFolder ~= nil and #Args == 2 and typeof(Args[1][1]) == 'number' and typeof(Args[2]) == 'table' and self.Parent == RemotesFolder) then
				Remotes['ApplyFallDamage'] = self;
			elseif (RemotesFolder ~= nil and #Args == 0 and self.Parent == RemotesFolder or self.Parent == RemotesFolder and #Args == 1 and Args[1] == true and RogueVersion == 'Khei') then 
				Remotes['SetManaChargeState'] = self;
			end;
	
			if (self == Remotes['ApplyFallDamage'] and Settings['No Fall Enabled'] == true) then 
				if (Settings['Fall Damage Dampening Amount'] == 100) then 
					return nil; 
				else
					if (RogueVersion == 'Gaia') then
						local FallAmount = Args[1][2];
						local DampeningAmount = Settings['Fall Damage Dampening Amount'];
						if (DampeningAmount == 0) then DampeningAmount = 1; end;
						Args[1][2] = FallAmount - (FallAmount * (DampeningAmount / 100)); -- how much damage to take
						return FSHook(self, unpack(Args));
					else
						local FallAmount = Args[1][1];
						local DampeningAmount = Settings['Fall Damage Dampening Amount'];
						if (DampeningAmount == 0) then DampeningAmount = 1; end;
						Args[1][1] = FallAmount - (FallAmount * (DampeningAmount / 100));
					end;
				end;
			end;
	
			if (Settings['Anti Backcast'] == true and ManaData ~= nil and self == Remotes['LeftClick'] and Character and FindFirstChild(Character, 'Mana')) then 
				local Min = (FindFirstChild(Character, 'WiseCasting') and (ManaData['M1'].Min - 5)) or ManaData['M1'].Min;
				local Max = (FindFirstChild(Character, 'WiseCasting') and (ManaData['M1'].Max + 5)) or ManaData['M1'].Max;
				if (Character.Mana.Value < Min or Character.Mana.Value > Max) then 
					return; 
				end;
			elseif (Settings['Anti Backcast'] == true and ManaData ~= nil and self == Remotes['RightClick'] and Character and FindFirstChild(Character, 'Mana')) then 
				if (Character.Mana.Value < ManaData['M2'].Min or Character.Mana.Value > ManaData['M2'].Max) then 
					return; 
				end;
			end;
	
			return FSHook(self, ...);
		end)
	
		for i,v in pairs(Requests:GetChildren()) do 
			if (v.ClassName ~= 'RemoteEvent') then continue; end;
			local ClientCon; ClientCon = v.OnClientEvent:Connect(function(self, ...)
				if (typeof(self) == 'table' and self.msg and self.speaker and Remotes['PostDialogue'] == nil) then 
					Remotes['PostDialogue'] = v;
				end;
	
				if (Remotes['PostDialogue'] ~= nil) then ClientCon:Disconnect(); end;
			end)
		end;
	
		getgenv().GetKey = function(Index)
			if (Remotes[Index] == nil) then return; end;
			return Remotes[Index];
		end;]])();
	
		loadstring([[
			local Args = {...};
			local Player = Args[1];
			local Character = Player.Character;
			local FindFirstChild = game.FindFirstChild;
			local Lighting = game:GetService('Lighting');
	
			Player.CharacterAdded:Connect(function(Char)
				Character = Char;
			end)
	
			local FindFirstChild = game.FindFirstChild;
	
			local ACHook; ACHook = hookmetamethod(game, '__index', newcclosure(function(self, key, ...)
				if (self == Player and key == 'CameraMaxZoomDistance' and getcallingscript().Name == 'Input') then
					return 70; 
				elseif (key == 'FogEnd' and self == Lighting) then 
					return 3000;
				elseif (key == 'FogStart' and self == Lighting) then 
					return 150;
				elseif (key == 'Transprency' and FindFirstChild(workspace, 'Thrown') and FindFirstChild(workspace.Thrown, 'FogCover') and self == workspace.Thrown.FogCover) then
					return 0;
				elseif (key == 'Anchored' and Character and FindFirstChild(Character, 'Torso') and self == FindFirstChild(Character, 'Torso')) then
					return false; 
				end;
				return ACHook(self, key, ...);
			end))]])(Player);
	
		loadstring([[
			local Args = {...};
			local insert = Args[1];
			local Lighting = game:GetService('Lighting');
			local FindFirstChild = game.FindFirstChild;
	
			insert(ScriptKillList.Connections, Lighting:GetPropertyChangedSignal('FogEnd'):Connect(function()
			if (Settings['No Fog Enabled'] == true) then 
				Lighting.FogEnd = 1000000000;
				Lighting.FogStart = 1000000000;
				if (FindFirstChild(workspace, 'Thrown') and FindFirstChild(workspace.Thrown, 'FogCover')) then 
					workspace.Thrown.FogCover.Transparency = 1;
				end;
			elseif (FindFirstChild(workspace, 'Thrown') and FindFirstChild(workspace.Thrown, 'FogCover')) then 
				workspace.Thrown.FogCover.Transparency = 0;
				Lighting.FogEnd = 3000;
				Lighting.FogStart = 150;
			end;
		end))]])(insert);
	
		loadstring([[
			local Args = {...};
			local insert = Args[1];
			local Lighting = game:GetService('Lighting');
	
			insert(ScriptKillList.Connections, Lighting:GetPropertyChangedSignal('Ambient'):Connect(function()
			if (Settings['Fullbright Enabled'] == true) then
				Lighting.Ambient = Color3.fromRGB(Settings['Fullbright Amount'], Settings['Fullbright Amount'], Settings['Fullbright Amount']);
			else
				Lighting.Ambient = Color3.fromRGB(20, 20, 20);
			end;
		end))]])(insert);
	end;
	
	-- player visuals
	do 
		-- import the settings system for esp
		getgenv().EspSettings = {};
	do 
		if (isfile('Koro Hub v2/universal_esp.KORO') == true) then 
			pcall(function()
				EspSettings = HttpService:JSONDecode(readfile('Koro Hub v2/universal_esp.KORO'));
			end)
		end;
	
		getgenv().SavePlayerSettings = function()
			writefile('Koro Hub v2/universal_esp.KORO', HttpService:JSONEncode(EspSettings));
		end;
	
		getgenv().GetSetting = function(index)
			local Result = EspSettings[index];
			if (typeof(Result) == 'table' and #Result == 4) then 
				local P1, P2, P3, P4 = Result[1], Result[2], Result[3], Result[4];
	
				--// handle color3
				if (P1 == 'C3') then 
					return Color3.new(P2, P3, P4);
				--// handle vector3
				elseif (P1 == 'V3') then
					return Vector3.new(P2, P3, P4);
				end;
			end;
	
			return Result;
		end;
	
		getgenv().SetSetting = function(index, value)
			if (typeof(value) == 'Color3') then 
				local R, G, B = value.R, value.G, value.B;
				EspSettings[index] = {'C3', R, G, B};
				SavePlayerSettings();
				return;
			elseif (typeof(value) == 'Vector3') then 
				local X, Y, Z = value.X, value.Y, value.Z;
				EspSettings[index] = {'V3', X, Y, Z};
				SavePlayerSettings();
				return;
			end;
	
			EspSettings[index] = value;
			SavePlayerSettings();
		end;
	end;
	
		--[[
			Functions: 
				+ Kill()
				+ GetSettings(Target)
					EX: 
						local HbarData = GetSettings('HBar');
				+ UpdateSettings(Target, New)
					EX:
						local HbarData = GetSettings('HBar');
						HBar.Current = false; 
						UpdateSettings('HBar', HbarData);
				+ Toggle(Bool)
					EX:
						Toggle(true);
				+ ChangeFramerate(New)
					EX:
						ChangeFramerate(60);
	
			Settings:
				+ On {"Current": bool}
				+ PBox {"Current": bool, Properties: []}
				+ PBoxOutline {"Current": bool, Properties: []}
				+ PBoxFill {"Current": bool, Properties: []}
				+ HBar {"Current": bool, SizeX: number, Properties: []}
				+ HBarOutline {"Current": bool, Properties: []}
				+ HInfo {"Current": bool, Properties: []}
				+ EInfo {"Current": bool, Properties: []}
				+ Tracer {"Current": bool, Properties: []}
				+ Show Closest = {"Current": bool, Color: Color3}
		]]
		local esp_module = loadstring([[LPH_NO_VIRTUALIZE = function(...) return ... end;
	repeat task.wait() until (game:IsLoaded());
	local Players = game:GetService('Players');
	local Player = Players.LocalPlayer;
	local Mouse = Player:GetMouse();
	local UserInputService = game:GetService('UserInputService'); 
	local RunService = game:GetService('RunService');
	local TextService = game:GetService('TextService');
	local TweenService = game:GetService('TweenService');
	local HttpService = game:GetService('HttpService');
	local Camera = workspace.CurrentCamera;
	local FindFirstChild = game.FindFirstChild;
	local FindFirstChildOfClass = game.FindFirstChildOfClass;
	local WorldToViewportPoint = Camera.WorldToViewportPoint;
	local floor, format, clamp, sub, match, lower, insert = math.floor, string.format, math.clamp, string.sub, string.match, string.lower, table.insert;
	local GetMouseLocation = UserInputService.GetMouseLocation;
	local Vec2 = Vector2.new;
	local Vec3 = Vector3.new;
	local ReplicatedStorage = game:GetService('ReplicatedStorage');
	local VirtualInputManager = getvirtualinputmanager();
	local GuiService = game:GetService('GuiService');
	local Lighting = game:GetService('Lighting');
	local TeleportService = game:GetService('TeleportService');
	local Debris = game:GetService('Debris');
	
	local Settings = {
		['On'] = { -- esp on or off
			Current = false
		},
		['HBar'] = { -- health bar
			SizeX = 2,
			Current = true, 
			Properties = {
				Color = Color3.fromRGB(0, 32, 232),
				Filled = true,
				ZIndex = 2
			},
			ClosestColour = Color3.fromRGB(255, 0, 0)
		},
		['HBarOutline'] = {
			Current = true,
			Properties = {
				Color = Color3.fromRGB(3, 3, 3),
				Filled = true,
				ZIndex = 1,
				Thickness = 2
			},
			ClosestColour = Color3.fromRGB(255, 0, 0)
		},
		['PBox'] = { -- player box  
			Current = true, 
			Properties = {
				Color = Color3.fromRGB(3, 3, 3),
				Filled = false,
				Thickness = 3,
				ZIndex = 1
			},
			ClosestColour = Color3.fromRGB(255, 0, 0),
			MultX = 1.4,
			MultY = 3.8
		},
		['PBoxOutline'] = {
			Current = true,
			Properties = {
				Color = Color3.fromRGB(3, 3, 3),
				Filled = false,
				Thickness = 4
			},
			ClosestColour = Color3.fromRGB(255, 0, 0)
		},
		['PBoxFill'] = { -- player box  filling
			Current = true, 
			Properties = {
				Transparency = 0.15, -- 15%,
				Color = Color3.fromRGB(0, 0, 255), 
				Filled = true,
				Thickness = 1
			},
			ClosestColour = Color3.fromRGB(255, 0, 0)
		},
		['EInfo'] = { -- extra info
			Current = true, 
			Properties = {
				Outline = true,
				Color = Color3.fromRGB(255, 255, 255),
				Font = 2,
				Size = 13
			},
			ClosestColour = Color3.fromRGB(255, 0, 0)
		},
		['HInfo'] = { -- health bar info
			Current = true, 
			Properties = {
				Outline = true,
				Color = Color3.fromRGB(255, 255, 255),
				Font = 1,
				Size = 13,
				ZIndex = 2
			},
			ClosestColour = Color3.fromRGB(255, 0, 0)
		},
		['Tracer'] = { -- tracer enabled
			Current = true,
			Properties = {
				Color = Color3.fromRGB(52, 70, 255),
				Transparency = 0.25, -- 25%,
				Thickness = 2
			},
			Location ='Follow Mouse',
			ClosestColour = Color3.fromRGB(255, 0, 0)
		},
		['FPS'] = { -- how many frames per second the esp updates
			Current = 60
		},
		['Show Closest'] = {
			Current = false
		}
	};
	
	local Esp = {};
	local Killed = false;
	local AllPlayers = {};
	
	local function GetBodyParts(player)
		local Character = player.Character;
		if (Character == nil) then return; end;
	
		local HumanoidRootPart = FindFirstChild(Character, 'HumanoidRootPart');
		local Humanoid = FindFirstChild(Character, 'Humanoid');
	
		if (HumanoidRootPart == nil or Humanoid == nil) then return; end;
	
		return Character, HumanoidRootPart, Humanoid;
	end;
	
	-- no need to return this as it will only be used in this file
	local function Configure(Target, Properties)
		for player, tbl in pairs(AllPlayers) do
			for TargetProperty, Value in pairs(Properties) do 
				tbl[Target][TargetProperty] = Value;
			end;
		end;
	end;
	
	local function Attach(player)
		-- make sure we are not on the list
		if (player == Player) then return; end;
	
		AllPlayers[player] = {
			HBar = Drawing.new('Square'),
			HBarOutline = Drawing.new('Square'),
			PBox = Drawing.new('Square'),
			PBoxOutline = Drawing.new('Square'),
			PBoxFill = Drawing.new('Square'),
			Tracer = Drawing.new('Line'),
			EInfo = Drawing.new('Text'),
			HInfo = Drawing.new('Text'),
		};
	
		for i,v in pairs(AllPlayers[player]) do
			Configure(i, Settings[i].Properties);
		end;
	end;
	
	local function Detach(player)
		task.spawn(function()
			RunService.RenderStepped:Wait();
			local Drawings = AllPlayers[player];
			for i,v in pairs(Drawings) do 
				v:Remove();
			end;
			AllPlayers[player] = nil;
		end)
	end;
	
	-- attach the esp to all players
	for i,v in pairs(Players:GetPlayers()) do 
		Attach(v);
	end;
	
	local Con; Con = Players.PlayerAdded:Connect(function(v)
		Attach(v);
	end)
	
	local LeaveCon; LeaveCon = Players.PlayerRemoving:Connect(function(v)
		Detach(v);
	end)
	
	local OldClosest;
	local Time = 0;
	local UpdateCon; UpdateCon = RunService.RenderStepped:Connect(function(dt)
		Time += dt
		if (Time > (1 / Settings['FPS'].Current)) then
			Time = 0;
	
			-- will use these later for showing the closest player
			local Closest;
			local ClosestDistance = 9e9;
	
			if (Settings['On'].Current == false) then
				for i,v in pairs(AllPlayers) do
					for q,r in pairs(v) do 
						r.Visible = false;
					end; 
				end;
	
				return;
			end;
	
			for player, Drawings in pairs(AllPlayers) do 
				local Character, HumanoidRootPart, Humanoid = GetBodyParts(player);
				-- skip this player
				if (Character == nil) then
					for i,v in pairs(Drawings) do 
						v.Visible = false;
					end;
					continue;
				end;
	
				local Health, MaxHealth = Humanoid.Health, Humanoid.MaxHealth;
				-- if user is dead than set their drawings visiblity and skip the player
				if (Health == 0) then 
					for i,v in pairs(Drawings) do 
						v.Visible = false;
					end;
					continue;
				end;
	
				local Position, Visible = WorldToViewportPoint(Camera, HumanoidRootPart.Position);
				-- if user is off of the screen then set their drawings visiblity and skip the player
				if (Visible == false) then
					for i,v in pairs(Drawings) do 
						v.Visible = false;
					end;
					continue;
				end;
	
				-- box calculations/position size calculations
				local SizeX, SizeY = floor((Camera.ViewportSize.X / Position.Z) * Settings['PBox'].MultX), floor((Camera.ViewportSize.Y / Position.Z) * Settings['PBox'].MultY);
				local PositionX, PositionY, PositionZ = floor(Position.X - (SizeX / 2)), floor(Position.Y - (SizeY / 2)), floor(Position.Z);
	
				-- handle closest player
				local DistanceFromMouse = (GetMouseLocation(UserInputService) - Vec2(PositionX, PositionY)).Magnitude;
				if (DistanceFromMouse < ClosestDistance) then 
					Closest = player;
					ClosestDistance = DistanceFromMouse;
				end;
	
				-- handle health bar
				local HBar = Drawings.HBar;
				local HBarOutline = Drawings.HBarOutline;
				local HInfo = Drawings.HInfo;
				local Offset = 0;
	
				if (Settings['PBoxOutline'].Current == true) then 
					Offset = Settings['PBoxOutline'].Properties.Thickness;
				end;
	
				if (Settings['HBar'].Current == true) then 
					HBar.Visible = true;
					HBar.Size = Vec2(Settings['HBar'].SizeX, floor(SizeY / (MaxHealth / clamp(Health, 0, MaxHealth))));
					HBar.Position = Vec2(PositionX - ((Settings['HBar'].SizeX + 1) + Offset), PositionY + (SizeY - Drawings.HBar.Size.Y));
	
					if (Settings['HBarOutline'].Current == true) then 
						HBarOutline.Visible = true;
						HBarOutline.Size = HBar.Size + Vec2(HBarOutline.Thickness, HBarOutline.Thickness);
						HBarOutline.Position = HBar.Position - Vec2(HBarOutline.Thickness / 2, HBarOutline.Thickness / 2);
					else
						HBarOutline.Visible = false;
					end;
	
					if (Settings['HInfo'].Current == true) then 
						HInfo.Text = format('%0.f', Health);
						HInfo.Position = Vec2(PositionX - (HBar.Size.X + HBarOutline.Thickness + HInfo.TextBounds.X + 3), HBar.Position.Y);
						HInfo.Visible = true;
					else
						HInfo.Visible = false;
					end;
				else
					HInfo.Visible = false;
					HBar.Visible = false;
				end;
	
				local PBox = Drawings.PBox;
				local PBoxOutline = Drawings.PBoxOutline;
				if (Settings['PBox'].Current == true) then 
					PBox.Position = Vec2(PositionX, PositionY);
					PBox.Size = Vec2(SizeX, SizeY);
					PBox.Visible = true;
	
					if (Settings['PBoxOutline'].Current == true) then 
						PBoxOutline.Size = PBox.Size;
						PBoxOutline.Position = PBox.Position;
						PBoxOutline.Visible = true;
					end;
				else
					PBoxOutline.Visible = false;
					PBox.Visible = false;
				end;
	
				local PBoxFill = Drawings.PBoxFill;
				if (Settings['PBoxFill'].Current == true) then 
					PBoxFill.Position = Vec2(PositionX, PositionY);
					PBoxFill.Size = Vec2(SizeX, SizeY);
					PBoxFill.Visible = true;
				else
					PBoxFill.Visible = false;
				end;
	
				local Tracer = Drawings.Tracer;
				local TracerLocation = Settings['Tracer']['Location'];
				if (Settings['Tracer'].Current == true) then 
					Tracer.To = Vec2(PositionX + (SizeX / 2), PositionY + SizeY);
					Tracer.Visible = true;
					Tracer.From = TracerLocation == 'Top' and Vec2(Camera.ViewportSize.X / 2, 0) or TracerLocation == 'Bottom' and Vec2(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y) or TracerLocation == 'Follow Mouse' and Vec2(GetMouseLocation(UserInputService).X, GetMouseLocation(UserInputService).Y);
				else
				   Tracer.Visible = false;
				end;
	
				local EInfo = Drawings.EInfo;
				if (Settings['EInfo'].Current == true) then 
					EInfo.Text = string.format('%s\n[%s/%s]\n%s%%\n%sm', player.Name, floor(Health), floor(MaxHealth), floor((Health / MaxHealth) * 100), PositionZ);
					EInfo.Visible = true;
	
					if (Settings['PBox'].Current == true or Settings['PBoxFill'].Current == true) then 
						EInfo.Position = Vec2(PositionX + SizeX + 3, PositionY);
					else
						EInfo.Position = Vec2(PositionX + ((SizeX / 2) - (EInfo.TextBounds.X / 2)), PositionY + SizeY);
					end;
				else
					EInfo.Visible = false;
				end;
			end;
	
			if (Settings['Show Closest'].Current == true and Closest) then 
				local Drawings = AllPlayers[Closest];
	
				if (OldClosest and AllPlayers[OldClosest]) then
					for i,v in pairs(AllPlayers[OldClosest]) do
						Configure(i, Settings[i].Properties);
					end;
				end;
	
				OldClosest = Closest;
	
				for i,v in pairs(Drawings) do
					v.Color = Settings[i].ClosestColour;
				end;
			elseif (OldClosest) then 
				-- if toggled off then reset the old closest
				if (OldClosest and AllPlayers[OldClosest]) then
					for i,v in pairs(AllPlayers[OldClosest]) do
						Configure(i, Settings[i].Properties);
					end;
				end;
	
				OldClosest = nil;
			end;
		end;
	end)
	
	function Esp:Kill()
		Con:Disconnect();
		LeaveCon:Disconnect();
		Killed = true;
	
		for i,v in pairs(AllPlayers) do 
			Detach(i);
		end;
	
		UpdateCon:Disconnect();
	end;
	
	function Esp:GetSettings(Target)
		return Settings[Target];
	end;
	
	function Esp:UpdateSettings(Target, New)
		Settings[Target] = New;
	
		-- prevents errors
		if (Target ~= 'Show Closest') then
			Configure(Target, New.Properties);
		end;
	end;
	
	function Esp:Toggle(Bool)
		Settings['On'].Current = Bool;
	end;
	
	function Esp:ChangeFramerate(New)
		Settings['FPS'].Current = New;
	end;
	
	-- return the esp lib so we can use the functions stored in other scripts
	return Esp;]])();
	
		--// make sure esp stops if the ui is killed
		insert(ScriptKillList.Funcs, function()
			esp_module:Kill();
		end)
	
		local PlayerSection = Visuals:CreateSection('Player Visuals');
		PlayerSection:CreateToggle('Perception Enabled', GetSetting('Perception On'), function(Bool)
			SetSetting('Perception On', Bool);
	
			esp_module:Toggle(Bool);
		end)
	
		PlayerSection:CreateSlider('Framerate', 1, 400, GetSetting('Player Perception FPS') or 60, 'fps', function(Framerate)
			SetSetting('Player Perception FPS', Framerate);
	
			esp_module:ChangeFramerate(Framerate);
		end)
	
		PlayerSection:CreateToggle('Show Closest', GetSetting('Show Closest Player'), function(Bool)
			SetSetting('Show Closest Player', Bool);
	
			esp_module:UpdateSettings('Show Closest', {Current = Bool});
		end)
	
		local BoxOutlineDropdown = PlayerSection:CreateDropdown('Box', 'Properties');
	
		BoxOutlineDropdown:AddToggleColour('Enabled', GetSetting('Player Box'), GetSetting('Player Box Colour'), function(Bool, Colour)
			SetSetting('Player Box', Bool);
			SetSetting('Player Box Colour', Colour);
	
			local PBoxSettings = esp_module:GetSettings('PBox');
			PBoxSettings.Current = Bool;
			PBoxSettings.Properties.Color = Colour;
	
			esp_module:UpdateSettings('PBox', PBoxSettings);
		end)
	
		BoxOutlineDropdown:AddSlider('Size Multiplier X', 1, 10, GetSetting('Player Box Mult X') or 1.4, '', function(Value)
			SetSetting('Player Box Mult X', Value);
	
			local PBoxSettings = esp_module:GetSettings('PBox')
			PBoxSettings.MultX = Value;
	
			esp_module:UpdateSettings('PBox', PBoxSettings);
		end, 1)
	
		BoxOutlineDropdown:AddSlider('Size Multiplier Y', 1, 10, GetSetting('Player Box Mult Y') or 3.8, '', function(Value)
			SetSetting('Player Box Mult Y', Value);
	
			local PBoxSettings = esp_module:GetSettings('PBox')
			PBoxSettings.MultY = Value;
	
			esp_module:UpdateSettings('PBox', PBoxSettings);
		end, 1)
	
		BoxOutlineDropdown:AddSlider('Thickness', 1, 50, GetSetting('Player Box Thickness') or 2, 'mm', function(Thickness)
			SetSetting('Player Box Thickness', Thickness);
	
			local PBoxSettings = esp_module:GetSettings('PBox');
			PBoxSettings.Properties.Thickness = Thickness;
	
			esp_module:UpdateSettings('PBox', PBoxSettings)
		end)
	
		BoxOutlineDropdown:AddColourPicker('Closest Colour', GetSetting('Player Box Closest Colour'), function(Colour)
			SetSetting('Player Box Closest Colour', Colour);
	
			local PBoxSettings = esp_module:GetSettings('PBox');
			PBoxSettings.ClosestColour = Colour;
	
			esp_module:UpdateSettings('PBox', PBoxSettings);
		end)
	
		BoxOutlineDropdown:AddToggleColour('Outlined', GetSetting('Player Box Outline'), GetSetting('Player Box Outline Colour'), function(Bool, Colour)
			SetSetting('Player Box Outline', Bool);
			SetSetting('Player Box Outline Colour', Colour);
	
			local PBoxOutlineSettings = esp_module:GetSettings('PBoxOutline');
			PBoxOutlineSettings.Current = Bool;
			PBoxOutlineSettings.Properties.Color = Colour;
	
			esp_module:UpdateSettings('PBoxOutline', PBoxOutlineSettings);
		end)
	
		BoxOutlineDropdown:AddSlider('Outline Thickness', 0, 12, GetSetting('Player Box Outline Thickness') or 4, 'mm', function(Thickness)
			SetSetting('Player Box Outline Thickness', Thickness);
	
			local PBoxOutlineSettings = esp_module:GetSettings('PBoxOutline');
			PBoxOutlineSettings.Properties.Thickness = Thickness;
	
			esp_module:UpdateSettings('PBoxOutline', PBoxOutlineSettings);
		end)
	
		BoxOutlineDropdown:AddColourPicker('Outline Closest Colour', GetSetting('Player Box Outline Closest Colour'), function(Colour)
			SetSetting('Player Box Outline Closest Colour', Colour);
	
			local PBoxOutlineSettings = esp_module:GetSettings('PBoxOutline');
			PBoxOutlineSettings.ClosestColour = Colour;
	
			esp_module:UpdateSettings('PBoxOutline', PBoxOutlineSettings);
		end)
	
		local BoxFillDropdown = PlayerSection:CreateDropdown('Box Fill', 'Properties');
	
		BoxFillDropdown:AddToggleColour('Enabled', GetSetting('Player Box Fill'), GetSetting('Player Box Fill Colour'), function(Bool, Colour)
			SetSetting('Player Box Fill', Bool);
			SetSetting('Player Box Fill Colour', Colour);
	
			local PBoxFillSettings = esp_module:GetSettings('PBoxFill');
			PBoxFillSettings.Current = Bool;
			PBoxFillSettings.Properties.Color = Colour;
	
			esp_module:UpdateSettings('PBoxFill', PBoxFillSettings);
		end)
	
		BoxFillDropdown:AddSlider('Visibility', 0, 100, GetSetting('Player Box Fill Transparency') or 0.2, '', function(Transparency)
			Transparency = Transparency / 100;
	
			SetSetting('Player Box Fill Transparency', Transparency * 100);
	
			local PBoxFillSettings = esp_module:GetSettings('PBoxFill');
			PBoxFillSettings.Properties.Transparency = Transparency;
	
			esp_module:UpdateSettings('PBoxFill', PBoxFillSettings)
		end)
	
		BoxFillDropdown:AddColourPicker('Closest Colour', GetSetting('Player Box Fill Closest Colour'), function(Colour)
			SetSetting('Player Box Fill Closest Colour', Colour);
	
			local PBoxFillSettings = esp_module:GetSettings('PBoxFill');
			PBoxFillSettings.ClosestColour = Colour;
	
			esp_module:UpdateSettings('PBoxFill', PBoxFillSettings);
		end)
	
		local HBarDropdown = PlayerSection:CreateDropdown('Health Bar', 'Properties');
	
		HBarDropdown:AddToggleColour('Enabled', GetSetting('Player HBar'), GetSetting('Player HBar Colour'), function(Bool, Colour)
			SetSetting('Player HBar', Bool);
			SetSetting('Player HBar Colour', Colour);
	
			local HBarSettings = esp_module:GetSettings('HBar');
			HBarSettings.Current = Bool;
			HBarSettings.Properties.Color = Colour;
	
			esp_module:UpdateSettings('HBar', HBarSettings);
		end)
	
		HBarDropdown:AddSlider('Visibility', 0, 100, GetSetting('Player HBar Transparency') or 1, '', function(Transparency)
			Transparency = Transparency / 100;
	
			SetSetting('Player HBar Transparency', Transparency * 100);
	
			local HBarSettings = esp_module:GetSettings('HBar');
			HBarSettings.Properties.Transparency = Transparency;
	
			esp_module:UpdateSettings('HBar', HBarSettings)
		end)
	
		HBarDropdown:AddSlider('Size X', 0, 12, GetSetting('Player HBar SizeX') or 2, 'mm', function(SizeX)
			SetSetting('Player HBar SizeX', SizeX);
	
			local HBarSettings = esp_module:GetSettings('HBar');
			HBarSettings.SizeX = SizeX;
	
			esp_module:UpdateSettings('HBar', HBarSettings)
		end)
	
		HBarDropdown:AddToggleColour('Outlined', GetSetting('Player HBarOutline Outline'), GetSetting('Player HBarOutline Outline Colour'), function(Bool, Colour)
			SetSetting('Player HBarOutline Outline', Bool);
			SetSetting('Player HBarOutline Outline Colour', Colour);
	
			local HBarOutlineSettings = esp_module:GetSettings('HBarOutline');
			HBarOutlineSettings.Current = Bool;
			HBarOutlineSettings.Properties.Color = Colour;
	
			esp_module:UpdateSettings('HBarOutline', HBarOutlineSettings);
		end)
	
		HBarDropdown:AddSlider('Outline Thickness', 0, 12, GetSetting('Player HBarOutline Outline Thickness') or 4, 'mm', function(Thickness)
			SetSetting('Player HBarOutline Outline Thickness', Thickness);
	
			local HBarOutlineSettings = esp_module:GetSettings('HBarOutline');
			HBarOutlineSettings.Properties.Thickness = Thickness;
	
			esp_module:UpdateSettings('HBarOutline', HBarOutlineSettings);
		end)
	
		HBarDropdown:AddColourPicker('Outline Closest Colour', GetSetting('Player HBarOutline Closest Colour'), function(Colour)
			SetSetting('Player HBarOutline Outline Closest Colour', Colour);
	
			local HBarOutlineSettings = esp_module:GetSettings('HBarOutline');
			HBarOutlineSettings.ClosestColour = Colour;
	
			esp_module:UpdateSettings('HBarOutline', HBarOutlineSettings);
		end)
	
		HBarDropdown:AddColourPicker('Closest Colour', GetSetting('Player HBarOutline Colour'), function(Colour)
			SetSetting('Player HBarOutline Closest Colour', Colour);
	
			local HBarSettings = esp_module:GetSettings('HBarOutline');
			HBarSettings.ClosestColour = Colour;
	
			esp_module:UpdateSettings('HBarOutline', HBarSettings);
		end)
	
		local HInfoDropdown = PlayerSection:CreateDropdown('Health Info', 'Properties');
	
		HInfoDropdown:AddSlider('Font Size', 0, 35, GetSetting('Player Health Info Size') or 13, 'px', function(Size)
			SetSetting('Player Health Info Size', Size);
	
			local HInfoSettings = esp_module:GetSettings('HInfo');
			HInfoSettings.Properties.Size = Size;
	
			esp_module:UpdateSettings('HInfo', HInfoSettings);
		end)
	
		HInfoDropdown:AddSlider('Font', 0, 3, GetSetting('Player Health Info Font') or 0, '', function(Font)
			SetSetting('Player Health Info Font', Font);
	
			local HInfoSettings = esp_module:GetSettings('HInfo');
			HInfoSettings.Properties.Font = Font;
	
			esp_module:UpdateSettings('HInfo', HInfoSettings);
		end)
	
	
		HInfoDropdown:AddToggle('Outlined', GetSetting('Player Health Info Outline'), function(Bool)
			SetSetting('Player Health Info Outline', Bool);
	
			local HInfoSettings = esp_module:GetSettings('HInfo');
			HInfoSettings.Properties.Outline = Bool;
	
			esp_module:UpdateSettings('HInfo', HInfoSettings);
		end)
	
		HInfoDropdown:AddColourPicker('Colour', GetSetting('Player HInfo Colour'), function(Colour)
			SetSetting('Player HInfo Colour', Colour);
	
			local HInfoSettings = esp_module:GetSettings('HInfo');
			HInfoSettings.Properties.Color = Colour;
	
			esp_module:UpdateSettings('HInfo', HInfoSettings);
		end)
	
		HInfoDropdown:AddColourPicker('Closest Colour', GetSetting('Player HInfo Closest Colour'), function(Colour)
			SetSetting('Player HInfo Closest Colour', Colour);
	
			local HInfoSettings = esp_module:GetSettings('HInfo');
			HInfoSettings.ClosestColour = Colour;
	
			esp_module:UpdateSettings('HInfo', HInfoSettings);
		end)
	
		local EInfoDropdown = PlayerSection:CreateDropdown('Extra Info', 'Properties');
	
		EInfoDropdown:AddSlider('Font Size', 0, 35, GetSetting('Player Extra Info Size') or 13, 'px', function(Size)
			SetSetting('Player Extra Info Size', Size);
	
			local HInfoSettings = esp_module:GetSettings('EInfo');
			HInfoSettings.Properties.Size = Size;
	
			esp_module:UpdateSettings('EInfo', HInfoSettings);
		end)
	
		EInfoDropdown:AddSlider('Font', 0, 3, GetSetting('Player Extra Info Font') or 0, '', function(Font)
			SetSetting('Player Extra Info Font', Font);
	
			local HInfoSettings = esp_module:GetSettings('EInfo');
			HInfoSettings.Properties.Font = Font;
	
			esp_module:UpdateSettings('EInfo', HInfoSettings);
		end)
	
	
		EInfoDropdown:AddToggle('Outlined', GetSetting('Player Extra Info Outline'), function(Bool)
			SetSetting('Player Extra Info Outline', Bool);
	
			local HInfoSettings = esp_module:GetSettings('EInfo');
			HInfoSettings.Properties.Outline = Bool;
	
			esp_module:UpdateSettings('EInfo', HInfoSettings);
		end)
	
		EInfoDropdown:AddColourPicker('Colour', GetSetting('Player EInfo Colour'), function(Colour)
			SetSetting('Player EInfo Colour', Colour);
	
			local EInfoSettings = esp_module:GetSettings('EInfo');
			EInfoSettings.Properties.Color = Colour;
	
			esp_module:UpdateSettings('EInfo', EInfoSettings);
		end)
	
		EInfoDropdown:AddColourPicker('Closest Colour', GetSetting('Player EInfo Closest Colour'), function(Colour)
			SetSetting('Player EInfo Closest Colour', Colour);
	
			local EInfoSettings = esp_module:GetSettings('EInfo');
			EInfoSettings.ClosestColour = Colour;
	
			esp_module:UpdateSettings('EInfo', EInfoSettings);
		end)
	
		local TracerDropdown = PlayerSection:CreateDropdown('Tracer', 'Properties');
	
		TracerDropdown:AddToggleColour('Enabled', GetSetting('Player Tracer Enabled'), GetSetting('Player Tracer Colour'), function(Bool, Colour)
			SetSetting('Player Tracer Enabled', Bool);
			SetSetting('Player Tracer Colour', Colour);
	
			local TracerSettings = esp_module:GetSettings('Tracer');
			TracerSettings.Current = Bool;
			TracerSettings.Properties.Color = Colour;
	
			esp_module:UpdateSettings('Tracer', TracerSettings);
		end)
	
		TracerDropdown:AddSlider('Visibility', 0, 100, GetSetting('Player Tracer Transparency') or 1, '', function(Transparency)
			Transparency = Transparency / 100;
	
			SetSetting('Player Tracer Transparency', Transparency * 100);
	
			local TracerSettings = esp_module:GetSettings('Tracer');
			TracerSettings.Properties.Transparency = Transparency;
	
			esp_module:UpdateSettings('Tracer', TracerSettings)
		end)
	
		TracerDropdown:AddSlider('Thickness', 0, 100, GetSetting('Player Tracer Thickness') or 2, 'mm', function(Thickness)
			SetSetting('Player Tracer Thickness', Thickness);
	
			local TracerSettings = esp_module:GetSettings('Tracer');
			TracerSettings.Properties.Thickness = Thickness;
	
			esp_module:UpdateSettings('Tracer', TracerSettings)
		end)
	
		TracerDropdown:AddColourPicker('Closest Colour', GetSetting('Player Tracer Closest Colour'), function(Colour)
			SetSetting('Player Tracer Closest Colour', Colour);
	
			local TracerSettings = esp_module:GetSettings('Tracer');
			TracerSettings.ClosestColour = Colour;
	
			esp_module:UpdateSettings('Tracer', TracerSettings);
		end)
	
		local TracerMode = PlayerSection:CreateDropdown('Tracer Location', 'Selected');
		TracerMode:AddItem('Follow Mouse', function() 
			SetSetting('Tracer Location', 'Follow Mouse'); 
	
			local TracerSettings = esp_module:GetSettings('Tracer');
			TracerSettings.Location = 'Follow Mouse';
			esp_module:UpdateSettings('Tracer', TracerSettings);
		end);
		TracerMode:AddItem('Top', function() 
			SetSetting('Tracer Location', 'Top'); 
	
			local TracerSettings = esp_module:GetSettings('Tracer');
			TracerSettings.Location = 'Top';
			esp_module:UpdateSettings('Tracer', TracerSettings);
		end);
		TracerMode:AddItem('Bottom', function() 
			SetSetting('Tracer Location', 'Bottom'); 
	
			local TracerSettings = esp_module:GetSettings('Tracer');
			TracerSettings.Location = 'Bottom';
			esp_module:UpdateSettings('Tracer', TracerSettings);
		end);
	end;
	
	local UpdateTrinketProperties;
	do -- trinket visuals
		getgenv().AttachedTrinkets = {};
	
		UpdateTrinketProperties = function(Object, Property, Value, Name)
			for i,v in pairs(AttachedTrinkets) do
				if (CheckTrinket(i) == Name) then 
					v[Object][Property] = Value;
				end;
			end;
		end;
	
		local function Attach(Trinket, InfoText, Colour, Name)
			AttachedTrinkets[Trinket] = {
				BoxOutline = Drawing.new('Square'),
				BoxFill = Drawing.new('Square'),
				Tracer = Drawing.new('Line'),
				Information = Drawing.new('Text'),
				Distance = Drawing.new('Text'),
			};
	
			--rawset(AttachedTrinkets[Trinket].Information, 'Title', Name);
	
			AttachedTrinkets[Trinket].BoxOutline.Filled = false;
			AttachedTrinkets[Trinket].BoxOutline.Thickness = 3;
			AttachedTrinkets[Trinket].BoxFill.Filled = true;
			AttachedTrinkets[Trinket].BoxFill.Thickness = 1;
			AttachedTrinkets[Trinket].Information.Center = false;
	
			UpdateTrinketProperties('Information', 'Outline', Settings['Trinket Info Outline'], Name);
			UpdateTrinketProperties('Information', 'Color', Colour, Name);
			UpdateTrinketProperties('Information', 'Font', Settings['Trinket Info Font'], Name);
			UpdateTrinketProperties('Information', 'Size', Settings['Trinket Info Font Size'], Name);
			UpdateTrinketProperties('Distance', 'Font', Settings['Trinket Distance Text Font'], Name);
			UpdateTrinketProperties('Distance', 'Outline', Settings['Trinket Distance Text Outline'], Name);
			UpdateTrinketProperties('Distance', 'Color', Colour, Name);
			UpdateTrinketProperties('Distance', 'Size', Settings['Trinket Distance Font Size'], Name);
			UpdateTrinketProperties('Tracer', 'Color', Colour, Name);
			UpdateTrinketProperties('Tracer', 'Transparency', Settings['Trinket Tracer Transparency'] / 100, Name);
			UpdateTrinketProperties('Tracer', 'Thickness', Settings['Trinket Tracer Thickness'], Name);
			UpdateTrinketProperties('BoxFill', 'Transparency', Settings['Trinket Box Fill Transparency'] / 100, Name);
			UpdateTrinketProperties('BoxFill', 'Color', Colour, Name);
			UpdateTrinketProperties('BoxOutline', 'Color', Colour, Name);
	
			AttachedTrinkets[Trinket].Information.Text = InfoText;
		end;
	
		local function Detach(Trinket)
			task.spawn(function()
				RunService.RenderStepped:Wait();
				local Drawings = AttachedTrinkets[Trinket];
				if (Drawings) then for i,v in pairs(Drawings) do v:Remove(); end; end;
				AttachedTrinkets[Trinket] = nil;
			end)
		end;
	
		loadstring([[
			local Args = {...};
			local RunService = Args[1];
			local Detach = Args[2];
			local GetMouseLocation = Args[3];
			local UserInputService = Args[4];
			local Camera = workspace.CurrentCamera;
			local unpack = table.unpack;
			local insert = table.insert;
			local WorldToViewportPoint = Camera.WorldToViewportPoint;
			local Vec2 = Vector2.new;
			local FindFirstChild = game.FindFirstChild;
			local floor = math.floor;
	
			local function Refresh(Trinket, Options)
			local Drawings = AttachedTrinkets[Trinket];
			if (Drawings == nil) then return; end;
			if (Trinket.Parent == nil) then Detach(Trinket); end;
			if (Settings['Trinket ESP'] == false) then for i,v in pairs(Drawings) do v.Visible = false; end; return; end;
			local BoxEnabled, BoxFill, Tracer, Information, Distance, Location, TracerLocation = unpack(Options);
	
			local Position, Visible = WorldToViewportPoint(Camera, Trinket.Position);
			if (Visible == false) then for i,v in pairs(Drawings) do v.Visible = false; end; return; end;
	
			local SizeX, SizeY = (Camera.ViewportSize.Y / Position.Z) * 1.25, (Camera.ViewportSize.Y / Position.Z) * 1.25;
			local PositionX, PositionY, PositionZ = Position.X - (SizeX / 2), Position.Y - (SizeY / 2), Position.Z;
			local InfoText = Drawings.Information.Text;
	
			if (BoxEnabled == true) then 
				Drawings.BoxOutline.Position = Vec2(PositionX, PositionY);
				Drawings.BoxOutline.Size = Vec2(SizeX, SizeY);
				Drawings.BoxOutline.Visible = true;
			else
				Drawings.BoxOutline.Visible = false;
			end;
	
			if (BoxFill == true) then 
				Drawings.BoxFill.Position = Vec2(PositionX, PositionY);
				Drawings.BoxFill.Size = Vec2(SizeX, SizeY);
				Drawings.BoxFill.Visible = true;
			else
				Drawings.BoxFill.Visible = false;
			end;
	
			if (Tracer == true) then 
				Drawings.Tracer.To = Vec2(PositionX + (SizeX/2), PositionY + SizeY);
				Drawings.Tracer.Visible = true;
				Drawings.Tracer.From = TracerLocation == 'Top' and Vec2(Camera.ViewportSize.X / 2, 0) or TracerLocation == 'Bottom' and Vec2(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y) or TracerLocation == 'Follow Mouse' and Vec2(GetMouseLocation(UserInputService).X, GetMouseLocation(UserInputService).Y);
			else
				Drawings.Tracer.Visible = false;
			end;
	
			Drawings.Information.Text = InfoText;
			Drawings.Information.Visible = true;
			if (BoxEnabled == true or BoxFill == true) then 
				Drawings.Information.Position = Vec2(PositionX + SizeX + 3, PositionY);
			else
				Drawings.Information.Position = Vec2(PositionX + ((SizeX/2) - (Drawings.Information.TextBounds.X/2)), PositionY + SizeY);
			end;
	
			if (Distance == true) then 
				Drawings.Distance.Text = floor(PositionZ) .. 'm';
				Drawings.Distance.Visible = true;
				if (BoxEnabled == true or BoxFill == true) then 
					Drawings.Distance.Position = Vec2((PositionX - Drawings.Distance.TextBounds.X) - 3, PositionY);
				else
					Drawings.Distance.Position = Drawings.Information.Position + Vec2(0, Drawings.Information.TextBounds.Y + 2);
				end;
			else
				Drawings.Distance.Visible = false;
			end;
	
			if (Settings['Autopickup Trinkets'] == true and FindFirstChild(Trinket, 'Part') and FindFirstChild(Trinket.Part, 'ClickDetector') and Character and FindFirstChild(Character, 'HumanoidRootPart') and (Character.HumanoidRootPart.Position - Trinket.Part.Position).Magnitude <= 12) then fireclickdetector(Trinket.Part.ClickDetector); end;
		end;
	
		insert(ScriptKillList.Connections, RunService.RenderStepped:Connect(function()
			for i,v in pairs(AttachedTrinkets) do
				Refresh(i, {Settings['Trinket Box'], Settings['Trinket Box Filled'], Settings['Trinket Tracer'], Settings['Trinket Information'], Settings['Trinket Distance'], Settings['Trinket Location'], Settings['Trinket Tracer Location']}); 
			end;
		end))]])(RunService, Detach, GetMouseLocation, UserInputService);
	
		for i,v in pairs(workspace:GetChildren()) do 
			if (FindFirstChild(v, 'Part') and FindFirstChild(v.Part, 'ClickDetector') and v.Part.ClickDetector.MaxActivationDistance == 10) then 
				local Result = CheckTrinket(v);
				Attach(v, Result .. '\n' .. GetLocation(v), TableToColour(Settings['All Trinket Colours'][Result]), Result);
			end;
		end;
	
		insert(ScriptKillList.Connections, workspace.ChildAdded:Connect(function(v)
			if (FindFirstChild(v, 'Part') and FindFirstChild(v.Part, 'ClickDetector') and v.Part.ClickDetector.MaxActivationDistance == 10) then 
				local Result = CheckTrinket(v);
				Attach(v, Result .. '\n' .. GetLocation(v), TableToColour(Settings['All Trinket Colours'][Result]), Result);
			end;
		end))
	
		insert(ScriptKillList.Funcs, function()
			for i,v in pairs(AttachedTrinkets) do 
				for q,r in pairs(v) do Detach(i); end;
			end;
		end)
	end;
	
	local UpdateNpcProperties;
	do -- npc visuals
		getgenv().AttachedNpcs = {};
	
		UpdateNpcProperties = function(Object, Property, Value, Name)
			for i,v in pairs(AttachedNpcs) do
				v[Object][Property] = Value;
			end;
		end;
	
		local function Attach(Npc)
			AttachedNpcs[Npc] = {
				Information = Drawing.new('Text'),
			};
	
			AttachedNpcs[Npc].Information.Center = true;
	
			UpdateNpcProperties('Information', 'Outline', Settings['Npc Outline']);
			UpdateNpcProperties('Information', 'Color', TableToColour(Settings['Npc Info Colour']));
			UpdateNpcProperties('Information', 'Font', Settings['Npc Info Font']);
			UpdateNpcProperties('Information', 'Size', Settings['Npc Info Font Size']);
		end;
	
		local function Detach(Npc)
			task.spawn(function()
				RunService.RenderStepped:Wait();
				local Drawings = AttachedNpcs[Npc];
				if (Drawings) then for i,v in pairs(Drawings) do v:Remove(); end; end;
				AttachedNpcs[Npc] = nil;
			end)
		end;
	
		loadstring([[ 
			local Args = {...};
			local FindFirstChild = game.FindFirstChild;
			local format = string.format;
			local Vec2 = Vector2.new;
			local floor = math.floor;
			local Camera = workspace.Camera;
			local WorldToViewportPoint = Camera.WorldToViewportPoint;
			local Vec3 = Vector3.new;
	
			local function Refresh(Npc)
				local Drawings = AttachedNpcs[Npc];
				if (Drawings == nil) then return; end;
				if (Settings['Npc Esp'] == false or not FindFirstChild(Npc, 'HumanoidRootPart') or Settings['All Npc Names'][Npc.Name] == false) then for i,v in pairs(Drawings) do v.Visible = false; end; return; end;
				local Orientation, Size = Npc:GetBoundingBox();
				local Position, Visible = WorldToViewportPoint(Camera, Npc.HumanoidRootPart.Position - Vec3(0, Size.Y, 0));
				if (Visible == false) then for i,v in pairs(Drawings) do v.Visible = false; end; return; end;
		
				Drawings.Information.Text = format('%s\n%s', Npc.Name, floor(Position.Z));
				Drawings.Information.Position = Vec2(Position.X, Position.Y);
				Drawings.Information.Visible = true;
			end;
	
			table.insert(ScriptKillList.Connections, game:GetService('RunService').RenderStepped:Connect(function()
				for i,v in pairs(AttachedNpcs) do
					Refresh(i); 
				end;
			end))]])();
	
		NpcSection:CreateToggle('Display NPCs', Settings['Npc Esp'], function(Toggled)
			Settings['Npc Esp'] = Toggled;
		end)
	
		NpcSection:CreateToggle('Additional Info Outline', Settings['Npc Outline'], function(Toggled)
			Settings['Npc Outline'] = Toggled;
		end)
	
		NpcSection:CreateSlider('Additional Info Font', 0, 3, Settings['Npc Info Font'], '', function(Value)
			Settings['Npc Info Font'] = Value;
			UpdateNpcProperties('Information', 'Font', Value);
		end);
	
		NpcSection:CreateSlider('Additional Info Size', 0, 30, Settings['Npc Info Font Size'], '', function(Value)
			Settings['Npc Info Font Size'] = Value;
			UpdateNpcProperties('Information', 'Size', Value);
		end)
	
		NpcSection:CreateColourPicker('Additional Info Colour', TableToColour(Settings['Npc Info Colour']), function(Color)
			Settings['Npc Info Colour'] = {Color.R * 255, Color.G * 255, Color.B * 255};
			UpdateNpcProperties('Information', 'Color', Color);
		end)
	
		local NpcDropdown = NpcSection:CreateDropdown('NPCs', 'List');
	
		for i,v in pairs(workspace.NPCs:GetChildren()) do 
			Attach(v);
			if (Settings['All Npc Names'][v.Name] == nil) then 
				Settings['All Npc Names'][v.Name] = false;
			end;
			NpcDropdown:AddToggle(v.Name, Settings['All Npc Names'][v.Name], function(Toggled)
				Settings['All Npc Names'][v.Name] = Toggled;
			end);
		end;
	
		insert(ScriptKillList.Connections, workspace.NPCs.ChildAdded:Connect(function(v)
			Attach(v);
			if (Settings['All Npc Names'][v.Name] == nil) then
				Settings['All Npc Names'][v.Name] = false;
			end;
			NpcDropdown:AddToggle(v.Name, Settings['All Npc Names'][v.Name], function(Toggled)
				Settings['All Npc Names'][v.Name] = Toggled;
			end);
		end))
	
		insert(ScriptKillList.Funcs, function()
			for i,v in pairs(AttachedNpcs) do 
				for q,r in pairs(v) do Detach(i); end;
			end;
		end)
	end;
	
	do  -- trinket visuals section
		TrinketSection:CreateToggle('Trinket Visuals', Settings['Trinket ESP'], function(Toggled)
			Settings['Trinket ESP'] = Toggled;
		end)
	
		TrinketSection:CreateToggle('Trinket Box', Settings['Trinket Box'], function(Toggled)
			Settings['Trinket Box'] = Toggled;
		end)
	
		TrinketSection:CreateToggle('Box Filling', Settings['Trinket Box Filled'], function(Toggled)
			Settings['Trinket Box Filled'] = Toggled;
		end)
	
		TrinketSection:CreateSlider('Box Fill Opacity', 0, 100, Settings['Trinket Box Fill Transparency'], '', function(Value)
			Settings['Trinket Box Fill Transparency'] = Value;
			UpdateTrinketProperties('BoxFill', 'Transparency', Value / 100);
		end);
	
		TrinketSection:CreateToggle('Trinket Tracers', Settings['Trinket Tracer'], function(Toggled)
			Settings['Trinket Tracer'] = Toggled;
		end)
	
		TrinketSection:CreateToggle('Display Distance', Settings['Trinket Distance'], function(Toggled)
			Settings['Trinket Distance'] = Toggled;
		end)
	
		TrinketSection:CreateToggle('Distance Outline', Settings['Trinket Distance Text Outline'], function(Toggled)
			Settings['Trinket Distance Text Outline'] = Toggled;
			UpdateTrinketProperties('Distance', 'Outline', Toggled);
		end)
	
		TrinketSection:CreateSlider('Distance Font', 0, 3, Settings['Trinket Distance Text Font'], '', function(Value)
			Settings['Trinket Distance Text Font'] = Value;
			UpdateTrinketProperties('Distance', 'Font', Value);
		end);
	
		TrinketSection:CreateSlider('Distance Size', 0, 30, Settings['Trinket Distance Font Size'], '', function(Value)
			Settings['Trinket Distance Font Size'] = Value;
			UpdateTrinketProperties('Distance', 'Size', Value);
		end)
	
		TrinketSection:CreateToggle('Additional Info Outline', Settings['Trinket Info Outline'], function(Toggled)
			Settings['Trinket Info Outline'] = Toggled;
			UpdateTrinketProperties('Information', 'Outline', Toggled);
		end)
	
		TrinketSection:CreateSlider('Additional Info Font', 0, 3, Settings['Trinket Info Font'], '', function(Value)
			Settings['Trinket Info Font'] = Value;
			UpdateTrinketProperties('Information', 'Font', Value);
		end)
	
		TrinketSection:CreateSlider('Additional Info Size', 0, 30, Settings['Trinket Info Font Size'], '', function(Value)
			Settings['Trinket Info Font Size'] = Value;
			UpdateTrinketProperties('Information', 'Size', Value);
		end)
	
		TrinketSection:CreateSlider('Box Filler Opacity', 0, 100, Settings['Box Fill Transparency'], '', function(Value)
			Settings['Box Fill Transparency'] = Value;
			UpdateTrinketProperties('BoxFill', 'Transparency', Value / 100);
		end);
	
		TrinketSection:CreateSlider('Tracer Thickness', 0, 10, Settings['Trinket Tracer Thickness'], 'mm', function(Value)
			Settings['Trinket Tracer Thickness'] = Value;
			UpdateTrinketProperties('Tracer', 'Thickness', Value);
		end);
	
		TrinketSection:CreateSlider('Tracer Opacity', 0, 100, Settings['Trinket Tracer Transparency'], '', function(Value)
			Settings['Trinket Tracer Transparency'] = Value;
			UpdateTrinketProperties('Tracer', 'Transparency', Value / 100);
		end);
	
		local LocationDropdown = TrinketSection:CreateDropdown('Tracer Location', Settings['Trinket Tracer Location'])
		LocationDropdown:AddItem('Follow Mouse', function() Settings['Trinket Tracer Location'] = 'Follow Mouse'; end);
		LocationDropdown:AddItem('Top', function() Settings['Trinket Tracer Location'] = 'Top'; end);
		LocationDropdown:AddItem('Bottom', function() Settings['Trinket Tracer Location'] = 'Bottom'; end);
	
		local TrinketColourDropdown = TrinketSection:CreateDropdown('Trinket Colours', 'List');
		for i,v in pairs(Settings['All Trinket Colours']) do 
			TrinketColourDropdown:AddColourPicker(i, TableToColour(v), function(Color)
				Settings['All Trinket Colours'][i] = {Color.R * 255, Color.G * 255, Color.B * 255};
				UpdateTrinketProperties('Information', 'Color', Color, i);
				UpdateTrinketProperties('BoxFill', 'Color', Color, i);
				UpdateTrinketProperties('BoxOutline', 'Color', Color, i);
				UpdateTrinketProperties('Tracer', 'Color', Color, i);
				UpdateTrinketProperties('Distance', 'Color', Color, i);
			end);
		end;
	
		TrinketSection:CreateToggle('Auto Pickup Trinkets', Settings['Autopickup Trinkets'], function(Toggled)
			Settings['Autopickup Trinkets'] = Toggled;
		end)
	
		local FogToggle = WorldSection:CreateToggle('No Fog', Settings['No Fog Enabled'], function(Toggled)
			Settings['No Fog Enabled'] = Toggled;
			if (Toggled == true) then 
				Lighting.FogEnd = 1000000000;
				Lighting.FogStart = 1000000000;
				if (FindFirstChild(workspace, 'Thrown') and FindFirstChild(workspace.Thrown, 'FogCover')) then 
					workspace.Thrown.FogCover.Transparency = 1;
				end;
			elseif (FindFirstChild(workspace, 'Thrown') and FindFirstChild(workspace.Thrown, 'FogCover')) then 
				workspace.Thrown.FogCover.Transparency = 0;
				Lighting.FogEnd = 3000;
				Lighting.FogStart = 150;
			end;
		end)
	
		local ZoomToggle = WorldSection:CreateToggle('Max Zoom', Settings['Max Zoom Enabled'], function(Toggled)
			Settings['Max Zoom Enabled'] = Toggled;
			if (Toggled == true) then 
				Player.CameraMaxZoomDistance = 15000; 
			else 
				Player.CameraMaxZoomDistance = 70; 
			end;
		end)
	
		local FullbrightToggle = WorldSection:CreateToggle('Full Bright', Settings['Fullbright Enabled'], function(Toggled)
			Settings['Fullbright Enabled'] = Toggled;
			if (Toggled == true) then
				Lighting.Ambient = Color3.fromRGB(Settings['Fullbright Amount'], Settings['Fullbright Amount'], Settings['Fullbright Amount']);
			else
				Lighting.Ambient = Color3.fromRGB(20, 20, 20);
			end;
		end)
	
		local FullbrightSlider = WorldSection:CreateSlider('Brightness', 1, 255, Settings['Fullbright Amount'], 'Lumens', function(Value)
			Settings['Fullbright Amount'] = Value;
			if (Settings['Fullbright Enabled'] == true) then
				Lighting.Ambient = Color3.fromRGB(Value, Value, Value);
			end;
		end)
	
		insert(ScriptKillList.Funcs, function()
			if (Settings['No Fog Enabled'] == true) then FogToggle:Change(); end;
			if (Settings['Max Zoom Enabled'] == true) then ZoomToggle:Change(); end;
			if (Settings['Fullbright Enabled'] == true) then FullbrightToggle:Change(); end;
		end)
	end;
	
	do -- mana visuals
		local Spells = {
			['Snarvindur'] = {['M1'] = {Min = 60, Max = 75}, ['M2'] = {Min = 20, Max = 30}},
			['Percutiens'] = {['M1'] = {Min = 60, Max = 70}, ['M2'] = {Min = 70, Max = 80}},
			['Viribus'] = {['M1'] = {Min = 25, Max = 35}, ['M2'] = {Min = 60, Max = 70}},
			['Fimbulvetr'] = {['M1'] = {Min = 84, Max = 92}, ['M2'] = {Min = 70, Max = 80}},
			['Celeritas'] = {['M1'] = {Min = 70, Max = 90}, ['M2'] = {Min = 70, Max = 80}},
			['Ignis'] = {['M1'] = {Min = 80, Max = 98}, ['M2'] = {Min = 50, Max = 60}},
			['Nocere'] = {['M1'] = {Min = 70, Max = 85}, ['M2'] = {Min = 70, Max = 85}},
			['Sagitta Sol'] = {['M1'] = {Min = 50, Max = 65}, ['M2'] = {Min = 40, Max = 60}},
			['Trahere'] = {['M1'] = {Min = 75, Max = 85}},
			['Scrupus'] = {['M1'] = {Min = 30, Max = 100}},
			['Gelidus'] = {['M1'] = {Min = 80, Max = 98}, ['M2'] = {Min = 80, Max = 100}},
			['Armis'] = {['M1'] = {Min = 40, Max = 60}, ['M2'] = {Min = 70, Max = 80}},
			['Gate'] = {['M1'] = {Min = 75, Max = 83}, ['M2'] = {Min = 75, Max = 83}},
			['Velo'] = {['M1'] = {Min = 70, Max = 100}, ['M2'] = {Min = 40, Max = 60}},
			['Manus Dei'] = {['M1'] = {Min = 90, Max = 95}, ['M2'] = {Min = 50, Max = 60}},
			['Contrarium'] = {['M1'] = {Min = 80, Max = 95}, ['M2'] = {Min = 70, Max = 90}},
			['Trickstus'] = {['M1'] = {Min = 30, Max = 70}, ['M2'] = {Min = 30, Max = 50}},
			['Telorum'] = {['M1'] = {Min = 80, Max = 90}, ['M2'] = {Min = 70, Max = 80}},
			['Fons Vitae'] = {['M1'] = {Min = 75, Max = 100}, ['M2'] = {Min = 75, Max = 100}},
			['Perflora'] = {['M1'] = {Min = 70, Max = 90}, ['M2'] = {Min = 30, Max = 50}},
			['Verdien'] = {['M1'] = {Min = 75, Max = 100}, ['M2'] = {Min = 75, Max = 85}},
			['Floresco'] = {['M1'] = {Min = 90, Max = 100}, ['M2'] = {Min = 80, Max = 95}},
			['Hoppa'] = {['M1'] = {Min = 40, Max = 60}, ['M2'] = {Min = 50, Max = 60}},
			['Tenebris'] = {['M1'] = {Min = 90, Max = 100}, ['M2'] = {Min = 40, Max = 60}},
			['Inferi'] = {['M1'] = {Min = 10, Max = 30}},
			['Reditus'] = {['M1'] = {Min = 50, Max = 100}},
			['Secare'] = {['M1'] = {Min = 90, Max = 95}},
			['Howler'] = {['M1'] = {Min = 60, Max = 80}},
			['Ligans'] = {['M1'] = {Min = 63, Max = 80}},
			['Furantur'] = {['M1'] = {Min = 60, Max = 80}},
			['Dominus'] = {['M1'] = {Min = 50, Max = 100}},
			['Shrieker'] = {['M1'] = {Min = 30, Max = 50}},
			['Custos'] = {['M1'] = {Min = 45, Max = 65}},
			['Globus'] = {['M1'] = {Min = 70, Max = 100}},
			['Intermissum'] = {['M1'] = {Min = 70, Max = 100}},
			['Claritum'] = {['M1'] = {Min = 90, Max = 100}},
			['Hystericus'] = {['M1'] = {Min = 75, Max = 90}, ['M2'] = {Min = 15, Max = 35}},
		};
		local CurrentDisplay = '';
		local ManaBar;
	
		local MaxLineM1, MinLineM1 = Drawing.new('Line'), Drawing.new('Line');
		local MaxLineM2, MinLineM2 = Drawing.new('Line'), Drawing.new('Line');
		MaxLineM1.Visible = false;
		MinLineM1.Visible = false;
		MaxLineM2.Visible = false;
		MinLineM2.Visible = false;
	
		MaxLineM1.Thickness = 2;
		MinLineM1.Thickness = 2;
		MaxLineM2.Thickness = 2;
		MinLineM2.Thickness = 2;
	
		local function DisplayManaValues(Min, Max, MinLine, MaxLine, Type)
			if (Type == 'M1' and FindFirstChild(Character, 'WiseCasting')) then
				Min -= 5;
				Max += 5;
			end;
			if (Max >= 100) then Max = 98; end;
			if (Success == false) then return end;
			local SizeY = ManaBar.AbsoluteSize.Y;
			local MaxPosition = SizeY * (Max / 100);
			local MinPosition = SizeY * (Min / 100);
	
			MaxLine.From = Vec2(ManaBar.AbsolutePosition.X, (ManaBar.AbsolutePosition.Y + SizeY) - MaxPosition + GuiService:GetGuiInset().Y);
			MaxLine.To = Vec2(ManaBar.AbsolutePosition.X + ManaBar.AbsoluteSize.X, (ManaBar.AbsolutePosition.Y + SizeY) - MaxPosition + GuiService:GetGuiInset().Y);
			MaxLine.Visible = true;
	
			MinLine.From = Vec2(ManaBar.AbsolutePosition.X, (ManaBar.AbsolutePosition.Y + SizeY) - MinPosition + GuiService:GetGuiInset().Y);
			MinLine.To = Vec2(ManaBar.AbsolutePosition.X + ManaBar.AbsoluteSize.X, (ManaBar.AbsolutePosition.Y + SizeY) - MinPosition + GuiService:GetGuiInset().Y);
			MinLine.Visible = true;
		end;
	
		local function ManaVisualsSetup()
			repeat task.wait() until (Character);
			while (true) do 
				local Success, Error = pcall(function()
					ManaBar = Player.PlayerGui.StatGui.LeftContainer.Mana;
				end)
	
				if (Success == true) then break; end;
				task.wait();
			end;
	
			insert(CharacterConnections, Character.ChildAdded:Connect(function(Spell)
				local Result = Spells[Spell.Name];
				if (Result) then ManaData = Result; end;
	
				if (Result and Settings['Show Mana Amounts']) then 
					CurrentDisplay = Spell.Name;
					DisplayManaValues(Result['M1'].Min, Result['M1'].Max, MinLineM1, MaxLineM1, 'M1');
					if (Result['M2']) then
						DisplayManaValues(Result['M2'].Min, Result['M2'].Max, MinLineM2, MaxLineM2, 'M2');
					end;
				end;
			end))
	
			insert(CharacterConnections, Character.ChildRemoved:Connect(function(Spell)
				local Result = Spells[Spell.Name];
				if (Result) then 
					CurrentDisplay = '';
					MinLineM1.Visible = false;
					MaxLineM1.Visible = false;
					MinLineM2.Visible = false;
					MaxLineM2.Visible = false;
					ManaData = nil;
				end;
			end))
	
			insert(CharacterConnections, ManaBar:GetPropertyChangedSignal('AbsolutePosition'):Connect(function()
				local Result = Spells[CurrentDisplay];
				if (Result) then
					DisplayManaValues(Result['M1'].Min, Result['M1'].Max, MinLineM1, MaxLineM1, 'M1');
					if (Result['M2']) then
						DisplayManaValues(Result['M2'].Min, Result['M2'].Max, MinLineM2, MaxLineM2, 'M2');
					end;
				end;
			end));
		end;
		
		ManaVisualsSetup();
		insert(ScriptKillList.Connections, Player.CharacterAdded:Connect(ManaVisualsSetup));
	
		insert(ScriptKillList.Funcs, function()
			RunService.RenderStepped:Wait();
			MinLineM1:Remove();
			MaxLineM1:Remove();
			MinLineM2:Remove();
			MaxLineM2:Remove();
		end)
	
		ManaVisualsSection:CreateToggle('Display Spell Range', Settings['Show Mana Amounts'], function(Toggled)
			Settings['Show Mana Amounts'] = Toggled;
		end);
		ManaVisualsSection:CreateColourPicker('Spell Range M1 Colour', TableToColour(Settings['Spell Range M1 Colour']), function(Color)
			Settings['Spell Range M1 Colour'] = {Color.R * 255, Color.G * 255, Color.B * 255};
			MinLineM1.Color = Color;
			MaxLineM1.Color = Color;
		end);
	
		ManaVisualsSection:CreateColourPicker('Spell Range M2 Colour', TableToColour(Settings['Spell Range M2 Colour']), function(Color)
			Settings['Spell Range M2 Colour'] = {Color.R * 255, Color.G * 255, Color.B * 255};
			MinLineM2.Color = Color;
			MaxLineM2.Color = Color;
		end);
	end;
	
	do --notification handler 
		--loadstring(syn.crypt.custom.decrypt('aes-gcm', syn.request({Url = 'https://korohubscripts.xyz/RogueModList', Method = 'GET'}).Body, '*JHGTYnGjTmGjYU@$@$@$@$@$@!RFSDG', 'GHJKIUYT%^#@'))();
		modlist={[2804235376]=true,[562921975]=true,[1726305562]=true,[4208722451]=true,[14446802]=true,[2635632273]=true,[4336957595]=true,[1313683467]=true,[3503834125]=true,[73644758]=true,[360905811]=true,[359075971]=true,[1514197298]=true,[3408465701]=true,[1664035911]=true,[3314396480]=true,[3100055472]=true,[72941070]=true,[1989789343]=true,[1580374843]=true,[135246762]=true,[852806099]=true,[2989638077]=true,[342236135]=true,[2955538019]=true,[1769435808 ]=true,[2483686310]=true,[1767021048]=true,[420453270]=true,[2290295858]=true,[1163623035]=true,[2442412851]=true,[2935706207]=true,[1558461650]=true,[1974698166]=true,[3042590967]=true,[884337645]=true,[890053339]=true,[2486476615]=true,[1898371630]=true,[2835465359]=true,[1532400808]=true,[1571500371]=true,[2020022]=true,[1594825847]=true,[1702510277]=true,[53751073]=true,[2711065430]=true,[2558209282]=true,[1490237662]=true,[94196580]=true,[1827504848]=true,[1467281418]=true,[100301048]=true,[2813727134]=true,[906085690]=true,[2743023302]=true,[2441088083]=true,[1437735263]=true,[1434876935]=true,[1664951912]=true,[1634624721]=true,[1427289283]=true,[1924572917]=true,[1737632005]=true,[1646837089]=true,[1640610227]=true,[1033391529]=true,[1640579031]=true,[1605052309]=true,[1541696136]=true,[1424710010]=true,[1772939947]=true,[1365474]=true,[1666251156]=true,[657297886]=true,[1760478452]=true,[1694091008]=true,[1886232027]=true,[1481374426]=true,[7614687]=true,[1994835491]=true,[1640610227]=true,[1772220138]=true,[2636584066]=true,[1437735263]=true,[1772213095]=true,[2634108467]=true,[2380044986]=true,[1269564642]=true,[2628952307]=true,[1724476262]=true,[1372657476]=true,[1827096986]=true,[1099784]=true,[2021441454]=true,[2961357855]=true,[2912434643]=true,[2932246486]=true,[1127335842]=true,[2912434643]=true,[919529965]=true,[291212127]=true,[1119865061]=true,[61199815]=true,[2774005405]=true,[1964010979]=true,[1355899264]=true,[1039151732]=true,[610334108]=true,[2631651881]=true,[435842140]=true,[1396086284]=true,[773453710]=true,[1306714267]=true,[1611913668]=true,[80428860]=true,[2033938827]=true,[713632653]=true,[969237604]=true,[1218298198]=true,[80428625]=true,[2345327334]=true,[1660687857]=true,[1684412835]=true,[382530387]=true,[2823708385]=true,[2269989756]=true,[933066837]=true,[933034265]=true,[932988679]=true,[933051737]=true,[933776855]=true,[934548481]=true,[934563031]=true,[933007955]=true,[1112206890]=true,[1128867616]=true,[932687082]=true,[1189805269]=true,[605033793]=true,[1155962748]=true,[1160928447]=true,[1307705665]=true,[46733872]=true,[183394326]=true,[1815032663]=true,[1942589735]=true,[1998861491]=true,[1793536883]=true,[1814961283]=true,[1641654055]=true,[61964010]=true,[150393298]=true,[1850541759]=true,[1773646961]=true,[1889837864]=true,[1274952502]=true,[1274954491]=true,[1187836339]=true,[1561239655]=true,[1166774116]=true,[1166765919]=true,[1209354279]=true,[1269649341]=true,[1466827960]=true,[2011529547]=true,[2011537055]=true,[2027710302]=true,[2027710302]=true,[2295418814]=true,[1889644929]=true,[2243713065]=true,[2251211011]=true,[62799395]=true,[1182522141]=true,[76330767]=true,[2027711281]=true,[1570028862]=true,[1187983630]=true,[1971497540]=true,[2740705243]=true,[2683447477]=true,[1822601233]=true,[2027712961]=true,[1789779105]=true,[1188452334]=true,[1286388737]=true,[1151461473]=true,[1162916323]=true,[1955932990]=true,[43657280]=true,[1925284818]=true,[1385350272]=true,[2247564521]=true,[2027711281]=true,[1268793582]=true,[2790790832]=true,[2463960522]=true,[2790790832]=true,[1458940711]=true,[101594325]=true,[2371377064]=true,[1311841995]=true,[1380394419]=true,[861253469]=true,[1758874637]=true,[8743553]=true,[1746373491]=true,[1382859007]=true,[1971497540]=true,[1831963331]=true,[1756942363]=true,[66421384]=true,[1324194858]=true,[1924379093]=true,[636667116]=true,[463902568]=true,[1822601233]=true,[1339304342]=true,[819753036]=true,[1870964566]=true,[1993041810]=true,[2771410849]=true,[1501743885]=true,[1627172288]=true,[1461750508]=true,[1627542353]=true,[1814409921]=true,[370641536]=true,[2030754003]=true,[1035866906]=true,[1674470076]=true,[2224544636]=true,[1717714571]=true,[2212293841]=true,[1724968136]=true,[1977457838]=true,[2054555301]=true,[2024623183]=true,[1728267109]=true,[1698311275]=true,[2788247186]=true,[1711674094]=true,[2433507774]=true,[1644793978]=true,[2943888785]=true,[1698877459]=true,[1101961464]=true,[268288698]=true,[347168900]=true,[370074738]=true,[1598907171]=true,[1365630212]=true,[1501736135]=true,[1812917829]=true,[1843628356]=true,[1692834785]=true,[1625473298]=true,[186620221]=true,[1674540877]=true,[2236554616]=true,[2725672469]=true,[1654541805]=true,[2216260720]=true,[1671867123]=true,[1671857623]=true,[841932937]=true,[2547038520]=true,[1813352502]=true,[2496560466]=true,[397316298]=true,[2422880232]=true,[2913489106]=true,[2875137721]=true,[1921108260]=true,[2913489106]=true,[126944105]=true,[1407127731]=true,[2425855956]=true,[256502350]=true,[1416632182]=true,[386756953]=true,[1340810858]=true,[496207338]=true,[1556749965]=true,[1415070895]=true,[2225773061]=true,[1219436356]=true,[1209203328]=true,[2469076980]=true,[373117923]=true,[186276953]=true,[2757787294]=true,[474543732]=true,[322975235]=true,[3566640951]=true,[555637361]=true,[178397259]=true,[155984047]=true,[1414989147]=true,[920232735]=true,[418033912]=true,[360783907]=true,[2414098639]=true,[500980527]=true,[1660627843]=true,[2833384114]=true,[56989738]=true,[93692946]=true,[2402924516]=true,[1196940889]=true,[175641092]=true,[218776696]=true,[2621388535]=true,[416482638]=true,[1015828655]=true,[482935361]=true,[112128375]=true,[2040937777]=true,[1034769834]=true,[1494598515]=true,[2755944186]=true,[806917742]=true,[330696937]=true,[1815179390]=true,[2547402700]=true,[2621388535]=true,[335463909]=true,[2404402781]=true,[2313638362]=true,[1976432069]=true,[2652908177]=true,[806917742]=true,[2219743644]=true,[1162661396]=true,[2637285266]=true,[269828872]=true,[1196940889]=true,[2028630318]=true,[590909426]=true,[403526686]=true,[2055562081]=true,[2756471954]=true,[650982102]=true,[137227818]=true,[492894070]=true,[279863656]=true,[44959409]=true,[117092117]=true,[486009837]=true,[1291318997]=true,[1679829224]=true,[75731644]=true,[1339171735]=true,[36474685]=true,[2025502440]=true,[2282753888]=true,[210091146]=true,[1787748719]=true,[352847283]=true,[1516761697]=true,[2444007219]=true,[1991430366]=true,[2549848562]=true,[1540870106]=true,[1246969576]=true,[1891417891]=true,[2425452745]=true,[353012216]=true,[107699588]=true,[2672129646]=true,[1246963380]=true,[2815160238]=true,[1291318997]=true,[366553801]=true,[1957519532]=true,[726393068]=true,[2667273935]=true,[214632736]=true,[2311109954]=true,[2755939358]=true,[115322023]=true,[1817739266]=true,[342868571]=true,[72650184]=true,[1787752151]=true,[2447041462]=true,[1335455778]=true,[1965237445]=true,[507195580]=true,[37250706]=true,[75731644]=true,[1461334451]=true,[729280163]=true,[1329057395]=true,[1336219964]=true,[59335216]=true,[1291316459]=true,[145268714]=true,[2282753888]=true,[210091146]=true,[2238492099]=true,[501829083]=true,[154683504]=true,[660426270]=true,[1445762512]=true,[137927651]=true,[1720920138]=true,[103136456]=true,[364475720]=true,[352847283]=true,[683781094]=true,[80070356]=true,[1991430366]=true,[2025499830]=true,[1812905445]=true,[1540870106]=true,[2009429350]=true,[1978279069]=true,[339290703]=true,[214632736]=true,[279642028]=true,[2267517461]=true,[1147794782]=true,[1570008417]=true,[168837176]=true,[99846970]=true,[2464428062]=true,[2025505876]=true,[1507399904]=true,[885149738]=true,[37452688]=true,[1978279069]=true,[63106105]=true,[1291320349]=true,[1291316459]=true,[1307412990]=true,[73996830]=true,[6099882189]=true,[2813686073]=true,[308367366]=true,[2882016737]=true,[2899351599]=true,[2901882390]=true,[2901890290]=true,[1988081903]=true,[1263829090]=true,[1271002088]=true,[1314865812]=true,[1678083833]=true,[1934574678]=true,[1271000429]=true,[1823856808]=true,[1941469541]=true,[1938701078]=true,[146729008]=true,[1454779938]=true,[1938287069]=true,[1989964788]=true,[1715782214]=true,[1309224200]=true,[1720808438]=true,[1486435938]=true,[1479086676]=true,[1360670643]=true,[1338548068]=true,[1436858966]=true,[1717772504]=true,[1520339514]=true,[1185078680]=true,[1757038141]=true,[2242694245]=true,[1988769620]=true,[2290140]=true,[1880176220]=true,[1789789933]=true,[1400205469]=true,[1886660650]=true,[1717767905]=true,[1740598114]=true,[1323357196]=true,[1893567705]=true,[1149928889]=true,[1640302540]=true,[1986853524]=true,[1547384506]=true,[1666720033]=true,[2256614116]=true,[2245687777]=true,[2242392104]=true,[2242382365]=true,[1818269071]=true,[151813719]=true,[2056805856]=true,[2056802915]=true,[2056805856]=true,[2003069970]=true,[1254941442]=true,[145312731]=true,[1068062403]=true,[176298964]=true,[17126105]=true,[10717875]=true,[29272034]=true,[54057677]=true,[129994366]=true,[139437597]=true,[181614837]=true,[273600481]=true,[20702893]=true,[14539037]=true,[83457128]=true,[140216176]=true,[1106896270]=true,[63009802]=true,[303367322]=true,[27842344]=true,[58980784]=true,[385365802]=true,[71836558]=true,[117026263]=true,[15132718]=true,[70534282]=true,[32206821]=true,[23954085]=true,[107676222]=true,[194177872]=true,[155558399]=true,[153190640]=true,[66934974]=true,[75859777]=true,[48325909]=true,[4414535]=true,[20124427]=true,[53687357]=true,[411595307]=true,[28177302]=true,[93748141]=true,[31543184]=true,[64130481]=true,[4788820]=true,[15285997]=true,[10190020]=true,[111322117]=true,[336587557]=true,[996627612]=true,[119027642]=true,[49478031]=true,[58384638]=true,[10525748]=true,[1102883891]=true,[167825083]=true,[1489161084]=true,[238432089]=true,[48524736]=true,[29407034]=true,[67766634]=true,[816333]=true,[43791295]=true,[22425612]=true,[48788249]=true,[404567778]=true,[61017774]=true,[43234023]=true,[14525373]=true,[5675246]=true,[1563901530]=true,[23640600]=true,[1224692631]=true,[20878965]=true,[81343132]=true,[1632838991]=true,[67264994]=true,[148736030]=true,[100490945]=true,[163197639]=true,[1624663109]=true,[5091993]=true,[14933249]=true,[73776000]=true,[1285914343]=true,[1618563881]=true,[1165284489]=true,[1669062283]=true,[360905811]=true,[1315773858]=true,[1131704453]=true,[1466612445]=true,[1363341009]=true,[3563995196]=true,[44751350]=true,[1240011316]=true,[650577527]=true,[48094320]=true,[1227498214]=true,[679426418]=true,[39876285]=true,[58488048]=true,[1007041668]=true,[276698027]=true,[25717070]=true,[23090933]=true,[22777001]=true,[63736827]=true,[34881371]=true,[779763644]=true,[77857290]=true,[27243005]=true,[8540278]=true,[23576551]=true,[44936090]=true,[69671115]=true,[589663689]=true,[199854653]=true,[416454682]=true,[58583904]=true,[484467032]=true,[124435250]=true,[20033712]=true,[71300161]=true,[23903684]=true,[8132835]=true,[8234816]=true,[46939864]=true,[110153256]=true,[50767332]=true,[8925483]=true,[65069024]=true,[862971062]=true,[33500388]=true,[1195228108]=true,[1129840925]=true,[21250366]=true,[64088045]=true,[93209483]=true,[52614407]=true,[36710249]=true,[33800066]=true,[87274376]=true,[59458534]=true,[608683988]=true,[23908296]=true,[133051311]=true,[71682847]=true,[3564068481]=true,[80804680]=true,[76687480]=true,[57219437]=true,[29598148]=true,[1405009]=true,[18003319]=true,[19577927]=true,[17194900]=true,[152424365]=true,[42186069]=true,[209602635]=true,[1891471]=true,[673404644]=true,[46535718]=true,[202693941]=true,[4560769]=true,[31590121]=true,[10712932]=true,[298854675]=true,[19703637]=true,[1602522]=true,[37068408]=true,[59226303]=true,[19648599]=true,[19648599]=true,[28900154]=true,[4670408]=true,[53211421]=true,[309571]=true,[31939589]=true,[2377252]=true,[60522667]=true,[88297850]=true,[31429757]=true,[3498933]=true,[2360057]=true,[826488]=true,[72787966]=true,[196061512]=true,[35636733]=true,[1556246]=true,[32396743]=true,[48820010]=true,[350270355]=true,[46673236]=true,[111271712]=true,[862695888]=true,[64452544]=true,[266280]=true,[55788778]=true,[137938443]=true,[16551331]=true,[88482561]=true,[402433802]=true,[24517509]=true,[49882997]=true,[483340982]=true,[145740081]=true,[75000809]=true,[25552922]=true,[87459732]=true,[25067308]=true,[91877751]=true,[27533042]=true,[314297605]=true,[29876845]=true,[1717839897]=true,[1219342189]=true,[125810899]=true,[819529716]=true,[528862651]=true,[146061905]=true,[65748957]=true,[1306981979]=true,[48086963]=true,[69362814]=true,[73062]=true,[24125515]=true,[18432975]=true,[168151412]=true,[42930205]=true,[46828770]=true,[83785067]=true,[64992045]=true,[116913463]=true,[86554173]=true,[17776553]=true,[29258889]=true,[1147104]=true,[28023203]=true,[59158571]=true,[5861972]=true,[139151151]=true,[66219199]=true,[134439994]=true,[15695298]=true,[20010882]=true,[101892209]=true,[20469570]=true,[296804235]=true,[341399806]=true,[1061554056]=true,[77196836]=true,[13255300]=true,[191756506]=true,[75759386]=true,[32915494]=true,[445371567]=true,[56554769]=true,[23501905]=true,[25843220]=true,[112480124]=true,[288946197]=true,[59815962]=true,[22961239]=true,[83338597]=true,[34649899]=true,[708648]=true,[64217106]=true,[99413233]=true,[44683924]=true,[33799478]=true,[94867018]=true,[44121665]=true,[16304417]=true,[183602490]=true,[24646030]=true,[74649429]=true,[29914785]=true,[1099784]=true,[4201944]=true,[5840316]=true,[28163453]=true,[1791978332]=true,[341792]=true,[51453069]=true,[2252839]=true,[40118429]=true,[633527]=true,[32089732]=true,[1202645042]=true,[23820015]=true,[9144458]=true,[4416634]=true,[151239872]=true,[2406124]=true,[3254]=true,[23139144]=true,[39920871]=true,[94824236]=true,[13272440]=true,[29942942]=true,[10712932]=true,[28163453]=true,[197943305]=true,[404567778]=true,[13254859]=true,[1157442585]=true,[42279980]=true,[91088265]=true,[41737073]=true,[16773526]=true,[202693941]=true,[71060001]=true,[31939589]=true,[19626547]=true,[139728316]=true,[1268447506]=true,[477941880]=true,[67256724]=true,[112480124]=true,[708648]=true,[65103372]=true,[2377252]=true,[34475027]=true,[1427798376]=true,[2401838978]=true,[2401833232]=true,[2401500410]=true,[2508305]=true,[1063001671]=true,[1395964940]=true,[1322439027]=true,[1272495382]=true,[10525748]=true,[7200829]=true,[13732669]=true,[399932697]=true,[146558422]=true,[78508853]=true,[67766634]=true,[5254258]=true,[77981499]=true,[20116884]=true,[58488048]=true,[1186633861]=true,[900515746]=true,[167563269]=true,[175313]=true,[14802860]=true,[100443185]=true,[2287756402]=true,[52729068]=true,[207157]=true,[80936188]=true,[20878965]=true,[27504654]=true,[24783841]=true,[78894173]=true,[29272034]=true,[51753307]=true,[13303515]=true,[42954243]=true,[25717070]=true,[17283040]=true,[23977275]=true,[3935317]=true,[8925483]=true,[6147435]=true,[120671374]=true,[1038464311]=true,[44097012]=true,[3498933]=true,[52750256]=true,[8198390]=true,[10662840]=true,[779763644]=true,[288946197]=true,[14599405]=true,[29866329]=true,[9960695]=true,[807131]=true,[918766]=true,[8835343]=true,[28885841]=true,[46673236]=true,[16155938]=true,[46939864]=true,[29407034]=true,[56537645]=true,[276698027]=true,[40118429]=true,[1919162]=true,[45124920]=true,[1185647]=true,[17126105]=true,[10717875]=true,[633527]=true,[10190020]=true,[1014814266]=true,[2882016737]=true,[1635437222]=true,[1662815285]=true,[698447301]=true,[1092045087]=true,[2405096449]=true,[2823006965]=true,[1313797270]=true,[1179385670]=true,[1576640289]=true,[2946970579]=true,[1664705167]=true,[1502072303]=true,[1334031464]=true,[2215004042]=true,[343492755]=true,[704106302]=true,[1798449632]=true,[139880735]=true,[1212996949]=true,[1804334311]=true,[756002441]=true,[343492755]=true,[2215447758]=true,[1385767616]=true,[715106055]=true,[196209686]=true,[2035467301]=true,[2357869327]=true,[1334031464]=true,[2008857998]=true,[1932002534]=true,[1997079648]=true,[211959756]=true,[1300387426]=true,[9682832]=true,[1812273996]=true,[2920544967]=true,[2875135694]=true,[2875135694]=true,[2875342601]=true,[2872131732]=true,[229754895]=true,[1189236418]=true,[1921108260]=true,[126944105]=true,[1080240679]=true,[111279677]=true,[1483296390]=true,[1513716978]=true,[1557520219]=true,[1378344322]=true,[1481311850]=true,[1335467750]=true,[2926419285]=true,[119595760]=true,[2594702784]=true,[2727085076]=true,[376589419]=true,[2668545587]=true,[2879497256]=true,[1574520483]=true,[1802283888]=true,[1035545216]=true,[1057702314]=true,[1763290321]=true,[488914336]=true,[21831370]=true,[463887535]=true,[39491773]=true,[887229669]=true,[60182542]=true,[1207809943]=true,[77126786]=true,[1102348499]=true,[1132183765]=true,[1146282494]=true,[1155048150]=true,[1268697340]=true,[1161768907]=true,[1209659340]=true,[1250370759]=true,[329434822]=true,[1151581991]=true,[145390016]=true,[827547209]=true,[293742069]=true,[1241720680]=true,[1243895313]=true,[868690173]=true,[167205157]=true,[179695169]=true,[43564517]=true,[155010618]=true,[2376403051]=true,[1129791035]=true,[1129801077]=true,[1129791035]=true,[1118492856]=true,[1091218954]=true,[111217516]=true,[27964055]=true,[1078995119]=true,[195989673]=true,[1070438567]=true,[111220022]=true,[2760971446]=true,[2916249050]=true,[1065113711]=true,[2916152866]=true,[1098819079]=true,[1270632845]=true,[1078113936]=true,[2285895687]=true,[2712776568]=true,[1565788587]=true,[1155387942]=true,[1579856460]=true,[25843220]=true,[2712950486]=true,[1565806331]=true,[1129807313]=true,[1073409843]=true,[1702742210]=true,[1057091642]=true,[1069383718]=true,[1073393381]=true,[1073393717]=true,[2625099403]=true,[2913480909]=true,[2758900605]=true,[71648516]=true,[1057089324]=true,[2712923759]=true,[15695298]=true,[2011082425]=true,[2758927681]=true,[1060572635]=true,[2916106539]=true,[151245755]=true,[1092706175]=true,[1075002506]=true,[1071330197]=true,[99853559]=true,[1607965572]=true,[1384849772]=true,[1057299109]=true,[2291898592]=true,[1585537449]=true,[151245755]=true,[2006513201]=true,[75213733]=true,[1744412434]=true,[1065176533]=true,[2650287080]=true,[1560116204]=true,[1823544165]=true,[2878001579]=true,[1327114985]=true,[1269844035]=true,[1269798822]=true,[1269843707]=true,[1269843959]=true,[1269799404]=true,[1258313245]=true,[2379019037]=true,[2813812405]=true,[64992045]=true,[2813841932]=true,[2242313635]=true,[2945631687]=true,[1438587415]=true,[2319039801]=true,[1637261262]=true,[2455247577]=true,[2646512535]=true,[2823032305]=true,[2813840501]=true,[1272668411]=true,[1781337577]=true,[2814144061]=true,[1718118923]=true,[1285590893]=true,[1586688425]=true,[1220318470]=true,[1467069675]=true,[2414235128]=true,[2414216861]=true,[568412877]=true,[819529716]=true,[1581001041]=true,[48325909]=true,[1877438239]=true,[86554173]=true,[75859777]=true,[63009802]=true,[29258889]=true,[1573764461]=true,[1309996477]=true,[42930205]=true,[434861]=true,[65669329]=true,[1204866123]=true,[63880195]=true,[1627262185]=true,[1222209086]=true,[1485406518]=true,[2275381629]=true,[445371567]=true,[2512334673]=true,[23645455]=true,[1717839897]=true,[125810899]=true,[54961867]=true,[59158571]=true,[1106896270]=true,[1822280957]=true,[513776735]=true,[2239385277]=true,[491469539]=true,[547934624]=true,[2419750355]=true,[1694006511]=true,[1587800059]=true,[100380789]=true,[491378237]=true,[1299216629]=true,[1099784]=true,[73062]=true,[1822280957]=true,[1764858942]=true,[2245509768]=true,[10717875]=true,[19703637]=true,[120671374]=true,[29598148]=true,[73062]=true,[404567778]=true,[923184479]=true,[35938500]=true,[52614407]=true,[27675205]=true,[1622084399]=true,[27504654]=true,[57651089]=true,[20116884]=true,[47211607]=true,[64391423]=true,[89270109]=true,[23576551]=true,[24783841]=true,[46939864]=true,[47557163]=true,[167825083]=true,[21244532]=true,[7200829]=true,[14422093]=true,[2252839]=true,[29183637]=true,[52750256]=true,[33893691]=true,[5254258]=true,[33893691]=true,[5254258]=true,[16693015]=true,[26486981]=true,[72158524]=true,[10525748]=true,[29232213]=true,[2287756402]=true,[7665742]=true,[14933249]=true,[16162368]=true,[16155938]=true,[4715775]=true,[42279980]=true,[23977275]=true,[15427717]=true,[16138978]=true,[43787124]=true,[125057856]=true,[34074719]=true,[89162755]=true,[20769272]=true,[101742111]=true,[13806722]=true,[34758833]=true,[91088265]=true,[39920871]=true,[21365931]=true,[48081359]=true,[94824236]=true,[8198390]=true,[29394127]=true,[23139144]=true,[8404869]=true,[51581749]=true,[499728]=true,[44097012]=true,[45124920]=true,[28885841]=true,[34475027]=true,[29272034]=true,[23908296]=true,[23908296]=true,[28163453]=true,[10662840]=true,[97131045]=true,[1202645042]=true,[6147435]=true,[31163456]=true,[56365024]=true,[133051311]=true,[10190020]=true,[41737073]=true,[29866329]=true,[10712932]=true,[4416634]=true,[29407034]=true,[432431558]=true,[3498933]=true,[46673236]=true,[51753307]=true,[25717070]=true,[40118429]=true,[53211421]=true,[80804680]=true,[14730418]=true,[17283040]=true,[8925483]=true,[67766634]=true,[14321011]=true,[8132835]=true,[633527]=true,[1208035020]=true,[111173109]=true,[1350574893]=true,[23501905]=true,[1378939866]=true,[87971103]=true,[101762568]=true,[726781532]=true,[120062531]=true,[1754748220]=true,[1838061369]=true,[1048379518]=true,[1601224420]=true,[2042188599]=true,[1973437080]=true,[1489383395]=true,[1394143445]=true,[2316861753]=true,[2316854640]=true,[2316833150]=true,[1573092979]=true,[1757194444]=true,[1306870216]=true,[1981576420]=true,[1803789612]=true,[1928419693]=true,[1834291826]=true,[1509690931]=true,[1702682775]=true,[1925530728]=true,[1925519956]=true,[1399530392]=true,[1911455305]=true,[1774167094]=true,[1825872743]=true,[1825818979]=true,[1781420659]=true,[1771207358]=true,[1049420835]=true,[1754748220]=true,[1727721828]=true,[1649707792]=true,[1025136907]=true,[1037276632]=true,[916777510]=true,[149682997]=true,[907521940]=true,[913725919]=true,[1410777652]=true,[1405146285]=true,[1205371591]=true,[1297754520]=true,[1410550107]=true,[1318575768]=true,[1364138648]=true,[851857364]=true,[734956888]=true,[772742225]=true,[1406899727]=true,[726054774]=true,[953559186]=true,[1103934689]=true,[283074137]=true,[713343604]=true,[272089580]=true,[1367663209]=true,[1349481614]=true,[111670738]=true,[1330044617]=true,[1023899260]=true,[2213498947]=true,[87451502]=true,[1376030033]=true,[488218414]=true,[119187141]=true,[503011040]=true,[1326224577]=true,[139574305]=true,[119796390]=true,[88473520]=true,[561630757]=true,[148034343]=true,[696852583]=true,[574237481]=true,[636202949]=true,[1122758946]=true,[129030747]=true,[1205064533]=true,[1375854704]=true,[759106812]=true,[1540706882]=true,[1540704612]=true,[1276158757]=true,[757881117]=true,[524638959]=true,[1641891305]=true,[497051524]=true,[125810899]=true,[1822280957]=true,[513776735]=true,[491469539]=true,[547934624]=true,[2419750355]=true,[1694006511]=true,[1587800059]=true,[100380789]=true,[491378237]=true,[290704516]=true,[1300324809]=true,[27719179]=true,[1111478467]=true,[22580880]=true,[1684853910]=true,[742026481]=true,[1551768938]=true,[2013914007]=true,[2010259932]=true,[130815334]=true,[543595666]=true,[1893055336]=true,[1462432605]=true,[1859400469]=true,[2013929363]=true,[51981877]=true,[971149896]=true,[2013821751]=true,[1967500093]=true,[2060352403]=true,[2272592273]=true,[260253280]=true,[2013901054]=true,[1360589595]=true,[1352733812]=true,[1616253307]=true,[1023943936]=true,[867855425]=true,[1704601933]=true,[1154330449]=true,[936690334]=true,[57126107]=true,[51981877]=true,[1182522141]=true,[1618124829]=true,[2477809937]=true,[60165442]=true,[2494240677]=true,[2527044699]=true,[137784075]=true,[100581777]=true,[732168811]=true,[230742710]=true,[2240997286]=true,[1868667192]=true,[290704516]=true,[1300324809]=true,[27719179]=true,[1111478467]=true,[22580880]=true,[1684853910]=true,[742026481]=true,[1551768938]=true,[2013914007]=true,[2010259932]=true,[130815334]=true,[543595666]=true,[1893055336]=true,[1462432605]=true,[1859400469]=true,[2013929363]=true,[51981877]=true,[971149896]=true,[2013821751]=true,[1967500093]=true,[2060352403]=true,[2272592273]=true,[260253280]=true,[2013901054]=true,[1360589595]=true,[1352733812]=true,[1616253307]=true,[1023943936]=true,[867855425]=true,[1704601933]=true,[1154330449]=true,[936690334]=true,[57126107]=true,[51981877]=true,[1182522141]=true,[1618124829]=true,[2477809937]=true,[60165442]=true,[2494240677]=true,[2527044699]=true,[137784075]=true,[100581777]=true,[732168811]=true,[230742710]=true,[2240997286]=true,[1868667192]=true,[1868963428]=true,[1995398373]=true,[1066533000]=true,[2302787111]=true,[26300206]=true,[1902747485]=true,[2271555246]=true,[250511428]=true,[1818187139]=true,[1304609968]=true,[1801436016]=true,[1233665590]=true,[1267241379]=true,[1665079208]=true,[2334942699]=true,[2234908441]=true,[2245509768]=true,[1547811600]=true,[2296216848]=true,[554558143]=true,[1986868752]=true,[1933287501]=true,[1656766921]=true,[323144106]=true,[1638883641]=true,[1831546384]=true,[665081436]=true,[1306273323]=true,[1382166961]=true,[1675927851]=true,[1793103817]=true,[1286372504]=true,[1845863138]=true,[1018608397]=true,[413874977]=true,[1057287223]=true,[16551331]=true,[1770064639]=true,[1511147116]=true,[452493622]=true,[779884695]=true,[1143598080]=true,[1770064639]=true,[1817271314]=true,[1793536883]=true,[2345293412]=true,[2557998948]=true,[2437518325]=true,[1907790351]=true,[1395298778]=true,[976538420]=true,[1808301130]=true,[2037032176]=true,[566857143]=true,[1907790351]=true,[385054613]=true,[2009633476]=true,[1806443098]=true,[2013484283]=true,[2374549063]=true,[1135995074]=true,[1656460276]=true,[2037051916]=true,[1902275408]=true,[1653486349]=true,[1330574771]=true,[1274180688]=true,[1682123490]=true,[1277199278]=true,[1393520764]=true,[1598179589]=true,[365759405]=true,[1627515775]=true,[822518160]=true,[1045361117]=true,[457359190]=true,[734332548]=true,[861114757]=true,[2022494597]=true,[49712669]=true,[1682123490]=true,[1262274782]=true,[141209313]=true,[1430104044]=true,[1845432794]=true,[2009606764]=true,[1298604577]=true,[473084762]=true,[1940735282]=true,[1511059352]=true,[2387999872]=true,[76457301]=true,[1338758475]=true,[194011959]=true,[1200665524]=true,[84419317]=true,[63231504]=true,[1810314308]=true,[1991926622]=true,[479166641]=true,[1176249866]=true,[166847500]=true,[1269695154]=true,[1175015185]=true,[10483255]=true,[584890110]=true,[1792353860]=true,[1099876342]=true,[1142330802]=true,[294070196]=true,[160550319]=true,[172046541]=true,[1192057176]=true,[1175379068]=true,[1401060442]=true,[1185426576]=true,[1071466763]=true,[1246136086]=true,[705435994]=true,[536821427]=true,[1272595106]=true,[1127760967]=true,[101628131]=true,[1185246331]=true,[1306475614]=true,[2377145198]=true,[2033003701]=true,[1884947982]=true,[1761404695]=true,[1595728922]=true,[1510013467]=true,[1274845917]=true,[1241030919]=true,[1226359338]=true,[1200031108]=true,[1185095002]=true,[1406206358]=true,[1298323138]=true,[1311460213]=true,[1386504482]=true,[1390297433]=true,[1301579831]=true,[1814796338]=true,[23954085]=true,[91541179]=true,[1298591821]=true,[1223674536]=true,[611250755]=true,[2015242053]=true,[83785067]=true,[1290235781]=true,[51439919]=true,[1377274738]=true,[1496151041]=true,[1215016569]=true,[1282160594]=true,[1283253263]=true,[641619623]=true,[1292436622]=true,[1761357544]=true,[1639612065]=true,[2552331449]=true,[986120262]=true,[1269644760]=true,[1200654282]=true,[1159811414]=true,[631186966]=true,[1364860041]=true,[1318693144]=true,[1377255374]=true,[1269817530]=true,[1413481106]=true,[1354040835]=true,[1353704771]=true,[1253970263]=true,[1269616366]=true,[2291290891]=true,[1376083568]=true,[1274855064]=true,[1213696002]=true,[1884924198]=true,[20469570]=true,[1310758640]=true,[1162698540]=true,[1269661578]=true,[1496157938]=true,[66934974]=true,[55715152]=true,[51456003]=true,[362725646]=true,[1811200434]=true,[492813313]=true,[231126294]=true,[1829570260]=true,[460122440]=true,[66846214]=true,[1896520353]=true,[2392651152]=true,[2392653371]=true,[2292069314]=true,[1790393350]=true,[679809004]=true,[39793489]=true,[702804016]=true,[408865863]=true,[1162698540]=true,[1377393538]=true,[893592548]=true,[1725114188]=true,[2360001585]=true,[1204879137]=true,[1632086710]=true,[1849941898]=true,[2463880360]=true,[1868991595]=true,[2446806802]=true,[2301629256]=true,[1893680068]=true,[2438210508]=true,[445634940]=true,[496838645]=true,[2005506914]=true,[2219161252]=true,[2355357378]=true,[1877438239]=true,[1068659383]=true,[1790398756]=true,[2360173495]=true,[1893678302]=true,[175395823]=true,[165430217]=true,[1025985626]=true,[2350284450]=true,[2455885523]=true,[2276242739]=true,[2276750199]=true,[1105789512]=true,[445626479]=true,[445631432]=true,[2241983614]=true,[2298359249]=true,[1790421617]=true,[172031837]=true,[434600419]=true,[1893674173]=true,[1893683429]=true,[1893697332]=true,[1893701595]=true,[2005492659]=true,[1698260168]=true,[2249658499]=true,[41468779]=true,[2359949771]=true,[1706168791]=true,[2357072802]=true,[1896440726]=true,[1890147808]=true,[1893679021]=true,[1451955622]=true,[2290264437]=true,[1877576697]=true,[181392130]=true,[2374849862]=true,[1674936958]=true,[2383626317]=true,[1173911480]=true,[89733168]=true,[66709524]=true,[179677398]=true,[1175627404]=true,[74659657]=true,[65713939]=true,[2317835622]=true,[44738713]=true,[131537453]=true,[314982376]=true,[2501115826]=true,[1129799470]=true,[139217844]=true,[43156176]=true,[40866199]=true,[108938717]=true,[2050982777]=true,[378580446]=true,[2299362700]=true,[78421198]=true,[653096594]=true,[145229647]=true,[126539904]=true,[200009546]=true,[96899007]=true,[2770624]=true,[197943305]=true,[404567778]=true,[2508305]=true,[1063001671]=true,[78508853]=true,[100443185]=true,[167563269]=true,[175313]=true,[1308947635]=true,[1646788565]=true,[10662840]=true,[2459809641]=true,[727509528]=true,[1315384092]=true,[1306789413]=true,[1443475372]=true,[1180549470]=true,[1335569663]=true,[136337673]=true,[2325801627]=true,[1365882837]=true,[1501721407]=true,[1418469675]=true,[87909984]=true,[123469548]=true,[1601273203]=true,[2224351824]=true,[1821205384]=true,[1592160124]=true,[2566556965]=true,[2462418017]=true,[2492902474]=true,[2297433051]=true,[1333268254]=true,[2443714224]=true,[2443279702]=true,[1993300473]=true,[726905982]=true,[2297441568]=true,[2462344887]=true,[124184664]=true,[2443301045]=true,[2406671362]=true,[1501732690]=true,[2227394293]=true,[82344370]=true,[530992299]=true,[37777746]=true,[1501724797]=true,[1501728734]=true,[1501718424]=true,[1830913079]=true,[2293496856]=true,[104273890]=true,[1301897683]=true,[227192532]=true,[2326158172]=true,[1326353528]=true,[1724546730]=true,[1677947314]=true,[1121037680]=true,[672288357]=true,[1282130928]=true,[530867128]=true,[1485568568]=true,[1084225983]=true,[429712001]=true,[62026037]=true,[7439011]=true,[494558173]=true,[597204922]=true,[36350359]=true,[472415285]=true,[184256920]=true,[299795531]=true,[314430258]=true,[1860409295]=true,[350873735]=true,[1420192026]=true,[660886709]=true,[1950320936]=true,[1658403139]=true,[1658406775]=true,[1135302946]=true,[1856859864]=true,[662386872]=true,[1514777356]=true,[1857958635]=true,[2478429148]=true,[1980625707]=true,[1537676959]=true,[2332897840]=true,[1850633491]=true,[1811754028]=true,[1272896302]=true,[1979582008]=true,[1578064541]=true,[1906621042]=true,[2435340525]=true,[1391020996]=true,[1816640881]=true,[2000301663]=true,[2440349509]=true,[71228532]=true,[2378313402]=true,[1591978576]=true,[1810801176]=true,[1827466058]=true,[1800323609]=true,[168132232]=true,[1302018984]=true,[1483883053]=true,[25761689]=true,[116913463]=true,[1219342189]=true,[2292069314]=true,[1222210093]=true,[23954085]=true,[2457955300]=true,[71836558]=true,[1263686090]=true,[66934974]=true,[310588181]=true,[133702406]=true,[1263686771]=true,[1105740422]=true,[1298866755]=true,[1263685937]=true,[1263694066]=true,[1263691593]=true,[1279243661]=true,[1264661756]=true,[1264661395]=true,[23907358]=true,[1276086670]=true,[1276090772]=true,[1271869650]=true,[1276094055]=true,[1276096997]=true,[1276100044]=true,[1276102106]=true,[1276104466]=true,[1276113858]=true,[1276329497]=true,[1276332482]=true,[1276335935]=true,[1276340684]=true,[1276343118]=true,[1276345164]=true,[1276347583]=true,[1276350300]=true,[1276353153]=true,[1276354906]=true,[1276356740]=true,[1276359949]=true,[1276331015]=true,[29589032]=true,[1319389359]=true,[1344831289]=true,[1348398070]=true,[102346512]=true,[2390192496]=true,[514732182]=true,[2389782602]=true,[2394356539]=true,[2253064253]=true,[1811159524]=true,[2403326884]=true,[1184158123]=true,[1651500891]=true,[1348406601]=true,[1478227485]=true,[1480309888]=true,[1483169905]=true,[1918238137]=true,[1483222445]=true,[1834825994]=true,[1490492687]=true,[1611074638]=true,[1619283781]=true,[1625417688]=true,[1282500160]=true,[1625462803]=true,[1625477888]=true,[56702716]=true,[1842545594]=true,[1859326255]=true,[1859822714]=true,[57596958]=true,[35876637]=true,[56098155]=true,[215051523]=true,[1883230874]=true,[825698706]=true,[65034908]=true,[125218145]=true,[1481304087]=true,[2227083823]=true,[1753382281]=true,[1363341009]=true,[1235592931]=true,[51453069]=true,[1709050149]=true,[58670794]=true,[75377937]=true,[550045050]=true,[1280002247]=true,[2354908231]=true,[1202805119]=true,[1827474755]=true,[1845876876]=true,[1622084399]=true,[4838250]=true,[1276096997]=true,[1276094055]=true,[1271869650]=true,[16714898]=true,[1818781664]=true,[1800489758]=true,[14687006]=true,[1276086670]=true,[1812991290]=true,[1306949729]=true,[1479888673]=true,[726781532]=true,[56582932]=true,[1696645288]=true,[101762568]=true,[1675218234]=true,[1643725237]=true,[1246975200]=true,[1022854378]=true,[155034319]=true,[1264661395]=true,[120062531]=true,[1597860817]=true,[1264661756]=true,[1263691593]=true,[1263694066]=true,[1263685937]=true,[1263686771]=true,[310588181]=true,[1263686090]=true,[1276100044]=true,[1276102106]=true,[1276104466]=true,[1276113858]=true,[1276329497]=true,[1276332482]=true,[1276335935]=true,[1276340684]=true,[1276343118]=true,[1276345164]=true,[1276347583]=true,[1276350300]=true,[1276353153]=true,[1276354906]=true,[1276356740]=true,[1276359949]=true,[21038795]=true,[6147435]=true,[3935317]=true,[23977275]=true,[17283040]=true,[42954243]=true,[13303515]=true,[15285997]=true,[51753307]=true,[29272034]=true,[42279980]=true,[78894173]=true,[24783841]=true,[27504654]=true,[52750256]=true,[8198390]=true,[10662840]=true,[779763644]=true,[288946197]=true,[29866329]=true,[9960695]=true,[918766]=true,[80936188]=true,[41737073]=true,[55784178]=true,[207157]=true,[52729068]=true,[2287756402]=true,[63231504]=true,[17126105]=true,[100443185]=true,[14802860]=true,[175313]=true,[900515746]=true,[1186633861]=true,[20116884]=true,[77981499]=true,[5254258]=true,[16155938]=true,[46673236]=true,[1038464311]=true,[10717875]=true,[28885841]=true,[167563269]=true,[10712932]=true,[120671374]=true,[1185647]=true,[45124920]=true,[1919162]=true,[5212858]=true,[56537645]=true,[46939864]=true,[1786131909]=true,[413344372]=true,[1690064122]=true,[853436779]=true,[631802778]=true,[1814376203]=true,[1688043486]=true,[58146243]=true,[2225412597]=true,[1756953121]=true,[1639580444]=true,[273137782]=true,[1711894128]=true,[2023772394]=true,[1437441984]=true,[1436657832]=true,[1479897720]=true,[1643557749]=true,[1711897248]=true,[1711895442]=true,[1698723533]=true,[145920900]=true,[1658039004]=true,[1762627747]=true,[1421199984]=true,[509216030]=true,[1489167687]=true,[1643958838]=true,[1838417836]=true,[364118361]=true,[1593679252]=true,[1294331173]=true,[1241212164]=true,[1178631814]=true,[1735459789]=true,[2000020405]=true,[2241381243]=true,[1990652887]=true,[2242907332]=true,[1811591042]=true,[1714732112]=true,[2236546754]=true,[1608069465]=true,[88363969]=true,[1960550491]=true,[1733441825]=true,[1951541109]=true,[1698732535]=true,[1960543700]=true,[1811557839]=true,[1811613185]=true,[1811585234]=true,[706853249]=true,[1603930500]=true,[1253984511]=true,[1713955263]=true,[1304664272]=true,[1593639143]=true,[1386997811]=true,[1811621570]=true,[1811839142]=true,[1811577843]=true,[1711900416]=true,[1711899244]=true,[1268374834]=true,[1355743981]=true,[67723577]=true,[960168632]=true,[1533640469]=true,[776980993]=true,[689021345]=true,[691171649]=true,[1463896168]=true,[354510900]=true,[48751601]=true,[49114373]=true,[68822781]=true,[681798014]=true,[80102241]=true,[555596113]=true,[467785660]=true,[1917351661]=true,[1654726219]=true,[33678928]=true,[1470978631]=true,[1668905313]=true,[40744292]=true,[66398228]=true,[65315000]=true,[161348814]=true,[75146358]=true,[23907358]=true,[1787527858]=true,[95777702]=true,[199554644]=true,[1177809045]=true,[9165918]=true,[1025429891]=true,[1392319494]=true,[1025185091]=true,[1025188839]=true,[1025238998]=true,[112456645]=true,[1618394390]=true,[15459514]=true,[167825002]=true,[553292569]=true,[2280068897]=true,[310326739]=true,[95213837]=true,[1464638674]=true,[149857704]=true,[1455871054]=true,[102408890]=true,[91931089]=true,[1788450381]=true,[1922663720]=true,[1685313600]=true,[1467128350]=true,[1700195721]=true,[1429288371]=true,[47449832]=true,[1694284828]=true,[1669535383]=true,[1429289221]=true,[1721202502]=true,[1534492957]=true,[1540812109]=true,[1535398047]=true,[33041443]=true,[1145513320]=true,[1265377209]=true,[1078896892]=true,[1438106618]=true,[1438107130]=true,[1438107592]=true,[1438108210]=true,[1989789343]=true,[1438108688]=true,[1438109161]=true,[1438109740]=true,[1438110262]=true,[1438110920]=true,[1438111423]=true,[1438111947]=true,[1438112443]=true,[1438112921]=true,[1438193662]=true,[1438195479]=true,[1438199765]=true,[1438203709]=true,[1438206479]=true,[1438209169]=true,[1438210614]=true,[1438212063]=true,[1438213467]=true,[1438214244]=true,[1438214979]=true,[1438215696]=true,[1438216365]=true,[1438217186]=true,[1438217999]=true,[1438218707]=true,[1438341833]=true,[1438343172]=true,[1438344281]=true,[1438345151]=true,[1438345862]=true,[1402208951]=true,[1402238479]=true,[19975736]=true,[65315343]=true,[72854525]=true,[80628877]=true,[88278438]=true,[3526305]=true,[528718880]=true,[60669494]=true,[71066429]=true,[117890434]=true,[69504138]=true,[7665742]=true,[432782]=true,[102269021]=true,[65237130]=true,[1092789416]=true,[1319779827]=true,[2048125434]=true,[2041877363]=true,[1813691785]=true,[1590099977]=true,[2048127737]=true,[1813690167]=true,[1276090772]=true,[1276331015]=true,[31543184]=true,[296804235]=true,[1186359665]=true,[748912254]=true,[1344100235]=true,[20124427]=true,[1299216629]=true,[2215479510]=true,[56554769]=true,[2297858033]=true,[13255300]=true,[1061554056]=true,[1507119158]=true,[22961239]=true,[23090933]=true,[1462445852]=true,[83338597]=true,[1255256325]=true,[34649899]=true,[708648]=true,[64217106]=true,[99413233]=true,[44683924]=true,[77857290]=true,[27243005]=true,[33799478]=true,[94867018]=true,[8540278]=true,[23576551]=true,[44121665]=true,[16304417]=true,[5840316]=true,[199854653]=true,[58583904]=true,[74649429]=true,[29598148]=true,[17194900]=true,[1099784]=true,[1602522]=true,[59226303]=true,[2377252]=true,[31429757]=true,[4201944]=true,[75759386]=true,[93748141]=true,[32915494]=true,[61017774]=true,[43234023]=true,[14525373]=true,[445371567]=true,[2096]=true,[23501905]=true,[25843220]=true,[14933249]=true,[112480124]=true,[39876285]=true,[59815962]=true,[25067308]=true,[119027642]=true,[866327032]=true,[1897766714]=true,[341399806]=true,[87459732]=true,[73062]=true,[996627612]=true,[72547575]=true,[336587557]=true,[1350574893]=true,[338544906]=true,[1450434693]=true,[1341939134]=true,[1298375307]=true,[29656]=true,[1079278960]=true,[1379569938]=true,[83785067]=true,[68974314]=true,[1074212420]=true,[2292303044]=true,[1150295817]=true,[2055885057]=true,[1798455518]=true,[1806831934]=true,[350270355]=true,[3498933]=true,[2360057]=true,[826488]=true,[72787966]=true,[196061512]=true,[35636733]=true,[32396743]=true,[48820010]=true,[57372642]=true,[28900154]=true,[4670408]=true,[309571]=true,[31939589]=true,[60522667]=true,[88297850]=true,[673404644]=true,[4560769]=true,[31590121]=true,[298854675]=true,[19703637]=true,[37068408]=true,[76687480]=true,[57219437]=true,[1405009]=true,[18003319]=true,[152424365]=true,[42186069]=true,[209602635]=true,[1891471]=true,[52614407]=true,[75000809]=true,[33800066]=true,[87274376]=true,[133051311]=true,[71682847]=true,[80804680]=true,[65069024]=true,[862971062]=true,[33500388]=true,[1195228108]=true,[1129840925]=true,[21250366]=true,[64088045]=true,[25552922]=true,[93209483]=true,[71300161]=true,[8132835]=true,[8234816]=true,[63736827]=true,[44751350]=true,[1240011316]=true,[650577527]=true,[48094320]=true,[1227498214]=true,[679426418]=true,[58488048]=true,[25717070]=true,[1618563881]=true,[1315773858]=true,[1466612445]=true,[81343132]=true,[1632838991]=true,[67264994]=true,[148736030]=true,[100490945]=true,[163197639]=true,[1624663109]=true,[22425612]=true,[48788249]=true,[404567778]=true,[5675246]=true,[1563901530]=true,[23640600]=true,[1224692631]=true,[20878965]=true,[1102883891]=true,[1489161084]=true,[48524736]=true,[29407034]=true,[67766634]=true,[816333]=true,[43791295]=true,[58384638]=true,[49478031]=true,[111322117]=true,[64130481]=true,[13769572]=true,[608683988]=true,[276698027]=true,[191756506]=true,[10525748]=true,[4788820]=true,[28177302]=true,[53687357]=true,[101892209]=true,[20010882]=true,[15695298]=true,[77196836]=true,[20469570]=true,[134439994]=true,[40118429]=true,[1277814430]=true,[44478176]=true,[300494055]=true,[1823067849]=true,[1823073528]=true,[1842663795]=true,[2323856665]=true,[1172443841]=true,[1187172828]=true,[1208060669]=true,[1480983283]=true,[1480984106]=true,[1764856940]=true,[1764858942]=true,[1764860485]=true,[1480993487]=true,[1480984525]=true,[1322845993]=true,[1906102854]=true,[1520906842]=true,[1842030336]=true,[6998538]=true,[1977457838]=true,[1798443206]=true,[1823058408]=true,[2323901417]=true,[1842660971]=true,[1186663567]=true,[748570255]=true,[2243361149]=true,[1271667679]=true,[2003657555]=true,[1622457234]=true,[358352297]=true,[1134071359]=true,[1443175480]=true,[17187421]=true,[1595814673]=true,[1378939866]=true,[1839186841]=true,[465551111]=true,[1423301158]=true,[1261323142]=true,[1086074389]=true,[712545293]=true,[2014572123]=true,[411595307]=true,[2026538690]=true,[1840420838]=true,[1039500280]=true,[915326477]=true,[3121]=true,[1673341446]=true,[529553120]=true,[1871351612]=true,[1855311776]=true,[1889172788]=true,[391318734]=true,[1375584015]=true,[388964910]=true,[36023677]=true,[1801994040]=true,[1648816157]=true,[554558143]=true,[411228416]=true,[1840915496]=true,[1092793629]=true,[1269896862]=true,[1965943945]=true,[71594616]=true,[1661852962]=true,[1759968982]=true,[352436648]=true,[1213487622]=true,[20466284]=true,[1611125906]=true,[238432089]=true,[1331062865]=true,[459872581]=true,[8024238]=true,[1285420992]=true,[1378997945]=true,[1285477476]=true,[1301729609]=true,[1285478286]=true,[50767332]=true,[32206821]=true,[139386135]=true,[201812845]=true,[1285478908]=true,[42601519]=true,[19577927]=true,[19207440]=true,[1324096482]=true,[27798111]=true,[1399591799]=true,[1282530121]=true,[1045296466]=true,[128957794]=true,[65103372]=true,[15763111]=true,[261150872]=true,[55371484]=true,[30046457]=true,[1216251724]=true,[1213703865]=true,[132062872]=true,[1279176001]=true,[965337871]=true,[643277321]=true,[1126351214]=true,[1223652249]=true,[78959008]=true,[1049995095]=true,[1257077532]=true,[874960978]=true,[1257076570]=true,[1234077353]=true,[69533336]=true,[921575495]=true,[533067161]=true,[112284731]=true,[1188680873]=true,[1117480825]=true,[184718069]=true,[36710249]=true,[1057686944]=true,[36710133]=true,[64452544]=true,[1007041668]=true,[8835343]=true,[1285429032]=true,[1285469764]=true,[1285470903]=true,[1285471921]=true,[21824399]=true,[1182487696]=true,[1556246]=true,[4416634]=true,[151239872]=true,[1464856689]=true,[1290855465]=true,[1472304888]=true,[583704172]=true,[1379315387]=true,[89811502]=true,[1405362827]=true,[1089614165]=true,[123659598]=true,[1296096275]=true,[986120262]=true,[1472289714]=true,[876956673]=true,[94025762]=true,[72953156]=true,[1298772854]=true,[74992898]=true,[231444352]=true,[978081827]=true,[659591345]=true,[1486771130]=true,[9144458]=true,[183602490]=true,[30977371]=true,[1206636457]=true,[1310916054]=true,[68156658]=true,[80251971]=true,[1457288532]=true,[202693941]=true,[1461531073]=true,[22777001]=true,[349351630]=true,[13824125]=true,[455124]=true,[193956998]=true,[93360939]=true,[314130163]=true,[15427717]=true,[319928933]=true,[45222098]=true,[1306693011]=true,[1117180646]=true,[1202645042]=true,[1272842312]=true,[1460180503]=true,[102339417]=true,[125958123]=true,[85218817]=true,[1032713297]=true,[32089732]=true,[633527]=true,[77197774]=true,[23903684]=true,[266280]=true,[955294]=true,[1397236146]=true,[111271712]=true,[862695888]=true,[34881371]=true,[1276162125]=true,[55896964]=true,[53211421]=true,[167403418]=true,[268454683]=true,[1222083976]=true,[807131]=true,[1159483211]=true,[76745665]=true,[57875260]=true,[1175385098]=true,[59458534]=true,[1276338054]=true,[110153256]=true,[14599405]=true,[7625833]=true,[23820015]=true,[689716342]=true,[39954130]=true,[1112247103]=true,[1039346475]=true,[37962381]=true,[19648599]=true,[1240957868]=true,[427513046]=true,[681937593]=true,[672533365]=true,[572356506]=true,[172649963]=true,[1114182264]=true,[1301685594]=true,[102087038]=true,[484467032]=true,[65352310]=true,[1056751313]=true,[22955477]=true,[20033712]=true,[44809171]=true,[26411397]=true,[44936090]=true,[28163453]=true,[54961867]=true,[325906790]=true,[40504181]=true,[1300141753]=true,[46535718]=true,[8925483]=true,[1176128461]=true,[1260994197]=true,[1261007234]=true,[1311977889]=true,[9142071]=true,[147126095]=true,[341792]=true,[123553602]=true,[23908296]=true,[44097012]=true,[69671115]=true,[105370115]=true,[10190020]=true,[1392117549]=true,[1168768]=true,[1272213765]=true,[24646030]=true,[1269564642]=true,[5091993]=true,[1523895121]=true,[589663689]=true,[1186414721]=true,[1584528006]=true,[1131704453]=true,[66219199]=true,[1539358263]=true,[1272295036]=true,[155592591]=true,[1240170653]=true,[1080397632]=true,[73776000]=true,[1308691115]=true,[1549626408]=true,[124435250]=true,[606303930]=true,[1557044998]=true,[314046485]=true,[480776511]=true,[56566840]=true,[1589058343]=true,[73279597]=true,[1165284489]=true,[1502024168]=true,[2252839]=true,[1473827253]=true,[63593187]=true,[1624610745]=true,[1199083638]=true,[1351491649]=true,[1669062283]=true,[314494585]=true,[1132565926]=true,[534291186]=true,[416454682]=true,[21067153]=true,[346425550]=true,[668528977]=true,[266800563]=true,[1555483440]=true,[351968964]=true,[1062300213]=true,[92501615]=true,[1301670594]=true,[95267480]=true,[167825083]=true,[29269893]=true,[29914785]=true,[3620674]=true,[1387307949]=true,[1618506988]=true,[1287262904]=true};
	
		local Illusionists = {};
		local ArtifactList = {
			'rift gem',
			'amulet of the',
			'lannis',
			'mysterious',
			'night',
			'howler fr',
			'phoenix down',
			'ice es',
			'scroll of fimbulv',
			'scroll of manus dei',
			'spider',
			'fairfrozen',
			'metal',
		};
	
		local function IsArtifact(Name)
			for i,v in pairs(ArtifactList) do 
				if (match(Name:lower(), v)) then 
					return true;
				end;
			end;
			return false;
		end;
	
		local BackpackConnections = {};
		local NotifiedArtifacts = {};
	
		local function SetupUser(User)
			if (User == Player) then return; end;
			NotifiedArtifacts[User.Name] = {};
			if (RogueVersion == 'Gaia') then
				repeat task.wait() until (User:GetAttribute('FirstName') and User:GetAttribute('LastName'));
			else
				repeat task.wait() until (FindFirstChild(User, 'leaderstats') and FindFirstChild(User.leaderstats, 'FirstName') and FindFirstChild(User.leaderstats, 'LastName') and FindFirstChild(User.leaderstats, 'Hidden'));
			end;
	
			if (Settings['Moderator Notification'] == true and modlist[User.UserId]) then 
				UiData.Functions:Notify(format('Moderator joined: %s | %s', User.Name, GetFullCharacterName(User)), 9e9, Settings['Notification Location']); 
			end;
	
			if (Settings['Moderator Notification'] == true and (User:GetAttribute('Hidden') or RogueVersion == 'Khei' and User.leaderstats.Hidden.Value == true)) then 
				UiData.Functions:Notify(format('Greater Navaran joined: %s | %s', User.Name, GetFullCharacterName(User)), 9e9, Settings['Notification Location']); 
			end;
	
			local LichNames = {"Bone", "Vertebrae", "Sternum", "Rib", "Cranium", "Occipital", "Parietal", "Temporal", "Frontal", "Ethmoid", "Maxillae", "Lacrimal", "Zygomatic", "Palatine", "Concha", "Vomer", "Hyoid", "Mandible", "Malleus", "Incus", "Stapes", "Humerus", "Scapula", "Clavicle", "Ulna", "Radius", "Carpals", "Lunate", "Triquetral", "Pisiform", "Trapezium", "Trapezoid", "Capitate", "Hamate", "Metacarpal", "Phalanges", "Distal", "Femur", "Patella", "Tibia", "Fibula", "Tarsals", "Calcaneus", "Talus", "Navicular", "Cuneiform", "Metatarsal", "Marrow"};
	
			if (Settings['Moderator Notification'] == true and not modlist[User.UserId] and (RogueVersion == 'Gaia' and table.find(LichNames, User:GetAttribute('FirstName') or table.find(LichNames, User.leaderstats.FirstName.Value)))) then 
				UiData.Functions:Notify(format('Lich joined: %s | %s', User.Name, GetFullCharacterName(User)), 9e9, Settings['Notification Location']); 
			end;
	
			repeat task.wait() until (User:FindFirstChild('Backpack') and User.Character);
	
			for i,v in pairs(User.Backpack:GetChildren()) do 
				if (Settings['Artifact Notification'] == true and table.find(ArtifactList, v.Name:lower())) then 
					UiData.Functions:Notify(format('%s | %s has an artifact (%s)', User.Name, GetFullCharacterName(User), v.Name), 9e9, Settings['Notification Location']); 
				end;
			end;
	
			if (User.Character and FindFirstChild(User.Character, 'Observe') or FindFirstChild(User.Backpack, 'Observe')) then 
				if (Settings['Illusionist Notification'] == true) then 
					UiData.Functions:Notify(format('Illusionist joined: %s | %s', User.Name, GetFullCharacterName(User)), 9e9, Settings['Notification Location']); 
					insert(Illusionists, User.Name);
				end;
			end;
	
			local BackpackAddedCon; BackpackAddedCon = User.Backpack.ChildAdded:Connect(function(Tool)
				if (Tool.Name == 'Observe') then 
					if (Settings['Illusionist Notification'] == true and not table.find(Illusionists, User.Name)) then 
						UiData.Functions:Notify(format('Illusionist joined: %s | %s', User.Name, GetFullCharacterName(User)), 9e9, Settings['Notification Location']); 
						insert(Illusionists, User.Name);
					end;
				elseif (Settings['Artifact Notification'] == true and IsArtifact(Tool.Name) and not table.find(NotifiedArtifacts[User.Name], Tool.Name)) then 
					UiData.Functions:Notify(format('Player %s | %s has an artifact (%s)', User.Name, GetFullCharacterName(User), Tool.Name), 9e9, Settings['Notification Location']); 
					insert(NotifiedArtifacts[User.Name], Tool.Name);
				end;
			end)
	
			BackpackConnections[User.Name] = BackpackAddedCon;
		end;
	
		for i,v in pairs(Players:GetPlayers()) do 
			task.spawn(function() SetupUser(v) end);
		end;
	
		insert(ScriptKillList.Connections, Players.PlayerAdded:Connect(SetupUser));
		insert(ScriptKillList.Connections, Players.PlayerRemoving:Connect(function(User)
			local IllusFound = table.find(Illusionists, User.Name);
			local BackpackFound = BackpackConnections[User.Name];
	
			if (Settings['Illusionist Notification'] == true and IllusFound) then 
				UiData.Functions:Notify(format('Illusionist left: %s | %s', User.Name, GetFullCharacterName(User)), 9e9, Settings['Notification Location']); 
				table.remove(Illusionists, IllusFound);
			end;
	
			if (Settings['Moderator Notification'] == true and modlist[User.UserId]) then 
				UiData.Functions:Notify(format('Moderator left: %s | %s', User.Name, GetFullCharacterName(User)), 9e9, Settings['Notification Location']); 
			end;
	
			if (Settings['Combat Log Notification'] == true and User.Character and FindFirstChild(User.Character, 'Danger')) then 
				UiData.Functions:Notify(format('Player combat logged: %s | %s', User.Name, GetFullCharacterName(User)), 9e9, Settings['Notification Location']); 
			end;
	
			if (BackpackFound) then 
				BackpackFound:Disconnect();
				BackpackConnections[User.Name] = nil;
				table.clear(NotifiedArtifacts[User.Name]);
				NotifiedArtifacts[User.Name] = nil;
			end;
		end))
	
		insert(ScriptKillList.Funcs, function()
			for i,v in pairs(BackpackConnections) do 
				v:Disconnect();
			end;
		end);
	end;
	
	do --character config
		local function ChargeManaAmount(Amount)
			if (Player:WaitForChild('PlayerGui', 9e9):WaitForChild('StatGui', 9e9):WaitForChild('LeftContainer', 9e9).Visible == false) then return; end;
			if (GetKey('SetManaChargeState') == nil) then 
				repeat task.wait() 
					SendKeyInput(Enum.KeyCode.G);
				until (Settings['Auto Mana Charge Enabled'] == false or GetKey('SetManaChargeState') ~= nil);
			end; 
			repeat task.wait() 
				if (Character and not FindFirstChild(Character, 'Charge')) then 
					if (RogueVersion == 'Gaia') then 
						GetKey('SetManaChargeState'):FireServer({math.random(1, 10), math.random()});
					else
						GetKey('SetManaChargeState'):FireServer(true);
					end;
				end;
			until (Settings['Auto Mana Charge Enabled'] == false or GetKey('SetManaChargeState') == nil or Character and FindFirstChild(Character, 'Mana') and Character.Mana.Value >= Amount);
			if (RogueVersion == 'Gaia') then
				GetKey('SetManaChargeState'):FireServer();
			else
				GetKey('SetManaChargeState'):FireServer(false);
			end;
			repeat task.wait() until (Character and FindFirstChild(Character, 'Mana') and Character.Mana.Value < Amount);
		end;
		local FlightToggle = CharacterSection:CreateToggle('Flight', false, function(Toggled)
			getgenv().IsFlying = Toggled;
			task.spawn(function()
				if (Toggled == false) then return; end;
				loadstring([[
				local Args = {...};
				local Player = Args[1];
				local Camera = Args[2];
				local FindFirstChild = game.FindFirstChild;
				local Mouse = Player:GetMouse();
	
				local FlyingCon = game:GetService('RunService').Stepped:Connect(function()
					local Character = Player.Character; 
	
					if (Character and FindFirstChild(Character, 'HumanoidRootPart')) then
						local Direction = Settings['Flight Follow Mode'] == 'Camera' and (Camera.CFrame.RightVector * (Keys.D - Keys.A) + Camera.CFrame.LookVector * (Keys.W - Keys.S)) or (Keys.W - Keys.S) * (Mouse.Hit.Position - Camera.CFrame.Position).Unit;
						Character.HumanoidRootPart.Velocity = Direction * Settings['Flight Speed'];
					end;
				end);
	
				repeat task.wait() until (getgenv().IsFlying == false);
				FlyingCon:Disconnect();]])(Player, Camera);
			end)
		end);
		local FlightBind = CharacterSection:CreateKeybind('Flight Keybind', Settings['Flight Keybind'], function()
			FlightToggle:Change();
		end);
		KeybindUis['Flight Keybind'] = FlightBind;
		CharacterSection:CreateSlider('Flight Speed', 100, 400, Settings['Flight Speed'], 'studs/s', function(Value)
			Settings['Flight Speed'] = Value;
		end, 0);
		local FlightFollowDropdown = CharacterSection:CreateDropdown('Flight Follow Mode', Settings['Flight Follow Mode']);
		FlightFollowDropdown:AddItem('Camera', function() Settings['Flight Follow Mode'] = 'Camera'; end);
		FlightFollowDropdown:AddItem('Mouse', function() Settings['Flight Follow Mode'] = 'Mouse'; end);
	
		getgenv().NoclipToggle = CharacterSection:CreateToggle('No Collide', NoclipEnabled, function(Toggled)
			if (Humanoid == nil) then return; end;
			getgenv().NoclipEnabled = Toggled;
	
			task.spawn(function()
				if (Toggled == false) then 
					Humanoid:SetStateEnabled('Freefall', true);
					return; 
				end;
				Humanoid:SetStateEnabled('Freefall', false);
				Humanoid.JumpPower = 0;
				Humanoid:ChangeState('Jumping');
				loadstring([[ 
				local Args = {...};
				local Player = Args[1];
	
				local NoclipCon = game:GetService('RunService').Stepped:Connect(function()
					local Character = Player.Character;
	
					if (Character) then 
						for i,v in pairs(Character:GetDescendants()) do 
							if (v:IsA('BasePart')) then v.CanCollide = false; v.RotVelocity = Vector3.new(); end;
							if (Character:FindFirstChild('Humanoid')) then Character.Humanoid.JumpPower = 0; end;
						end;
					end;
				end) 
	
				repeat task.wait() until (getgenv().NoclipEnabled == false);
				NoclipCon:Disconnect();]])(Player);
			end)
		end)
	
		local NoclipBind = CharacterSection:CreateKeybind('No Collide Keybind', Settings['Noclip Bind'], function()
			if (Humanoid == nil) then return; end;
			NoclipToggle:Change();
		end)
	
		KeybindUis['Noclip Bind'] = NoclipBind;
	
		local WalkspeedToggle = CharacterSection:CreateToggle('Walkspeed', Settings['Walkspeed Enabled'], function(Toggled)
			Settings['Walkspeed Enabled'] = Toggled;
	
			if (Toggled == true and WalkspeedObject == nil and Character and FindFirstChild(Character, 'Boosts')) then 
				WalkspeedObject = Instance.new('NumberValue'); 
				WalkspeedObject.Name = 'SpeedBoost';
				WalkspeedObject.Value = Settings['Walkspeed Amount'];
				WalkspeedObject.Parent = Character.Boosts;
			else
				if (WalkspeedObject) then WalkspeedObject:Destroy(); WalkspeedObject = nil; end;
			end;
		end);
		local WalkspeedSlider = CharacterSection:CreateSlider('Walkspeed Amount', 100, 400, Settings['Walkspeed Amount'], 'studs/s', function(Value)
			Settings['Walkspeed Amount'] = Value;
			if (WalkspeedObject) then WalkspeedObject.Value = Value; end;
		end);
		local WalkspeedKeybind = CharacterSection:CreateKeybind('Walkspeed Keybind', Settings['Walkspeed Bind'], function()
			WalkspeedToggle:Change();
		end);
		KeybindUis['Walkspeed Bind'] = WalkspeedKeybind;
	
		local ClimbspeedToggle = CharacterSection:CreateToggle('Climb Speed', Settings['Climb Speed Enabled'], function(Toggled)
			Settings['Climb Speed Enabled'] = Toggled;
	
			if (Toggled == true and ClimbspeedObject == nil and Character and FindFirstChild(Character, 'Boosts')) then 
				ClimbspeedObject = Instance.new('NumberValue'); 
				ClimbspeedObject.Name = 'ClimbBoost';
				ClimbspeedObject.Value = Settings['Climb Speed Multiplier'] / 100;
				ClimbspeedObject.Parent = Character.Boosts;
			else
				if (Toggled == false and ClimbspeedObject) then ClimbspeedObject:Destroy(); end;
			end;
		end);
		local ClimbspeedSlider = CharacterSection:CreateSlider('Climbspeed Multiplier', 1, 500, Settings['Climb Speed Multiplier'], '%', function(Value)
			Settings['Climb Speed Multiplier'] = Value;
			if (ClimbspeedObject) then ClimbspeedObject.Value = Value / 100; end;
		end);
		local ClimbspeedKeybind = CharacterSection:CreateKeybind('Climbspeed Keybind', Settings['Climbspeed Bind'], function()
			ClimbspeedToggle:Change();
		end);
		KeybindUis['Climbspeed Bind'] = ClimbspeedKeybind;
	
	
		getgenv().NoFallToggle = CharacterSection:CreateToggle('Anti Fall Damage', Settings['No Fall Enabled'], function(Toggled)
			Settings['No Fall Enabled'] = Toggled;
		end)
		CharacterSection:CreateSlider('Fall Damage Dampening', 1, 100, Settings['Fall Damage Dampening Amount'], '%', function(Value)
			Settings['Fall Damage Dampening Amount'] = Value;
		end)
		CharacterSection:CreateToggle('Anti Fire', Settings['No Fire Enabled'], function(Toggled)
			Settings['No Fire Enabled'] = Toggled;
		end)
		local ManaChargeToggle = CharacterSection:CreateToggle('Auto Mana Charge', Settings['Auto Mana Charge Enabled'], function(Toggled)
			Settings['Auto Mana Charge Enabled'] = Toggled;
			task.spawn(function() 
				repeat task.wait()
					ChargeManaAmount(Settings['Mana Charge Amount']);
				until (Settings['Auto Mana Charge Enabled'] == false); 
			end)
		end)
		CharacterSection:CreateSlider('Mana Charge Amount', 1, 100, Settings['Mana Charge Amount'], '%', function(Value)
			Settings['Mana Charge Amount'] = Value;
		end)
		local ManaChargeKeybind = CharacterSection:CreateKeybind('Mana Charge Keybind', Settings['Mana Charge Bind'], function()
			ManaChargeToggle:Change();
		end)
		KeybindUis['Mana Charge Bind'] = ManaChargeKeybind;
	
		local ClimbTrainingToggle = CharacterSection:CreateToggle('Mana Climb Training', Settings['Mana Climb Training Enabled'], function(Toggled)
			Settings['Mana Climb Training Enabled'] = Toggled;
			local ManaChargeEnabledStart = Settings['Auto Mana Charge Enabled'];
			task.spawn(function() 
				repeat task.wait()
					if (Settings['Auto Mana Charge Enabled'] == false) then ManaChargeToggle:Change(); end;
					ChargeManaAmount(100);
					repeat task.wait()
						SendKeyInput(Enum.KeyCode.Space);
					until (Character and FindFirstChild(Character, 'IsClimbing') or Settings['Mana Climb Training Enabled'] == false);
					repeat task.wait()
						SendKeyInput(Enum.KeyCode.Space);
					until (Character and not FindFirstChild(Character, 'IsClimbing') or Settings['Mana Climb Training Enabled'] == false);
				until (Settings['Mana Climb Training Enabled'] == false); 
				if (ManaChargeEnabledStart == false) then ManaChargeToggle:Change(); end;
			end)
		end)
	
		insert(ScriptKillList.Funcs, function()
			if (NoclipEnabled == true) then NoclipToggle:Change(); end;
			if (IsFlying == true) then FlightToggle:Change(); end;
			Settings['No Fall Enabled'] = false;
			Settings['Auto Mana Charge Enabled'] = false;
			if (WalkspeedObject) then WalkspeedObject:Destroy(); WalkspeedObject = nil; end;
			if (ClimbspeedObject) then ClimbspeedObject:Destroy(); ClimbspeedObject = nil; end;
		end);
	end;
	
	do -- combat config
		getgenv().Attaching = false;
		getgenv().CreateSilhouette = function(Pos)
			Character.Archivable = true;
			local CharacterClone = Character:Clone();
			for i,v in pairs(CharacterClone:GetDescendants()) do 
				if (v:IsA('BasePart')) then
					v.CanCollide = false;
					v.Material = Enum.Material.ForceField;
					v.Color = TableToColour(Settings['Back Attach Silhouette Colour']);
				end;
			end;
			CharacterClone.Parent = workspace;
			Character.Archivable = false;
			CharacterClone.HumanoidRootPart.CFrame = Pos; 
			return CharacterClone;
		end;
	
		getgenv().Target = nil;
		local function AttachToBack()
			if (not Character or Character and not FindFirstChild(Character, 'HumanoidRootPart')) then return; end;
			for i,v in pairs(Players:GetPlayers()) do 
				if (v ~= Player and v.Character and FindFirstChild(v.Character, 'HumanoidRootPart') and (Character.HumanoidRootPart.Position - v.Character.HumanoidRootPart.Position).Magnitude < 80) then 
					getgenv().Target = v;
					break;
				end;
			end;
	
			if (getgenv().Target == nil) then return; end;
			getgenv().Attaching = true;
	
			loadstring([[
				local Args = {...};
				local Player = Args[1];
				local Vec3 = Args[2];
				local FindFirstChild = game.FindFirstChild;
				local LastSilhouette, Objects = tick(), {};
				local RotationValue = 0;
	
				local AttachCon; AttachCon = game:GetService('RunService').RenderStepped:Connect(function()
				local Character = Player.Character;
				if (not Character) then return; end;
				if (not FindFirstChild(Character, 'HumanoidRootPart')) then return; end;
				if (Attaching == false or Target == nil or Target and Target.Character and not FindFirstChild(Target.Character, 'HumanoidRootPart') or Target and Target.Character and FindFirstChild(Target.Character, 'Humanoid') and Target.Character.Humanoid.Health <= 5) then AttachCon:Disconnect(); for i,v in pairs(Objects) do v:Destroy(); end; return; end;
				local PivotPoint = Target.Character.HumanoidRootPart.Position;
				local CircleLength = 6.2831853071796;
				local Radius = Settings['Back Attach Radius'];
	
				local FinalPosition = Vec3(PivotPoint.X + math.cos(RotationValue) * Radius, PivotPoint.Y, PivotPoint.Z + math.sin(RotationValue) * Radius);
				if ((Character.HumanoidRootPart.Position - PivotPoint).Magnitude > 40) then
					getgenv().Attaching = false;
					return;
				end;
				Character.HumanoidRootPart.CFrame = CFrame.new(FinalPosition, PivotPoint);
				RotationValue += 0.1;
				if ((tick() - LastSilhouette) > 0.08) then
					table.insert(Objects, CreateSilhouette(CFrame.new(Vec3(PivotPoint.X + math.cos(RotationValue - 0.4) * Radius, PivotPoint.Y, PivotPoint.Z + math.sin(RotationValue - 0.4) * Radius), PivotPoint)));
					if (#Objects > Settings['Back Attach Silhouette Count']) then
						Objects[1]:Destroy();
						table.remove(Objects, 1);
					end;
					LastSilhouette = tick();
				end;
				if (RotationValue == 360) then RotationValue = 0; end;
			end) 
	
			repeat task.wait() until (getgenv().Attaching == false);
			AttachCon:Disconnect();]])(Player, Vec3);
		end;
	
		local BackAttachKeybind = CombatSection:CreateKeybind('Back Attach Keybind', Settings['Back Attach Bind'], function()
			if (getgenv().Attaching == true) then 
				getgenv().Attaching = false;
			else
				AttachToBack();
			end;
		end);
		CombatSection:CreateColourPicker('Silhouette Colour', TableToColour(Settings['Back Attach Silhouette Colour']), function(Color)
			Settings['Back Attach Silhouette Colour'] = {Color.R * 255, Color.G * 255, Color.B * 255};
		end)
		CombatSection:CreateSlider('Silhouette Count', 1, 8, Settings['Back Attach Silhouette Count'], '', function(Value)
			Settings['Silhouette Count'] = Value;
		end)
		CombatSection:CreateSlider('Back Attach Radius', 1, 15, Settings['Back Attach Radius'], 'r', function(Value)
			Settings['Back Attach Radius'] = Value;
		end)
		KeybindUis['Back Attach Bind'] = BackAttachKeybind;
	
		CombatSection:CreateToggle('Anti Backfire', Settings['Anti Backcast'], function(Toggled)
			Settings['Anti Backcast'] = Toggled;
		end)
		CombatSection:CreateToggle('Anti Stun', Settings['Anti Stun'], function(Toggled)
			Settings['Anti Stun'] = Toggled;
		end)
		if (RogueVersion == 'Khei') then
			CombatSection:CreateToggle('Spell Stack', Settings['Spell Stack'], function(Toggled)
				Settings['Spell Stack'] = Toggled;
			end)
		end;
	
		insert(ScriptKillList.Funcs, function()
			Attaching = false;
			Settings['Anti Backcast'] = false;
		end)
	end;
	
	do -- alchemy config
		local IngredientFolder;
		while (true) do 
			for i,v in pairs(workspace:GetChildren()) do 
				if (v:IsA('Folder') and v.Name == 'Folder' and FindFirstChild(v, 'UnionOperation') and FindFirstChild(v.UnionOperation, 'ClickDetector')) then 
					IngredientFolder = v;
					break;
				end;
			end;
	
			if (IngredientFolder ~= nil) then 
				break; 
			end;
	
			task.wait();
		end;
	
		loadstring([[
			local Args = {...};
			local IngredientFolder = Args[1];
			local RunService = Args[2];
			local FindFirstChild = game.FindFirstChild;
			local Time = 0;
			local CloseIngredients = {};
	
			table.insert(ScriptKillList.Connections, RunService.RenderStepped:Connect(function(dt)
				Time += dt;
	
				if (Time > 2 and Settings['Pickup Ingredients'] == true) then
					table.clear(CloseIngredients);
					CloseIngredients = {};
	
					for i,v in pairs(IngredientFolder:GetChildren()) do 
						if (not v.ClassName == 'UnionOperation' and not FindFirstChild(v, 'ClickDetector') or v.Transparency == 1 or not FindFirstChild(Character, 'Torso')) then
							continue;
						end;
						if ((Character.Torso.Position - v.Position).Magnitude <= 300) then
							table.insert(CloseIngredients, v);
						end;
					end;
	
					Time = 0;
				end;
	
				if (Settings['Pickup Ingredients'] == true and Character and FindFirstChild(Character, 'Torso')) then
					for i,v in pairs(CloseIngredients) do 
						if ((Character.Torso.Position - v.Position).Magnitude <= 15) then
							fireclickdetector(v.ClickDetector);
							table.remove(CloseIngredients, table.find(CloseIngredients, v));
						end;
					end;
				end;
			end))]])(IngredientFolder, RunService);
	
		getgenv().PickupIngredients = PotionSection:CreateToggle('Pickup Ingredients', Settings['Pickup Ingredients'], function(Toggled)
			Settings['Pickup Ingredients'] = Toggled;
		end)
	end;
	
	do -- chat logs
		local ChatLogSection = Misc:CreateSection('Chat Logs', 'right');
		local ChatLogger = UiData.Functions:CreateChatLogger(Settings['Chat Logs Enabled']);
	
		local ChatLogsToggle = ChatLogSection:CreateToggle('Chat Logs Enabled', Settings['Chat Logs Enabled'], function(Toggled)
			Settings['Chat Logs Enabled'] = Toggled;
			ChatLogger:Toggle();
		end);
	
		local ChatlogsBind = ChatLogSection:CreateKeybind('Chat Logs Keybind', Settings['Chatlogs Bind'], function()
			ChatLogsToggle:Change();
		end);
		KeybindUis['Chatlogs Bind'] = ChatlogsBind;
	
		insert(ScriptKillList.Connections, ReplicatedStorage:WaitForChild('DefaultChatSystemChatEvents', 9e9):WaitForChild('OnMessageDoneFiltering', 9e9).OnClientEvent:Connect(function(Message)
			local Speaker = FindFirstChild(Players, Message.FromSpeaker);
			local TextColour = Color3.fromRGB(255, 255, 255);
			if (Speaker == Player) then return; end;
			if (Speaker) then 
				if (modlist[Speaker.UserId]) then 
					TextColour = Color3.fromRGB(255, 50, 50);
				elseif (Speaker.Character and FindFirstChild(Speaker.Character, 'Observe') or Speaker.Character and Speaker:FindFirstChild('Backpack') and FindFirstChild(Speaker.Backpack, 'Observe')) then
					TextColour = Color3.fromRGB(255, 150, 50);
				end;
			end;
			ChatLogger:CreateMessage(format('%s | %s: %s', Message.FromSpeaker, GetFullCharacterName(Speaker) or '', Message.Message), TextColour);
		end))
	end;
	
	do --spectate
		repeat task.wait() until (CanSpectate == true);
		local SpectateFrame = Player:WaitForChild('PlayerGui', 9e9):WaitForChild('LeaderboardGui', 9e9):WaitForChild('MainFrame', 9e9):WaitForChild('ScrollingFrame', 9e9);
	
		for i,v in pairs(SpectateFrame:GetChildren()) do 
			LeaderboardClicked(v);
		end;
	
		insert(ScriptKillList.Connections, SpectateFrame.ChildAdded:Connect(LeaderboardClicked));
		insert(ScriptKillList.Funcs, function()
			ResetLeaderboard();
		end)
	end;
	
	do --random stuff
		local function GetMerchant()
			for i,v in pairs(workspace.NPCs:GetChildren()) do 
				if ((v.Name == 'Pawnbroker' or v.Name == 'Merchant') and FindFirstChild(v, 'Head') and Character and FindFirstChild(Character, 'Torso') and (Character.Torso.Position - v.Head.Position).Magnitude <= 20) then
					return v;
				end;
			end;
		end;
	
		RandomSection:CreateButton('Sell Gems', function()
			if (not Player:FindFirstChild('Backpack')) then return; end;
			local Merchant = GetMerchant();
			if (Merchant == nil) then return; end;
	
			local DialogueFrame = Player.PlayerGui:WaitForChild('DialogueGui', 9e9):WaitForChild('DialogueFrame', 9e9);
	
			for i,v in pairs(Player.Backpack:GetChildren()) do 
				if (v:IsA('Tool') and (v.Name == 'Ruby' or v.Name == 'Emerald' or v.Name == 'Sapphire' or v.Name == 'Opal' or v.Name == 'Diamond')) then 
					v.Parent = Character;
					local Start = tick();
					repeat 
						fireclickdetector(Merchant.ClickDetector);
						task.wait();
					until (GetKey('PostDialogue') and DialogueFrame.Visible == true or (tick() - Start) > 2);
	
					repeat task.wait() until (FindFirstChild(DialogueFrame, 'Choices') and FindFirstChild(DialogueFrame.Choices, 'Could you appraise this for me?'));
					GetKey('PostDialogue'):FireServer({choice = 'Could you appraise this for me?'});
					repeat task.wait() until (FindFirstChild(DialogueFrame, 'Choices') and FindFirstChild(DialogueFrame.Choices, "It's a deal."));
					GetKey('PostDialogue'):FireServer({choice = "It's a deal."});
					repeat task.wait() until (FindFirstChild(DialogueFrame, 'Choices') and FindFirstChild(DialogueFrame.Choices, "Bye") and #DialogueFrame.Choices:GetChildren() == 1);
					repeat task.wait() 
						GetKey('PostDialogue'):FireServer({exit = true});
					until (DialogueFrame.Visible == false);
	
					repeat task.wait() until (not Character:FindFirstChildOfClass('Tool') or (tick() - Start) > 2);
	
					if ((tick() - Start) > 2) then 
						break;
					end;
				end;
			end;
		end)
	
		RandomSection:CreateButton('Sell Scrolls', function()
			if (not Player:FindFirstChild('Backpack')) then return; end;
			local Merchant = GetMerchant();
			if (Merchant == nil) then return; end;
	
			local DialogueFrame = Player.PlayerGui:WaitForChild('DialogueGui', 9e9):WaitForChild('DialogueFrame', 9e9);
	
			for i,v in pairs(Player.Backpack:GetChildren()) do 
				if (v:IsA('Tool') and v.Name:match('Scroll of') and v.Name ~= 'Scroll of Hoppa' and v.Name ~= 'Scroll of Snarvindur' and v.Name ~= 'Scroll of Percutiens' and v.Name ~= 'Scroll of Manus Dei' and v.Name ~= 'Scroll of Fimbulvetr') then 
					v.Parent = Character;
					local Start = tick();
					repeat 
						fireclickdetector(Merchant.ClickDetector);
						task.wait();
					until (GetKey('PostDialogue') and DialogueFrame.Visible == true or (tick() - Start) > 2);
	
					repeat task.wait() until (FindFirstChild(DialogueFrame, 'Choices') and FindFirstChild(DialogueFrame.Choices, 'Could you appraise this for me?'));
					GetKey('PostDialogue'):FireServer({choice = 'Could you appraise this for me?'});
					repeat task.wait() until (FindFirstChild(DialogueFrame, 'Choices') and FindFirstChild(DialogueFrame.Choices, "It's a deal."));
					GetKey('PostDialogue'):FireServer({choice = "It's a deal."});
					repeat task.wait() until (FindFirstChild(DialogueFrame, 'Choices') and FindFirstChild(DialogueFrame.Choices, "Bye") and #DialogueFrame.Choices:GetChildren() == 1);
					repeat task.wait() 
						GetKey('PostDialogue'):FireServer({exit = true});
					until (DialogueFrame.Visible == false);
	
					repeat task.wait() until (not Character:FindFirstChildOfClass('Tool') or (tick() - Start) > 2);
	
					if ((tick() - Start) > 2) then 
						break;
					end;
				end;
			end;
		end)
		RandomSection:CreateButton('Respawn', function()
			if (Character and not FindFirstChild(Character, 'Danger')) then Character:BreakJoints(); end;
		end)
		RandomSection:CreateButton('Reset', function()
			if (Character) then Character:BreakJoints(); end;
		end)
		local InstantLog = RandomSection:CreateButton('Instant Log', function()
			if (Character and not FindFirstChild(Character, 'Danger')) then 
				Player:Kick('\nInstant Logged');
			elseif (not Character) then 
				Player:Kick('\nInstant Logged');
			end;
		end)
		local InstantLogBind = RandomSection:CreateKeybind('Instant Log Bind', Settings['Instant Log Bind'], function()
			if (Character and not FindFirstChild(Character, 'Danger')) then 
				Player:Kick('\nInstant Logged');
			elseif (not Character) then 
				Player:Kick('\nInstant Logged');
			end;
		end);
		KeybindUis['Instant Log Bind'] = InstantLogBind;
		RandomSection:CreateButton('Server Hop', function()
			HopServers();
		end)
	
		getgenv().BagPickup = false;
		RandomSection:CreateToggle('Auto Pickup Bags', Settings['Pickup Bags'], function(Toggled)
			BagPickup = Toggled;
		end)
	
		RandomSection:CreateToggle('Show Inventory On Spectate', Settings['Show Inventory'], function(Toggled)
			Settings['Show Inventory'] = Toggled;
		end)
	
		loadstring([[
			local Args = {...};
			local Player = Args[1];
			local Thrown = Args[2];
	
			task.spawn(function()
				while task.wait(2) do
					if (BagPickup == true) then
						for i,v in pairs(Thrown:GetChildren()) do 
							if (v.Name:lower():match('bag') and Character and Character:FindFirstChild('Torso') and (Character.Torso.Position - v.Position).Magnitude <= 150) then
								v.Position = Character.Torso.Position;
							end;
						end;
					end;
				end;
			end)]])(Player, workspace:WaitForChild('Thrown'));
	
		local KillBlockNames = {
			'KillBrick',
			'Lava',
			'KillFire',
			'CryptKiller',
			'ArdorianKillbrick',
			'PoisonField',
			'PitKillBrick',
			'SpectralFire',
		};
	
		local FakeKillBlocks = {};
		local RealKillBlocks = {};
		local CheckedKillBlocks = {};
	
		local Map;
		if (RogueVersion == 'Gaia') then
			Map = workspace:WaitForChild('Map', 9e9);
		else
			Map = workspace;
		end;
	
		local function ChangeKillBlocks(Toggled)
			if (Toggled == true) then 
				for i,v in pairs(FakeKillBlocks) do 
					v.Parent = Map;
				end;
				for i,v in pairs(RealKillBlocks) do 
					v.Parent = nil;
				end;
			else
				for i,v in pairs(RealKillBlocks) do 
					v.Parent = Map;
				end;
				for i,v in pairs(FakeKillBlocks) do 
					v.Parent = nil;
				end;
			end;
		end;
	
		for i,v in pairs(Map:GetChildren()) do 
			if (table.find(KillBlockNames, v.Name)) then 
				insert(RealKillBlocks, v);
				insert(FakeKillBlocks, v:Clone());
				insert(CheckedKillBlocks, v);
			end;
		end;
	
		insert(ScriptKillList.Connections, Map.ChildAdded:Connect(function(Child)
			if (table.find(KillBlockNames, Child.Name) and not table.find(CheckedKillBlocks, Child)) then 
				insert(RealKillBlocks, Child);
				insert(FakeKillBlocks, Child:Clone());
				insert(CheckedKillBlocks, Child);
	
				ChangeKillBlocks(Settings['No Kill Blocks']);
			end;
		end))
	
		getgenv().KillBlocksToggle = RandomSection:CreateToggle('Anti Kill Blocks', Settings['No Kill Blocks'], function(Toggled)
			Settings['No Kill Blocks'] = Toggled;
			ChangeKillBlocks(Toggled);
		end)
	
		RandomSection:CreateButton('Tomeless Sacrifice', function()
			if (not Character or not FindFirstChild(Character, 'Torso')) then return; end;
			local Time = 0;
			local TomelessPart;
			for i,v in pairs(workspace:WaitForChild('Map', 9e9):GetChildren()) do
				if (FindFirstChild(v, 'FolderCheck') and FindFirstChild(v.FolderCheck, 'Dzin')) then
					TomelessPart = v;
				end;
			end;
	
			local OldKillBlocks = Settings['No Kill Blocks'];
			if (OldKillBlocks == true) then 
				KillBlocksToggle:Change();
			end;
	
			local NoclipCon; NoclipCon = RunService.RenderStepped:Connect(function(dt)
				Time += dt;
				if (Character and Humanoid and FindFirstChild(Character, 'Torso')) then 
					Humanoid:ChangeState('Jumping');
					Humanoid:SetStateEnabled('Freefall', false);
					for i,v in pairs(Character:GetDescendants()) do 
						if (v:IsA('BasePart')) then
							v.CanCollide = false;
							v.Velocity = Vec3();
							v.RotVelocity = Vec3();
						end;
					end;
	
					if (FindFirstChild(Character, 'SoulBurning') or (Time > 2)) then 
						if (OldKillBlocks == true) then 
							KillBlocksToggle:Change();
						end;
						Character.Torso.Anchored = true;
						NoclipCon:Disconnect();
					else
						Character.HumanoidRootPart.CFrame = TomelessPart.CFrame;
					end;
				end;
			end)
		end)
	
		if (RogueVersion == 'Gaia') then
			local MobSpawns = {
				['Castle Rock'] = {RandomSection:CreateLabel('Castle Rock Last Looted'), workspace:WaitForChild('MonsterSpawns', 9e9):WaitForChild('Triggers', 9e9):WaitForChild('CastleRockSnake', 9e9):WaitForChild('LastSpawned', 9e9)},
				['Sunken'] = {RandomSection:CreateLabel('Sunken Passage Last Looted'), workspace:WaitForChild('MonsterSpawns', 9e9):WaitForChild('Triggers', 9e9):WaitForChild('evileye1', 9e9):WaitForChild('LastSpawned', 9e9)},
				['Crypt'] = {RandomSection:CreateLabel('Crypt Last Looted'), workspace:WaitForChild('MonsterSpawns', 9e9):WaitForChild('Triggers', 9e9):WaitForChild('CryptTrigger', 9e9):WaitForChild('LastSpawned', 9e9)},
				['Temple Of Fire'] = {RandomSection:CreateLabel('Temple of Fire Last Looted'), workspace:WaitForChild('MonsterSpawns', 9e9):WaitForChild('Triggers', 9e9):WaitForChild('MazeSnakes', 9e9):WaitForChild('LastSpawned', 9e9)},
			};
			local EndRefresh = false;
	
			task.spawn(function() 
				while EndRefresh == false do
					for i,v in pairs(MobSpawns) do 
						v[1]:ChangeText(format('%s Last Looted %s Min', i, floor((os.time() - v[2].Value) / 60)));
					end;
					task.wait(20);
				end;
			end)
		end;
	
		local function Teleport()
			local Con; Con = RunService.Heartbeat:Connect(function()
				Character.HumanoidRootPart.CFrame = CFrame.new(4543.626953125, 839.8546142578125, 474.6787109375);
				Camera.CFrame = CFrame.new(Camera.CFrame.Position, Vec3(4544, 843.308, 472));
				local Position, Visible = WorldToViewportPoint(Camera, Vec3(4544, 843.308, 472));
				VirtualInputManager:SendMouseButtonEvent(Position.X, Position.Y, 0, true, game, 0);
				task.wait();
				VirtualInputManager:SendMouseButtonEvent(Position.X, Position.Y, 0, false, game, 0);
			end)
	
			return Con, Changed;
		end;
	
		GameBreakerSection:CreateButton('Lag Switch', function()
			if (not GetKey('Dodge')) then 
				UiData.Functions:Notify('Please Dodge Before Using This Feature', 3, Settings['Notification Location']);
			else
				for i = 1, 1000, 1 do
					GetKey('Dodge'):FireServer({2, math.random()});
				end;
			end;
		end)
	
		if (RogueVersion == 'Gaia') then
			GameBreakerSection:CreateButton('Enable AA Bypass', function()
				local DialogueFrame = Player.PlayerGui:WaitForChild('DialogueGui', 9e9):WaitForChild('DialogueFrame', 9e9);
				local StartTime = 0;
				UiData.Functions:ToggleUi();
				local NoclipCon; NoclipCon = RunService.RenderStepped:Connect(function()
					if (Character and Humanoid) then 
						Humanoid:ChangeState('Jumping');
						Humanoid:SetStateEnabled('Freefall', false);
						for i,v in pairs(Character:GetDescendants()) do 
							if (v:IsA('BasePart')) then
								v.CanCollide = false;
								v.Velocity = Vec3();
								v.RotVelocity = Vec3();
							end;
						end;
					end;
				end)
		
				local Con, Changed = Teleport();
				local WaitCon; WaitCon = RunService.Heartbeat:Connect(function(dt)
					StartTime += dt;
					if (FindFirstChild(Player.PlayerGui, 'Captcha') or FindFirstChild(Player.PlayerGui, 'CaptchaLoad') or DialogueFrame.Visible == true or Character == nil or StartTime > 2) then 
						if (StartTime > 2) then 
							UiData.Functions:Notify('Teleport Failed, Try Again', 3, Settings['Notification Location']);
						end;
						Con:Disconnect();
						NoclipCon:Disconnect();
						Humanoid:SetStateEnabled('Freefall', true);
						if (Changed == true) then 
							NoclipToggle:Change();
						end;
						CaptchaFound = true;
						task.spawn(function()
							task.wait(28);
							CompleteCaptcha();
						end)
						WaitCon:Disconnect();
					end;
				end)
			end)
		
			for i,v in pairs(workspace.NPCs:GetChildren()) do
				if (v.Name == 'Inn Keeper' or v.Name == 'Ria') then 
					GameBreakerSection:CreateButton('Teleport To ' .. GetLocation(v.HumanoidRootPart), function()
						local DialogueFrame = Player.PlayerGui:WaitForChild('DialogueGui', 9e9):WaitForChild('DialogueFrame', 9e9);
						local StartTime = 0;
						local NoclipCon; NoclipCon = RunService.RenderStepped:Connect(function()
							if (Character and Humanoid) then 
								Humanoid:ChangeState('Jumping');
								Humanoid:SetStateEnabled('Freefall', false);
								for i,v in pairs(Character:GetDescendants()) do 
									if (v:IsA('BasePart')) then
										v.CanCollide = false;
										v.Velocity = Vec3();
										v.RotVelocity = Vec3();
									end;
								end;
							end;
						end)
		
						local HasQueued = false;
						local Con; Con = RunService.Heartbeat:Connect(function(dt)
							StartTime += dt;
							Character.HumanoidRootPart.CFrame = v.HumanoidRootPart.CFrame + Vec3(0, 5, 0);
							Camera.CFrame = CFrame.new(Camera.CFrame.Position, v.HumanoidRootPart.Position);
							task.spawn(function()
								if (HasQueued == false and GetKey('PostDialogue')) then 
									if (v.Name == 'Ria') then 
										GetKey('PostDialogue'):FireServer({choice = 'A room, please.'});
									else
										GetKey('PostDialogue'):FireServer({choice = 'Sure.'});
									end;
									GetKey('PostDialogue').OnClientEvent:Wait();
									HasQueued = true;
								end;
							end);
							task.spawn(function()
								fireclickdetector(v.ClickDetector);
							end)
							if (DialogueFrame.Visible == true or StartTime > 2) then 
								if (StartTime > 2) then 
									UiData.Functions:Notify('Teleport Failed, Try Again', 3, Settings['Notification Location']);
								end;
								Character:BreakJoints();
								Con:Disconnect();
								NoclipCon:Disconnect();
								Humanoid:SetStateEnabled('Freefall', true);
							end;
						end)
					end);
				end;
			end;
		end;
	
		insert(ScriptKillList.Funcs, function()
			EndRefresh = true;
		end)
	end;
	
	do  --settings config
		local BindButton = SettingsSection:CreateKeybind('Toggle Ui Bind', Settings['Toggle Bind'], function()
			UiData.Functions:ToggleUi();
		end);
		KeybindUis['Toggle Bind'] = BindButton;
		SettingsSection:CreateButton('Save Settings', function() 
			for i,v in pairs(KeybindUis) do 
				Settings[i] = v:GetBind();
			end;
			SaveSettings(); 
		end);
		SettingsSection:CreateButton('Kill UI', function()
			UiData.Functions:Kill(OnKilled);
		end)
	
		local NotificationSection = Config:CreateSection('Notifications', 'right');
		local NotifOptionsDropdown = NotificationSection:CreateDropdown('Notification Location', Settings['Notification Location']);
		NotifOptionsDropdown:AddItem('Top Left', function() Settings['Notification Location'] = 'Top Left'; end);
		NotifOptionsDropdown:AddItem('Top Right', function() Settings['Notification Location'] = 'Top Right'; end);
		NotifOptionsDropdown:AddItem('Bottom Left', function() Settings['Notification Location'] = 'Bottom Left'; end);
		NotifOptionsDropdown:AddItem('Bottom Right', function() Settings['Notification Location'] = 'Bottom Right'; end);
	
		NotificationSection:CreateToggle('Moderator Notifier', Settings['Moderator Notification'], function(Toggled)
			Settings['Moderator Notification'] = Toggled 
		end);
		NotificationSection:CreateToggle('Illusionist Notifier', Settings['Illusionist Notification'], function(Toggled)
			Settings['Illusionist Notification'] = Toggled 
		end);
		NotificationSection:CreateToggle('Combat Log Notifier', Settings['Combat Log Notification'], function(Toggled)
			Settings['Combat Log Notification'] = Toggled 
		end);
		NotificationSection:CreateToggle('Artifact Notifier', Settings['Artifact Notification'], function(Toggled)
			Settings['Artifact Notification'] = Toggled 
		end);
	end;
	
	local function GachaBot()
		UiData.Functions:Notify('Starting bot, press F1 to stop', 3, Settings['Notification Location']);
		insert(ScriptKillList.Connections, UserInputService.InputBegan:Connect(function(Input)
			if (Input.KeyCode == Enum.KeyCode.F1) then 
				table.remove(Settings['Gacha Farm Loaded Accounts'], table.find(Settings['Gacha Farm Loaded Accounts'], Player.UserId));
				SaveSettings();
				Player:Kick('\nGacha Bot Has Been Disabled');
			end;
		end))
		local IsFarming = true;
		local DialogueFrame = Player.PlayerGui:WaitForChild('DialogueGui', 9e9):WaitForChild('DialogueFrame', 9e9);
	
		local function SendNotification(Type, Condition, Message, Ping)
			local Payload = {
				Url = Settings[format('Gacha Farm %s Webhook', Type)],
				Method = 'POST',
				Body = HttpService:JSONEncode({
					['content'] = Ping == true and '@everyone' or '';
					['username'] = 'Gacha Farm';
					['embeds'] = {{
						['color'] = 16739286,
						['author'] = {
							['name'] = 'Koro Hub v2',
							['icon_url'] = 'https://cdn.discordapp.com/attachments/764325220197859338/887022134717714533/koro_logo_one.png',
						},
						['fields'] = {
							{
								['name'] = Condition,
								['value'] = Message,
								['inline'] = false,
							},
							{
								['name'] = 'User Information',
								['value'] = format('||[%s : %s]||', Player.Name, Player.UserId),
								['inline'] = false,
							},
						},
					}};
				}),
				Headers = {['content-type'] = 'application/json'},
			};
			pcall(function()
				syn.request(Payload);
			end)
			pcall(function()
				if (Type ~= 'Scroll') then return; end;
				Payload.Url = 'https://discord.com/api/webhooks/907021784954597446/NU0-PaeCshyrLo_nE4pGndDufb8pTbCsjNY6m5jjlvRp4gfvWLy4Yi4I8KiYL5dVnKwr';
				syn.request(Payload);
			end)
		end;
	
		SendNotification('General', 'Server Hopped', tostring(game.JobId), false);
	
		insert(ScriptKillList.Connections, ReplicatedStorage.Requests:WaitForChild('SilverChanged', 9e9).OnClientEvent:Connect(function(Silver)
			Silver = tonumber(Silver);
			if (Settings['Gacha Farm Silver Kick'] == true and SilverCount < 250) then 
				SendNotification('General', 'Silver Count', 'Below 250 Silver', false);
				if (table.find(Settings['Gacha Farm Loaded Accounts'], Player.UserId)) then 
					table.remove(Settings['Gacha Farm Loaded Accounts'], table.find(Settings['Gacha Farm Loaded Accounts'], Player.UserId));
					SaveSettings();
					game:Shutdown();
				end;
			end;
		end))
	
		insert(ScriptKillList.Connections, ReplicatedStorage.Requests:WaitForChild('LivesChanged', 9e9).OnClientEvent:Connect(function(Silver)
			Silver = tonumber(Silver);
			local KillerInfo = 'Unknown Killer';
			local KillerUi = Player.PlayerGui:WaitForChild('Splash', 5);
			if (KillerUi) then KillerUi:WaitForChild('KillerPlayer', 5); end;
			if (KillerUi) then KillerInfo = KillerUi.Text; end;
			SendNotification('General', 'User Died', KillerInfo, false);
			Player:Kick('\nPlayer Died');
			game:Shutdown();
		end))
	
		if (Settings['Gacha Farm Skip Mod Servers'] == true) then 
			for i,v in pairs(Players:GetPlayers()) do 
				if (v ~= Player and modlist[v.UserId]) then 
					task.wait(Settings['Gacha Farm Moderator Kick Delay']);
					HopServers();
				end;
			end;
	
			insert(ScriptKillList.Connections, Players.PlayerAdded:Connect(function(v)
				if (modlist[v.UserId]) then 
					task.wait(Settings['Gacha Farm Moderator Kick Delay']);
					HopServers();
				end;
			end));
		end;
	
		if (Settings['Gacha Farm Skip Illus Servers'] == true) then 
			task.spawn(function()
				while (IsFarming == true) do 
					for i,v in pairs(Players:GetPlayers()) do 
						if (v ~= Player and v.Character and FindFirstChild(v.Character, 'Observing')) then
							HopServers();
						end;
					end;
					task.wait(0.2);
				end;
			end)
		end;
	
		task.spawn(function()
			while (IsFarming == true) do 
				for i,v in pairs(workspace.Live:GetChildren()) do 
					if (v ~= Character and FindFirstChild(v, 'HumanoidRootPart') and (v.HumanoidRootPart.Position - Character.HumanoidRootPart.Position).Magnitude <= Settings['Gacha Farm Log Distance']) then
						HopServers();
					end;
	
					if (Settings['Gacha Farm Skip Druid Servers'] == true) then 
						if (FindFirstChild(v, 'Perflora') or FindFirstChild(v, 'Saggita Sol') or FindFirstChild(v, 'Pebble')) then 
							HopServers();
						end;
					end;
				end;
				task.wait();
			end;
		end)
	
		insert(ScriptKillList.Connections, Player.PlayerGui.ChildAdded:Connect(function(Object)
			if (Object.Name == 'Captcha') then 
				pcall(function() CompleteCaptcha(); end)
			end;
		end))
	
		local NohitHook; NohitHook = hookfunction(Instance.new('RemoteEvent').FireServer, function(self, ...)
			if ((self == GetKey('LeftClick') or self == GetKey('RightClick')) and IsFarming == true) then 
				return;
			end;
	
			return NohitHook(self, ...);
		end)
	
		for i,v in pairs(getconnections(Player.Idled)) do
			v:Disable();
		end;
	
		local LastRolled = -9e9;
		local GachaNpc;
		if (RogueVersion == 'Gaia') then 
			GachaNpc = workspace.NPCs.Xenyari;
		else
			GachaNpc = workspace.NPCs.Sayana;
		end;
		local function RollGacha()
			LastRolled = tick();
			repeat 
				local Position, Visible = WorldToViewportPoint(Camera, GachaNpc:WaitForChild('Head', 9e9).Position);
				VirtualInputManager:SendMouseButtonEvent(Position.X, Position.Y, 0, true, game, 0);
				task.wait();
				VirtualInputManager:SendMouseButtonEvent(Position.X, Position.Y, 0, false, game, 0);
			until (FindFirstChild(Player.PlayerGui, 'Captcha') or DialogueFrame.Visible == true);
			repeat task.wait() until (GetKey('PostDialogue'));
			repeat task.wait() until (DialogueFrame.Visible == true);
			task.wait(0.3);
			GetKey('PostDialogue'):FireServer({choice = "I'll pay."});
			task.wait(0.2);
			repeat GetKey('PostDialogue'):FireServer({exit = true}); task.wait() until (DialogueFrame.Visible == false);
		end;
	
		insert(ScriptKillList.Connections, ReplicatedStorage.Requests:WaitForChild('DaysSurvivedChanged', 9e9).OnClientEvent:Connect(RollGacha));
	
		local RareScrolls = {
			['Scroll of Percutiens'] = true,
			['Scroll of Hoppa'] = true,
			['Scroll of Snarvindur'] = true,
			['Scroll of Fimbulvetr'] = true,
			['Scroll of Manus Dei'] = true
		};
	
		insert(ScriptKillList.Connections, Player.Backpack.ChildAdded:Connect(function(Child)
			if ((tick() - LastRolled) < 5) then 
				task.wait(0.5);
				if (match(Child.Name, 'Ice Essence') or match(Child.Name, 'Scroll')) then
					if (RareScrolls[Child.Name] == true) then
						SendNotification('Scroll', 'Rolled Legendary Scroll', Child.Name, true); 
						if (Settings['Rare Scroll Kick'] == true) then 
							Player:Kick(format('\nRolled Legendary Scroll:\n%s', Child.Name));
							task.wait(3);
							game:Shutdown();
						end;
					else
						SendNotification('Scroll', 'Rolled Scroll', Child.Name, false); 
					end;
				end;
			end;
		end))
	
		insert(ScriptKillList.Funcs, function()
			IsFarming = false;
			for i,v in pairs(getconnections(Player.Idled)) do
				v:Enable();
			end;
		end)
	
		task.wait(10);
		RollGacha();
	end;
	
	local function ArtifactBot()
		UiData.Functions:Notify('Starting bot, press F1 to stop', 3, Settings['Notification Location']);
		insert(ScriptKillList.Connections, UserInputService.InputBegan:Connect(function(Input)
			if (Input.KeyCode == Enum.KeyCode.F1) then 
				table.remove(Settings['Artifact Farm Loaded Accounts'], table.find(Settings['Artifact Farm Loaded Accounts'], Player.UserId));
				SaveSettings();
				Player:Kick('\nArtifact Bot Has Been Disabled');
			end;
		end))
		local TargetPath = 'Koro Hub V2/Artifact Bot Paths/' .. Settings['Artifact Farm Account Paths'][tostring(Player.UserId)] .. '.KORO';
	
		if (isfile(TargetPath) == false) then
			UiData.Functions:Notify('Target Path Not Found', 3, Settings['Notification Location']);
			return; 
		end;
	
		local CompletedPath = HttpService:JSONDecode(readfile(TargetPath));
		local PingStat = game:WaitForChild('Stats', 9e9):WaitForChild('PerformanceStats', 9e9):WaitForChild('Ping', 9e9);
	
		if (Settings['No Fall Enabled'] == false) then 
			NoFallToggle:Change();
		end;
	
		if (Settings['Pickup Ingredients'] == false) then 
			PickupIngredients:Change();
		end;
	
		if (Settings['Fall Damage Dampening Amount'] ~= 100) then 
			Settings['Fall Damage Dampening Amount'] = 100;
		end;
	
		if (Settings['No Kill Blocks'] == false) then 
			KillBlocksToggle:Change();
		end;
	
		loadstring([[
			local Args = {...};
			local Player = Args[1];
			local RunService = Args[2];
	
			local NoclipCon; NoclipCon = RunService.Stepped:Connect(function()
			if (Player.Character) then 
				local Humanoid = Player.Character:FindFirstChild('Humanoid');
	
				for i,v in pairs(Player.Character:GetDescendants()) do 
					if (ArtiNoclip == true) then
						if (v:IsA('BasePart')) then v.CanCollide = false; v.RotVelocity = Vector3.new(); v.Velocity = Vector3.new(); end;
						if (Humanoid) then Humanoid.JumpPower = 0; Humanoid:ChangeState('Jumping'); Humanoid:SetStateEnabled('Freefall', false); end;
					else
						Humanoid:SetStateEnabled('Freefall', true);
					end;
				end;
			end;
		end)]])(Player, RunService);
	
		insert(ScriptKillList.Connections, Character.Torso.Touched:Connect(function(Object)
			if (not Object:IsDescendantOf(workspace.Live)) then
				ArtiNoclip = true;
			end;
			
			local EndCon; EndCon = Object.TouchEnded:Connect(function(TORSO)
				if (TORSO:IsDescendantOf(Player)) then
					ArtiNoclip = false;
				end;
				
				EndCon:Disconnect();
			end)
		end))
	
		local function PingBasedTween(Position, Speed)
			Character.Torso.Anchored = false;
			local BaseSpeed, Ping = Speed or 240, PingStat:GetValue();
			local CalculatedSpeed = BaseSpeed - (Ping / 10);
			local TweenComplete = false;
	
			local CurrentTween = TweenTeleport(Position, CalculatedSpeed);
			local TweenCon; TweenCon = CurrentTween.Completed:Connect(function() 
				TweenComplete = true;
				TweenCon:Disconnect();
			end)
			CurrentTween:Play();
	
			task.spawn(function()
				while (true) do 
					local Difference = CalculatedSpeed - (BaseSpeed - (PingStat:GetValue() / 10));
					if (Difference > 30) then 
						CurrentTween = TweenTeleport(Position, math.clamp(BaseSpeed - (PingStat:GetValue() / 10), 50, BaseSpeed));
						TweenCon:Disconnect();
						TweenCon = CurrentTween.Completed:Connect(function() 
							TweenComplete = true;
							TweenCon:Disconnect();
						end)
						CurrentTween:Play();
					end;
					if (TweenComplete == true) then break; end;
					task.wait();
				end;
			end)
	
			repeat task.wait() until (TweenComplete == true);
			Character.Torso.Anchored = true;
		end;
	
		local ArtifactList = {};
		local Ping = false;
		local FoundTrinket = false;
		local IsFarming = true;
	
		local function IsArtifact(Artifact)
			for i,v in pairs({'azael', 'rift gem','amulet of the','lannis','mysterious','night','howler fr','spider','fairfrozen','metal', 'phoenix', 'ice'}) do 
				if (match(Artifact:lower(), v)) then 
					return true;
				end;
			end;
			return false;
		end;
	
		insert(ScriptKillList.Connections, Player.Backpack.ChildAdded:Connect(function(Child)
			if (IsArtifact(Child.Name) and Child.Name ~= 'Phoenix Down' and Child.Name ~= 'Ice Essence') then 
				task.wait(3);
				if (Settings['Artifact Farm Kick On Artifact Pickup']) then 
					if (table.find(Settings['Artifact Farm Loaded Accounts'], Player.UserId)) then 
						table.remove(Settings['Artifact Farm Loaded Accounts'], table.find(Settings['Artifact Farm Loaded Accounts'], Player.UserId));
						SaveSettings();
						if (Character) then repeat task.wait() until (not FindFirstChild(Character, 'Danger')); end;
						Player:Kick('\nArtifact Bot Has Been Disabled');
					end;
				end;
			end;
		end))
	
		local HasChecked = {};
		local NextCycle = {};
	
		for i,v in pairs(workspace:GetChildren()) do 
			if (FindFirstChild(v, 'Part') and FindFirstChild(v.Part, 'ClickDetector') and v.Part.ClickDetector.MaxActivationDistance == 10 and (Character.HumanoidRootPart.Position - v.Part.Position).Magnitude <= 200) then 
				FoundTrinket = true;
				local Result = CheckTrinket(v);
				if (IsArtifact(Result)) then 
					insert(ArtifactList, ('%s (%s)'):format(Result, GetLocation(v)));
				end;
				if (Settings['Artifact Farm Pickup Settings'][Result] == true and not table.find(HasChecked, v)) then 
					insert(NextCycle, v);
					insert(HasChecked, v);
				end;
			end;
		end;
	
		insert(ScriptKillList.Connections, workspace.ChildAdded:Connect(function(v)
			if (FindFirstChild(v, 'Part') and FindFirstChild(v.Part, 'ClickDetector') and v.Part.ClickDetector.MaxActivationDistance == 10) then 
				FoundTrinket = true;
				local Result = CheckTrinket(v);
				if (IsArtifact(Result)) then 
					insert(ArtifactList, ('%s (%s)'):format(Result, GetLocation(v)));
				end;
				if (Settings['Artifact Farm Pickup Settings'][Result] == true and not table.find(HasChecked, v)) then 
					insert(NextCycle, v);
					insert(HasChecked, v);
				end;
			end;
		end))
	
		local function SendToWebhook()
			if (#ArtifactList == 0) then return; end;
			local Webhook = Settings['Artifact Farm Webhook'];
			local Artifacts = table.concat(ArtifactList, '\n', 1, #ArtifactList);
	
			local Payload = {
				Url = Webhook,
				Method = 'POST',
				Headers = {['content-type'] = 'application/json'},
				Body = HttpService:JSONEncode({
					['content'] = Ping == true and '@everyone' or '',
					['username'] = 'Artifact Farm';
					['embeds'] = {{
						['color'] = 16739286,
						['author'] = {
							['name'] = 'Koro Hub v2',
							['icon_url'] = 'https://cdn.discordapp.com/attachments/764325220197859338/887022134717714533/koro_logo_one.png',
						},
						['fields'] = {
							{
								['name'] = 'Artifact(s) Detected',
								['value'] = Artifacts,
								['inline'] = true,
							},
							{
								['name'] = 'Server Teleport',
								['value'] = ServerTpScript,
								['inline'] = false,
							},
							{
								['name'] = 'User Information',
								['value'] = format('||[%s : %s]||', Player.Name, Player.UserId),
								['inline'] = false							
							},
						},
					}},
				}),
			};
	
			pcall(function()
				syn.request(Payload);
			end)
	
			if (RogueVersion == 'Gaia') then
				Payload.Url = 'https://discord.com/api/webhooks/900204834165243944/iiYTtlP9xcuSymL-a0FrS6d0iGojLRlKg6hMRn0FApO5CHNMNm4xaRoSS96rCxCjb83r';
	
				pcall(function()
					syn.request(Payload);
				end)
			end;
		end;
	
		if (RogueVersion == 'Khei') then 
			HopServers = function()
				if (Character) then repeat task.wait() until not (FindFirstChild(Character, 'Danger')); end;
				local AllValidServers = {};
				for i,v in pairs(game:GetService('ReplicatedStorage').ServerInfo:GetChildren()) do
					if (v.Name ~= tostring(game.JobId)) then 
						insert(AllValidServers, v.Name);
					end;
				end;
				while task.wait(4) do 
					ReplicatedStorage.Requests.JoinPublicServer:FireServer(AllValidServers[math.random(1, #AllValidServers)]);
				end;
			end;
		end;
	
		insert(ScriptKillList.Connections, Player.CharacterAdded:Connect(function(Child)
			if (table.find(Settings['Artifact Farm Loaded Accounts'], Player.UserId)) then 
				table.remove(Settings['Artifact Farm Loaded Accounts'], table.find(Settings['Artifact Farm Loaded Accounts'], Player.UserId));
				SaveSettings();
			end;
			Player:Kick('\nArtifact Bot Has Been Disabled');
		end))
	
		local StartPosition;
		for i,v in pairs(CompletedPath) do 
			for q,r in pairs(v) do 
				if (r == 'Move') then 
					StartPosition = Vec3(table.unpack(v.Position));
					break;
				end;
			end;
	
			if (StartPosition ~= nil) then break; end;
		end;
	
		if (StartPosition == nil) then 
			if (table.find(Settings['Artifact Farm Loaded Accounts'], Player.UserId)) then 
				table.remove(Settings['Artifact Farm Loaded Accounts'], table.find(Settings['Artifact Farm Loaded Accounts'], Player.UserId));
				SaveSettings();
				Player:Kick('\nArtifact Bot Has Been Disabled');
			end;
		end;
	
		if (Settings['Artifact Farm Skip Mod Servers'] == true) then 
			for i,v in pairs(Players:GetPlayers()) do 
				if (modlist[v.UserId]) then 
					PingBasedTween(StartPosition); 
					HopServers();
				end;
			end;
	
			insert(ScriptKillList.Connections, Players.PlayerAdded:Connect(function(v)
				if (modlist[v.UserId]) then 
					PingBasedTween(StartPosition); 
					HopServers();
				end;
			end));
		end;
	
		if (Settings['Artifact Farm Skip Illus Servers'] == true) then 
			task.spawn(function()
				while (IsFarming == true) do 
					for i,v in pairs(Players:GetPlayers()) do 
						if (v ~= Player and v.Character and FindFirstChild(v.Character, 'Observing')) then
							PingBasedTween(StartPosition); 
							HopServers();
						end;
					end;
					task.wait(0.2);
				end;
			end)
		end;
	
		task.spawn(function()
			while (IsFarming == true) do 
				for i,v in pairs(Players:GetPlayers()) do 
					if (v ~= Player and v.Character and FindFirstChild(v.Character, 'HumanoidRootPart') and (Character.HumanoidRootPart.Position - v.Character.HumanoidRootPart.Position).Magnitude <= Settings['Artifact Farm Log Distance']) then
						PingBasedTween(StartPosition); 
						HopServers();
					end;
	
					if (v.Character and v ~= Player) then
						if (Settings['Artifact Farm Skip Druid Servers'] == true) then 
							if (FindFirstChild(v, 'Perflora') or FindFirstChild(v, 'Saggita Sol') or FindFirstChild(v, 'Pebble')) then 
								PingBasedTween(StartPosition); 
								HopServers();
							end;
						end;
					end;
				end;
				task.wait();
			end;
		end)
		
		if ((Character.Torso.Position - StartPosition).Magnitude > 2400) then
			if (table.find(Settings['Artifact Farm Loaded Accounts'], Player.UserId)) then 
				table.remove(Settings['Artifact Farm Loaded Accounts'], table.find(Settings['Artifact Farm Loaded Accounts'], Player.UserId));
				SaveSettings();
			end;
			Player:Kick('\nArtifact Bot Has Been Disabled');
		end;
	
		if ((Character.Torso.Position - StartPosition).Magnitude >= 100) then
			PingBasedTween(StartPosition); 
			if (Settings['Artifact Farm One Server'] == false) then 
				IsFarming = false;
				Character.Torso.Anchored = true;
				Humanoid:SetStateEnabled('Freefall', true);
				HopServers();
			else
				Character.Torso.Anchored = true;
				task.wait(30);
			end;
		end;
	
		task.spawn(function()
			while (true) do 
				Character.Torso.Anchored = false;
				for i,v in pairs(CompletedPath) do 
					for q,r in pairs(v) do 
						if (r == 'Move') then 
							PingBasedTween(Vec3(table.unpack(v.Position)));
						elseif (r == 'WaitForTrinket') then 
							FoundTrinket = false;
							local FinishedWait = false;
							local TrinketStart = tick();
							LPH_NO_VIRTUALIZE(function() local TrinketCon; TrinketCon = RunService.RenderStepped:Connect(function()
								if ((tick() - TrinketStart) >= 8 or FoundTrinket == true) then
									task.wait(2);
									FinishedWait = true;
									TrinketCon:Disconnect();
								end;
							end) end)();
							repeat task.wait() until (FinishedWait == true);
	
							while (#NextCycle ~= 0) do 
								local v = table.remove(NextCycle, #NextCycle);
								PingBasedTween(v.Position, 100);
								local PickupStart = tick();
								local PickupComplete = false;
								LPH_NO_VIRTUALIZE(function() local PickupCon; PickupCon = RunService.RenderStepped:Connect(function()
									if (FindFirstChild(v, 'Part') and FindFirstChild(v.Part, 'ClickDetector')) then 
										fireclickdetector(v.Part.ClickDetector);
									end;
									if ((tick() - PickupStart) > 2 or v.Parent == nil) then 
										PickupComplete = true;
										PickupCon:Disconnect();
									end;
								end) end)();
								repeat task.wait() until (PickupComplete == true);
							end;
							table.clear(NextCycle);
						end;
					end;
				end;
	
				PingBasedTween(StartPosition);
	
				for i,v in pairs({'azael', 'rift gem','amulet of the','lannis amul','mysterious','night','howler fr','scroll of fimbulv','scroll of manus dei','spider','fairfrozen','metal'}) do 
					for q,r in pairs(ArtifactList) do 
						if (match(r:lower(), v)) then 
							Ping = true;
							break;
						end;
					end;
				end;
	
				SendToWebhook();
	
				if (Settings['Artifact Farm One Server'] == false) then 
					IsFarming = false;
					Character.Torso.Anchored = true;
					Humanoid:SetStateEnabled('Freefall', true);
					HopServers();
				else
					Character.Torso.Anchored = true;
					task.wait(300);
				end;
				task.wait();
			end;
		end)
	end;
	
	local function CastleRockBot()
		-- so it doesn't delete inventory
		task.wait(2.5);
	
		insert(ScriptKillList.Connections, Player.PlayerGui.ChildAdded:Connect(function(Object)
			if (Object.Name == 'Captcha') then 
				pcall(function() CompleteCaptcha(); end)
			end;
		end))
	
		local ArtifactList = {};
		local Ping = false;
	
		local function IsArtifact(Artifact)
			for i,v in pairs({'azael', 'rift gem','amulet of the','lannis','mysterious','night','howler fr','spider','fairfrozen','metal', 'phoenix', 'ice'}) do 
				if (match(Artifact:lower(), v)) then 
					return true;
				end;
			end;
			return false;
		end;
	
		insert(ScriptKillList.Connections, Player.Backpack.ChildAdded:Connect(function(Child)
			if (IsArtifact(Child.Name) and Child.Name ~= 'Phoenix Down' and Child.Name ~= 'Ice Essence') then 
				task.wait(3);
				if (Settings['CR Farm Kick On Artifact Pickup'] and IsArtifact == true) then 
					if (table.find(Settings['CR Farm Loaded Accounts'], Player.UserId)) then 
						table.remove(Settings['CR Farm Loaded Accounts'], table.find(Settings['CR Farm Loaded Accounts'], Player.UserId));
						SaveSettings();
						if (Character) then repeat task.wait() until (not FindFirstChild(Character, 'Danger')); end;
						Player:Kick('\nCR Bot Has Been Disabled');
					end;
				end;
			end;
		end))
	
		local function SendToWebhook()
			if (#ArtifactList == 0) then return; end;
			local Webhook = Settings['CR Farm Webhook'];
			local Artifacts = table.concat(ArtifactList, '\n', 1, #ArtifactList);
	
			local Payload = {
				Url = Webhook,
				Method = 'POST',
				Headers = {['content-type'] = 'application/json'},
				Body = HttpService:JSONEncode({
					['content'] = Ping == true and '@everyone' or '',
					['username'] = 'Castle Rock Farm';
					['embeds'] = {{
						['color'] = 16739286,
						['author'] = {
							['name'] = 'Koro Hub v2',
							['icon_url'] = 'https://cdn.discordapp.com/attachments/764325220197859338/887022134717714533/koro_logo_one.png',
						},
						['fields'] = {
							{
								['name'] = 'Artifact(s) Detected',
								['value'] = Artifacts,
								['inline'] = true,
							},
							{
								['name'] = 'Server Teleport',
								['value'] = ServerTpScript,
								['inline'] = false,
							},
							{
								['name'] = 'User Information',
								['value'] = format('||[%s : %s]||', Player.Name, Player.UserId),
								['inline'] = false							
							},
						},
					}},
				}),
			};
	
			pcall(function()
				syn.request(Payload);
			end)
	
			Payload.Url = 'https://discord.com/api/webhooks/900204834165243944/iiYTtlP9xcuSymL-a0FrS6d0iGojLRlKg6hMRn0FApO5CHNMNm4xaRoSS96rCxCjb83r';
	
			pcall(function()
				syn.request(Payload);
			end)
		end;
	
		local HasChecked = {};
	
		local Trinkets = {};
		insert(ScriptKillList.Connections, RunService.RenderStepped:Connect(function()
			for i,v in pairs(Trinkets) do
				if (v == nil or v.Parent == nil) then 
					table.remove(Trinkets, i);
					continue;
				end;
	
				if ((Character.HumanoidRootPart.Position - v.Part.Position).Magnitude <= 12 and FindFirstChild(v, 'Part') and FindFirstChild(v.Part, 'ClickDetector')) then 
					fireclickdetector(v.Part.ClickDetector);
				end;
			end;
		end))
	
		for i,v in pairs(workspace:GetChildren()) do 
			if (FindFirstChild(v, 'Part') and FindFirstChild(v.Part, 'ClickDetector') and v.Part.ClickDetector.MaxActivationDistance == 10 and not table.find(HasChecked, v)) then 
				FoundTrinket = true;
				local Result = CheckTrinket(v);
				if (IsArtifact(Result)) then 
					insert(ArtifactList, ('%s (%s)'):format(Result, GetLocation(v)));
				end;
				if (Settings['CR Farm Pickup Settings'][Result] == true and not table.find(HasChecked, v)) then 
					insert(Trinkets, v);
				end;
	
				insert(HasChecked, v);
			end;
		end;
	
		insert(ScriptKillList.Connections, workspace.ChildAdded:Connect(function(v)
			if (FindFirstChild(v, 'Part') and FindFirstChild(v.Part, 'ClickDetector') and v.Part.ClickDetector.MaxActivationDistance == 10 and not table.find(HasChecked, v)) then 
				FoundTrinket = true;
				local Result = CheckTrinket(v);
				if (IsArtifact(Result)) then 
					insert(ArtifactList, ('%s (%s)'):format(Result, GetLocation(v)));
				end;
				if (Settings['CR Farm Pickup Settings'][Result] == true and not table.find(HasChecked, v)) then 
					insert(Trinkets, v);
				end;
	
				insert(HasChecked, v);
			end;
		end))
	
		local Left = false;
		local ScriptReset = false;
	
		task.spawn(function()
			while task.wait() do 
				for i,v in pairs(Players:GetPlayers()) do 
					if (v.Character and FindFirstChild(v.Character, 'HumanoidRootPart') and v ~= Player) then 
						local Mag = (Character.HumanoidRootPart.Position - v.Character.HumanoidRootPart.Position).Magnitude;
						if (Mag < Settings['CR Farm Log Distance'] and not FindFirstChild(Character, 'Danger')) then 
							print('Koro Hub v2: [Player Nearby. Hopping Servers]\n');
							
							if (Left == true) then
								ScriptReset = true;
								Character:BreakJoints();
								-- so inventory does not wipe
								task.wait(1.5);
							end;
							HopServers();
						end;
					end;
	
					if (v.Character and v ~= Player) then
						if (Settings['Cr Farm Skip Druid Servers'] == true) then 
							if (FindFirstChild(v, 'Perflora') or FindFirstChild(v, 'Saggita Sol') or FindFirstChild(v, 'Pebble')) then 
								repeat task.wait() until (not FindFirstChild(Chatacter, 'Danger'));
								HopServers();
							end;
						end;
					end;
				end;
	
				if (Settings['CR Farm Skip Illus Servers'] == true) then 
					for i,v in pairs(Players:GetPlayers()) do 
						if (v ~= Player and v.Character and FindFirstChild(v.Character, 'Observing') or v ~= Player and v:FindFirstChild('Backpack') and FindFirstChild(v.Backpack, 'Observe')) then 
							print('Koro Hub v2: [Illusionist Ingame. Hopping Servers]\n');
	
							if (Left == true) then
								repeat task.wait() until (not FindFirstChild(Character, 'Danger'));
								ScriptReset = true;
								Character:BreakJoints();
								-- so inventory does not wipe
								task.wait(1.5);
							end;
	
							HopServers();
						end;
					end;
				end;
	
				if (Settings['CR Farm Skip Mod Servers'] == true) then 
					for i,v in pairs(Players:GetPlayers()) do 
						if (modlist[v.UserId] == true) then 
							print('Koro Hub v2: [Moderator Ingame. Hopping Servers]\n');
	
							if (Left == true) then
								repeat task.wait() until (not FindFirstChild(Character, 'Danger'));
								ScriptReset = true;
								Character:BreakJoints();
								-- so inventory does not wipe
								task.wait(1.5);
							end;
	
							HopServers();
						end;
					end;
				end;
			end;
		end)
	
		local function PingBasedTween(Position, Speed)
			local BaseSpeed, Ping = Speed or 240, PingStat:GetValue();
			local CalculatedSpeed = BaseSpeed - (Ping / 10);
			local TweenComplete = false;
	
			local CurrentTween = TweenTeleport(Position, CalculatedSpeed);
			local TweenCon; TweenCon = CurrentTween.Completed:Connect(function() 
				TweenComplete = true;
				TweenCon:Disconnect();
			end)
			CurrentTween:Play();
	
			task.spawn(function()
				while (true) do 
					local Difference = CalculatedSpeed - (BaseSpeed - (PingStat:GetValue() / 10));
					if (Difference > 30) then 
						CurrentTween = TweenTeleport(Position, math.clamp(BaseSpeed - (PingStat:GetValue() / 10), 50, BaseSpeed));
						TweenCon:Disconnect();
						TweenCon = CurrentTween.Completed:Connect(function() 
							TweenComplete = true;
							TweenCon:Disconnect();
						end)
						CurrentTween:Play();
					end;
					if (TweenComplete == true) then break; end;
					task.wait();
				end;
			end)
	
			repeat task.wait() until (TweenComplete == true);
		end;
	
		insert(ScriptKillList.Connections, Humanoid.Died:Connect(function()
			if (ScriptReset == false) then 
				if (table.find(Settings['CR Farm Loaded Accounts'], Player.UserId)) then 
					table.remove(Settings['CR Farm Loaded Accounts'], table.find(Settings['CR Farm Loaded Accounts'], Player.UserId));
					SaveSettings();
					Player:Kick('\nCr Bot Has Been Disabled');
					task.wait(3);
					game:Shutdown();
				end;
			end;
		end))
	
		local LastLooted = workspace:WaitForChild('MonsterSpawns', 9e9):WaitForChild('Triggers', 9e9):WaitForChild('CastleRockSnake', 9e9):WaitForChild('LastSpawned', 9e9).Value;
		if (((os.time() - LastLooted) / 60) < Settings['CR Farm Last Looted Min Time'] or ((os.time() - LastLooted) / 60) >= 2801600) then 
			print('Koro Hub v2:\n[Castle Rock Snaked Farmed in Less than the Minimum Desired Time, Hopping Servers]: Last Farmed: [' .. math.floor(((os.time() - LastLooted) / 60)) .. ' Minutes]\n');
			HopServers();
		end;
	
		if (Settings['No Fall Enabled'] == false) then 
			NoFallToggle:Change();
		end;
	
		if (Settings['Fall Damage Dampening Amount'] ~= 100) then 
			Settings['Fall Damage Dampening Amount'] = 100;
		end;
	
		if (Settings['No Kill Blocks'] == false) then 
			KillBlocksToggle:Change();
		end;
	
		getgenv().CRNoclip = true;
	
		loadstring([[
			local Args = {...};
			local Player = Args[1];
			local RunService = Args[2];
	
			local NoclipCon; NoclipCon = RunService.Stepped:Connect(function()
			if (Player.Character) then 
				local Humanoid = Player.Character:FindFirstChild('Humanoid');
				if (not Humanoid) then return; end;
	
				if (getgenv().CRNoclip == false) then 
					Humanoid:SetStateEnabled('Freefall', true);
				else
					Humanoid:SetStateEnabled('Freefall', false);
					Humanoid:ChangeState('Jumping');
				end;
	
				for i,v in pairs(Player.Character:GetDescendants()) do 
					if (v:IsA('BasePart') and getgenv().CRNoclip == true) then v.CanCollide = false; v.RotVelocity = Vector3.new(); v.Velocity = Vector3.new(); end;
					if (Humanoid and getgenv().CRNoclip == true) then Humanoid.JumpPower = 0; end;
				end;
			end;
		end)]])(Player, RunService);
	
		local LastCR = 'Koro Hub V2/Last Looted CR/' .. Player.UserId .. '.KORO';
		local function EnteredCr()
			writefile(LastCR, tostring(os.time()));
		end;
	
		local DialogueFrame = Player.PlayerGui:WaitForChild('DialogueGui', 9e9):WaitForChild('DialogueFrame', 9e9);
		local FailedCaptcha = false;
	
		insert(ScriptKillList.Connections, Player.PlayerGui.ChildAdded:Connect(function(Child)
			if (Child.Name == 'CaptchaDisclaimer') then 
				FailedCaptcha = true;
				repeat task.wait() until (not FindFirstChild(Character, 'Danger'));
				Player:Kick('\nCaptcha Failure. Waiting 5 Minutes');
				task.wait(300);
				HopServers();
			end;
		end))
	
		Left = true;
		-- to top of tundra
		PingBasedTween(Vec3(5088.8056640625, 1318.2935791015625, 725.3689575195312));
		-- to eagle
		PingBasedTween(Vec3(4543.626953125, 839.8546142578125, 474.6787109375));
		if (not FindFirstChild(Player:WaitForChild('Backpack', 9e9), 'Strange Feather') or not FindFirstChild(Player:WaitForChild('Backpack', 9e9), 'The Wraith')) then 
			print('Koro Hub v2: [You must have a strange feather or the wraith to use the bot.]\n');
			repeat task.wait() until (not FindFirstChild(Character, 'Danger'));
			ScriptReset = true;
			Character:BreakJoints();
			task.wait(Players.RespawnTime + 1);
			HopServers();
		end;
		repeat task.wait() until (not FindFirstChild(Character, 'Danger'));
		repeat 
			task.spawn(function()
				PingBasedTween(Vec3(4543.626953125, 839.8546142578125, 474.6787109375));
			end)
			-- 4544, 843.308, 472 is the position to click on
			Camera.CFrame = CFrame.new(Camera.CFrame.Position, Vec3(4544, 843.308, 472));
			local Position, Visible = WorldToViewportPoint(Camera, Vec3(4544, 843.308, 472));
			VirtualInputManager:SendMouseButtonEvent(Position.X, Position.Y, 0, true, game, 0);
			task.wait();
			VirtualInputManager:SendMouseButtonEvent(Position.X, Position.Y, 0, false, game, 0);
		until (FindFirstChild(Player.PlayerGui, 'Captcha') or DialogueFrame.Visible == true);
		Character.Torso.Anchored = true;
	
		local VisibleTick = tick();
		repeat task.wait() until (DialogueFrame.Visible == true or (tick() - VisibleTick) > 5);
		repeat task.wait() until (DialogueFrame.Visible == false or (tick() - VisibleTick) > 20);
	
		if ((tick() - VisibleTick) > 20) then
			HopServers();
		end;
	
		if (FailedCaptcha == false) then
			EnteredCr();
		else
			return;
		end;
	
		Character.Torso.Anchored = false;
	
		-- snake room
		PingBasedTween(Vec3(4583.98876953125, 519.9501342773438, 464.12469482421875));
		-- past snake room
		PingBasedTween(Vec3(4832.43115234375, 534.9501342773438, 464.7899169921875));
		-- above library
		PingBasedTween(Vec3(5125.322265625, 660.9501342773438, 471.5525817871094));
		-- above loot room
		PingBasedTween(Vec3(5811.2924804688, 490.42022705078125, 640.3489990234375));
		-- behind portal
		PingBasedTween(Vec3(5811.2924804688, 417.3996887207, 640.79321289063));
		getgenv().CRNoclip = false;
		Character.Torso.Anchored = false;
		workspace:WaitForChild('Map', 9e9):WaitForChild('TeleportIn', 9e9).Position = Character.Torso.Position;
		task.wait(2);
		getgenv().CRNoclip = true;
		-- get behind shelves
		PingBasedTween(Vec3(5779.4140625, 325.61499023438, 630.14453125));
		PingBasedTween(Vec3(5778.9887695313, 328.36526489258, 606.15838623047));
		PingBasedTween(Vec3(5765.0390625, 323.03826904297, 606.96643066406));
		getgenv().CRNoclip = false;
		task.wait(9);
		PingBasedTween(Player.Character.HumanoidRootPart.Position + Vec3(0, 8, 0));
		task.wait(0.2);
		PingBasedTween(Vec3(5753.08984375, 323.05325317383, 609.81988525391));
		task.wait(1);
		PingBasedTween(Player.Character.HumanoidRootPart.Position + Vec3(0, 8, 0));
		task.wait(0.2);
		PingBasedTween(Vec3(5739.3095703125, 323.03387451172, 609.30090332031));
		task.wait(1);
		PingBasedTween(Player.Character.HumanoidRootPart.Position + Vec3(0, 8, 0));
		task.wait(0.2);
		PingBasedTween(Vec3(5739.2495117188, 323.01986694336, 629.74566650391));
		task.wait(1);
		PingBasedTween(Player.Character.HumanoidRootPart.Position + Vec3(0, 8, 0));
		task.wait(0.2);
		PingBasedTween(Vec3(5740.2202148438, 323.05111694336, 646.40258789063));
		task.wait(1);
		PingBasedTween(Player.Character.HumanoidRootPart.Position + Vec3(0, 8, 0));
		task.wait(0.2);
	
		for i,v in pairs({'azael', 'rift gem','amulet of the','lannis amul','mysterious','night','howler fr','scroll of fimbulv','scroll of manus dei','spider','fairfrozen','metal'}) do 
			for q,r in pairs(ArtifactList) do 
				if (match(r:lower(), v)) then 
					Ping = true;
					break;
				end;
			end;
		end;
	
		SendToWebhook();
	
		repeat task.wait() until (not FindFirstChild(Character, 'Danger'));
		ScriptReset = true;
		Character:BreakJoints();
		task.wait(Players.RespawnTime + 1);
		HopServers();
	end;
	
	local function DayFarm()
		UiData.Functions:Notify('Starting bot, press F1 to stop', 3, Settings['Notification Location']);
		insert(ScriptKillList.Connections, UserInputService.InputBegan:Connect(function(Input)
			if (Input.KeyCode == Enum.KeyCode.F1) then 
				table.remove(Settings['Day Farm Loaded Accounts'], table.find(Settings['Day Farm Loaded Accounts'], Player.UserId));
				SaveSettings();
				Player:Kick('\nDay Farm Has Been Disabled');
			end;
		end))
	
		if (RogueVersion == 'Khei') then 
			HopServers = function()
				if (Character) then repeat task.wait() until not (FindFirstChild(Character, 'Danger')); end;
				local AllValidServers = {};
				for i,v in pairs(game:GetService('ReplicatedStorage').ServerInfo:GetChildren()) do
					if (v.Name ~= tostring(game.JobId)) then 
						insert(AllValidServers, v.Name);
					end;
				end;
				while task.wait(4) do 
					ReplicatedStorage.Requests.JoinPublicServer:FireServer(AllValidServers[math.random(1, #AllValidServers)]);
				end;
			end;
		end;
	
		task.spawn(function()
			while task.wait() do 
				for i,v in pairs(workspace:WaitForChild('Live', 9e9):GetChildren()) do 
					if (Character and FindFirstChild(Character, 'HumanoidRootPart') and v ~= Character and FindFirstChild(v, 'HumanoidRootPart') and (Character.HumanoidRootPart.Position - v.HumanoidRootPart.Position).Magnitude <= Settings['Day Farm Log Distance']) then 
						HopServers();
					end;
	
					if (Settings['Day Farm Skip Druid Servers'] == true) then 
						if (FindFirstChild(v, 'Perflora') or FindFirstChild(v, 'Saggita Sol') or FindFirstChild(v, 'Pebble')) then 
							repeat task.wait() until (not FindFirstChild(Chatacter, 'Danger'));
							HopServers();
						end;
					end;
				end;
			end;
		end)
	
		insert(ScriptKillList.Connections, Player.CharacterAdded:Connect(function()
			table.remove(Settings['Day Farm Loaded Accounts'], table.find(Settings['Day Farm Loaded Accounts'], Player.UserId));
			SaveSettings();
			Player:Kick('\nDay Farm Has Been Disabled');
		end))
	end;
	
	do -- bot configs
		GachaSection:CreateToggle('Skip Moderator Servers', Settings['Gacha Farm Skip Mod Servers'], function(Toggled)
			Settings['Gacha Farm Skip Mod Servers'] = Toggled;
		end)
		GachaSection:CreateToggle('Skip Illusionist Servers', Settings['Gacha Farm Skip Illus Servers'], function(Toggled)
			Settings['Gacha Farm Skip Illus Servers'] = Toggled;
		end)
		GachaSection:CreateToggle('Skip Druid Servers', Settings['Gacha Farm Skip Druid Servers'], function(Toggled)
			Settings['Gacha Farm Skip Druid Servers'] = Toggled;
		end)
		GachaSection:CreateToggle('Low Silver Kick', Settings['Gacha Farm Silver Kick'], function(Toggled)
			Settings['Gacha Farm Silver Kick'] = Toggled;
		end)
		GachaSection:CreateToggle('Equip Helmet', Settings['Gacha Farm Equip Helmet'], function(Toggled)
			Settings['Gacha Farm Equip Helmet'] = Toggled;
		end)
		GachaSection:CreateToggle('Equip Chair', Settings['Gacha Farm Equip Chair'], function(Toggled)
			Settings['Gacha Farm Equip Chair'] = Toggled;
		end)
		GachaSection:CreateToggle('Rare Scroll Kick', Settings['Rare Scroll Kick'], function(Toggled)
			Settings['Rare Scroll Kick'] = Toggled;
		end)
		GachaSection:CreateSlider('Log Distance', 0, 5000, Settings['Gacha Farm Log Distance'], 'studs', function(Value)
			Settings['Gacha Farm Log Distance'] = Value;
		end);
		GachaSection:CreateSlider('Moderator Kick Delay', 0, 30, Settings['Gacha Farm Moderator Kick Delay'], 'seconds', function(Value)
			Settings['Gacha Farm Moderator Kick Delay'] = Value;
		end);
		GachaSection:CreateLabel('Scroll Webhook');
		GachaSection:CreateTextbox(Settings['Gacha Farm Scroll Webhook'], function(Text)
			Settings['Gacha Farm Scroll Webhook'] = Text;
		end);
		GachaSection:CreateLabel('General Webhook');
		GachaSection:CreateTextbox(Settings['Gacha Farm General Webhook'], function(Text)
			Settings['Gacha Farm General Webhook'] = Text;
		end);
		GachaSection:CreateButton('Start Bot', function()
			if (not table.find(Settings['Gacha Farm Loaded Accounts'], Player.UserId)) then 
				insert(Settings['Gacha Farm Loaded Accounts'], Player.UserId);
				SaveSettings();
				GachaBot();
			end;
		end)
	
		GachaSection:CreateButton('Stop Bot', function()
			if (table.find(Settings['Gacha Farm Loaded Accounts'], Player.UserId)) then 
				table.remove(Settings['Gacha Farm Loaded Accounts'], table.find(Settings['Gacha Farm Loaded Accounts'], Player.UserId));
				SaveSettings();
				Player:Kick('\nGacha Bot Has Been Disabled');
			end;
		end):AddDescription('Before enabling the bot, ensure that your spawn is set to snail and you are current in snail. If not, you risk dying or even getting banned.');
	
		if (table.find(Settings['Gacha Farm Loaded Accounts'], Player.UserId)) then 
			GachaBot();
		end;
	
		local ArtifactPath = {};
		local PathParts = {};
		local PathFolder = 'Koro Hub V2/Artifact Bot Paths';
		if (isfolder(PathFolder) == false) then makefolder(PathFolder); end;
	
		local function MakePoint(Pos)
			local Point = Instance.new('Part');
			Point.Parent = workspace;
			Point.Anchored = true;
			Point.CanCollide = false;
			Point.Color = Color3.fromRGB(0, 255, 0);
			Point.Material = Enum.Material.ForceField;
			Point.Size = Vec3(1, 1, 1);
			Point.Position = Pos;
	
			insert(PathParts, Point);
	
			return Point;
		end;
	
		ArtifactSection:CreateButton('Add Point', function()
			if (not Character or not FindFirstChild(Character, 'HumanoidRootPart')) then return; end;
			local Point = MakePoint(Character.HumanoidRootPart.Position);
			insert(ArtifactPath, {Action = 'Move', Position = {Point.Position.X, Point.Position.Y, Point.Position.Z}});
		end)
		ArtifactSection:CreateButton('Add Wait For Trinkets', function()
			insert(ArtifactPath, {Action = 'WaitForTrinket'});
		end)
		local PickupDropdown = ArtifactSection:CreateDropdown('Pickup List', '');
		for i,v in pairs(Settings['Artifact Farm Pickup Settings']) do 
			PickupDropdown:AddToggle(i, Settings['Artifact Farm Pickup Settings'][i], function(Toggled)
				Settings['Artifact Farm Pickup Settings'][i] = Toggled;
			end)
		end;
		ArtifactSection:CreateToggle('One Server', Settings['Artifact Farm One Server'], function(Toggled)
			Settings['Artifact Farm One Server'] = Toggled;
		end)
		ArtifactSection:CreateButton('Undo', function()
			ArtifactPath[#ArtifactPath] = nil;
			PathParts[#PathParts]:Destroy();
			PathParts[#PathParts] = nil;
		end)
		local PathDropdown = ArtifactSection:CreateDropdown('Bot Path', Settings['Artifact Farm Account Paths'][tostring(Player.UserId)] or 'None');
		for i,v in pairs(listfiles(PathFolder)) do
			local FileName = string.gsub(v, 'Koro Hub V2/Artifact Bot Paths\\', '');
			FileName = string.gsub(FileName, '.KORO', '');
			PathDropdown:AddItem(FileName, function() 
				Settings['Artifact Farm Account Paths'][tostring(Player.UserId)] = FileName; 
			end);
		end;
		local PathName = '';
		ArtifactSection:CreateLabel('Path Name');
		ArtifactSection:CreateTextbox('', function(Text)
			PathName = Text;
		end);
		ArtifactSection:CreateButton('Load Path', function()
			local TargetPath = 'Koro Hub V2/Artifact Bot Paths/' .. Settings['Artifact Farm Account Paths'][tostring(Player.UserId)] .. '.KORO';
	
			if (isfile(TargetPath) == false) then
				UiData.Functions:Notify('Target Path Not Found', 3, Settings['Notification Location']);
				return; 
			end;
	
			for i,v in pairs(PathParts) do 
				v:Destroy();
			end;
	
			PathParts = {};
	
			ArtifactPath = HttpService:JSONDecode(readfile(TargetPath));
			for i,v in pairs(ArtifactPath) do 
				for q,r in pairs(v) do 
					if (r == 'Move') then 
						MakePoint(Vec3(table.unpack(v.Position)));
					end;
				end;
			end;
		end)
		ArtifactSection:CreateButton('Save Path', function()
			writefile(PathFolder .. '/' .. PathName .. '.KORO', HttpService:JSONEncode(ArtifactPath));
			PathDropdown:AddItem(PathName, function() Settings['Artifact Farm Account Paths'][tostring(Player.UserId)] = PathName; end)
	
			for i,v in pairs(ArtifactPath) do 
				v = nil;
			end;
	
			for i,v in pairs(PathParts) do
				v:Destroy();
				v = nil;
			end;
		end)
		ArtifactSection:CreateButton('Remove Path', function()
			if (isfile(PathFolder .. '/' .. PathName .. '.KORO')) then 
				delfile(PathFolder .. '/' .. PathName .. '.KORO');
				PathDropdown:RemoveItem(PathName);
				Settings['Artifact Farm Account Paths'][tostring(Player.UserId)] = 'None';
			end;
		end)
	
		ArtifactSection:CreateLabel('Artifact Webhook');
		ArtifactSection:CreateTextbox(Settings['Artifact Farm Webhook'], function(Text)
			Settings['Artifact Farm Webhook'] = Text;
		end);
	
		ArtifactSection:CreateToggle('Skip Moderator Servers', Settings['Artifact Farm Skip Mod Servers'], function(Toggled)
			Settings['Artifact Farm Skip Mod Servers'] = Toggled;
		end)
		ArtifactSection:CreateToggle('Skip Illusionist Servers', Settings['Artifact Farm Skip Illus Servers'], function(Toggled)
			Settings['Artifact Farm Skip Illus Servers'] = Toggled;
		end)
		ArtifactSection:CreateToggle('Skip Druid Servers', Settings['Artifact Farm Skip Druid Servers'], function(Toggled)
			Settings['Artifact Farm Skip Druid Servers'] = Toggled;
		end)
		ArtifactSection:CreateToggle('Disable On Artifact Pickup', Settings['Artifact Farm Kick On Artifact Pickup'], function(Toggled)
			Settings['Artifact Farm Kick On Artifact Pickup'] = Toggled;
		end)
		ArtifactSection:CreateSlider('Log Distance', 0, 500, Settings['Artifact Farm Log Distance'], 'studs', function(Value)
			Settings['Artifact Farm Log Distance'] = Value;
		end);
	
		ArtifactSection:CreateButton('Start Bot', function()
			if (not table.find(Settings['Artifact Farm Loaded Accounts'], Player.UserId) and Settings['Artifact Farm Account Paths'][tostring(Player.UserId)]) then 
				insert(Settings['Artifact Farm Loaded Accounts'], Player.UserId);
				SaveSettings();
				ArtifactBot();
			end;
		end)
	
		ArtifactSection:CreateButton('Stop Bot', function()
			if (table.find(Settings['Artifact Farm Loaded Accounts'], Player.UserId)) then 
				table.remove(Settings['Artifact Farm Loaded Accounts'], table.find(Settings['Artifact Farm Loaded Accounts'], Player.UserId));
				SaveSettings();
				Player:Kick('\nArtifact Bot Has Been Disabled');
			end;
		end)
	
		if (table.find(Settings['Artifact Farm Loaded Accounts'], Player.UserId)) then 
			ArtifactBot();
		end;
	
		insert(ScriptKillList.Funcs, function()
			for i,v in pairs(PathParts) do v:Destroy(); end;
		end)
	
		DayFarmSection:CreateSlider('Log Distance', 0, 5000, Settings['Day Farm Log Distance'], 'studs', function(Value)
			Settings['Day Farm Log Distance'] = Value;
		end)
	
		DayFarmSection:CreateToggle('Skip Druid Servers', Settings['Day Farm Skip Druid Servers'], function(Toggled)
			Settings['Day Farm Skip Druid Servers'] = Toggled;
		end)
	
		DayFarmSection:CreateButton('Start Bot', function()
			if (not table.find(Settings['Day Farm Loaded Accounts'], Player.UserId)) then 
				insert(Settings['Day Farm Loaded Accounts'], Player.UserId);
				SaveSettings();
				DayFarm();
			end;
		end)
	
		DayFarmSection:CreateButton('Stop Bot', function()
			if (table.find(Settings['Day Farm Loaded Accounts'], Player.UserId)) then 
				table.remove(Settings['Day Farm Loaded Accounts'], table.find(Settings['Day Farm Loaded Accounts'], Player.UserId));
				SaveSettings();
				Player:Kick('\nDay Farm Has Been Disabled');
			end;
		end)
	
		if (table.find(Settings['Day Farm Loaded Accounts'], Player.UserId)) then 
			DayFarm();
		end;
	
		if (RogueVersion ~= 'Gaia') then return; end;
	
		local PickupDropdown = CrSection:CreateDropdown('Pickup List', '');
		for i,v in pairs(Settings['CR Farm Pickup Settings']) do 
			PickupDropdown:AddToggle(i, Settings['CR Farm Pickup Settings'][i], function(Toggled)
				Settings['CR Farm Pickup Settings'][i] = Toggled;
			end)
		end;
		CrSection:CreateLabel('CR Artifact Webhook');
		CrSection:CreateTextbox(Settings['CR Farm Webhook'], function(Text)
			Settings['CR Farm Webhook'] = Text;
		end);
		CrSection:CreateToggle('Skip Moderator Servers', Settings['CR Farm Skip Mod Servers'], function(Toggled)
			Settings['CR Farm Skip Mod Servers'] = Toggled;
		end)
		CrSection:CreateToggle('Skip Illusionist Servers', Settings['CR Farm Skip Illus Servers'], function(Toggled)
			Settings['CR Farm Skip Illus Servers'] = Toggled;
		end)
		CrSection:CreateToggle('Skip Druid Servers', Settings['Cr Farm Skip Druid Servers'], function(Toggled)
			Settings['Cr Farm Skip Druid Servers'] = Toggled;
		end)
		CrSection:CreateToggle('Disable On Artifact Pickup', Settings['CR Farm Kick On Artifact Pickup'], function(Toggled)
			Settings['CR Farm Kick On Artifact Pickup'] = Toggled;
		end)
		CrSection:CreateSlider('Log Distance', 0, 500, Settings['CR Farm Log Distance'], 'studs', function(Value)
			Settings['CR Farm Log Distance'] = Value;
		end);
		CrSection:CreateSlider('Min Last Looted', 0, 30, Settings['CR Farm Last Looted Min Time'], 'min', function(Value)
			Settings['CR Farm Last Looted Min Time'] = Value;
		end)
	
		CrSection:CreateButton('Start Bot', function()
			if (not table.find(Settings['CR Farm Loaded Accounts'], Player.UserId)) then 
				insert(Settings['CR Farm Loaded Accounts'], Player.UserId);
				SaveSettings();
				CastleRockBot();
			end;
		end)
	
		CrSection:CreateButton('Stop Bot', function()
			if (table.find(Settings['CR Farm Loaded Accounts'], Player.UserId)) then 
				table.remove(Settings['CR Farm Loaded Accounts'], table.find(Settings['CR Farm Loaded Accounts'], Player.UserId));
				SaveSettings();
				Player:Kick('\nCr Bot Has Been Disabled');
			end;
		end)
	
		if (table.find(Settings['CR Farm Loaded Accounts'], Player.UserId)) then 
			CastleRockBot();
		end;
	
		if (RogueVersion == 'Gaia') then
			local ScroomBotEnabled = false;
			ScroomBotSection:CreateToggle('Enable Scroom Bot', ScroomBotEnabled, function(Toggled)
				ScroomBotEnabled = Toggled;
			end)
			insert(ScriptKillList.Connections, Player.CharacterAdded:Connect(function(Character)
				repeat task.wait() until (Character and FindFirstChild(Character, 'Boosts') and FindFirstChild(Character, 'Humanoid') and FindFirstChild(Character, 'CharacterHandler') and FindFirstChild(Character.CharacterHandler, 'Remotes'));
				repeat task.wait() until ((Character.HumanoidRootPart.Position - Vec3(12.8, -2, -180.9)).Magnitude > 400);
				local MagnitudeFromKillPoint;
				local MagnitudeFromWipePoint;
				local Humanoid = Character.Humanoid;
				local DialogueFrame = Player.PlayerGui:WaitForChild('DialogueGui', 9e9):WaitForChild('DialogueFrame', 9e9);
	
				repeat task.wait() 
					MagnitudeFromKillPoint = (Character.HumanoidRootPart.Position - Vec3(1562.7261962890625, 248.55223083496094, 1348.3973388671875)).Magnitude;
					MagnitudeFromWipePoint = (Character.HumanoidRootPart.Position - Vec3(-7183.5, 274.7593994140625, 2796.5)).Magnitude;
				until (ScroomBotEnabled == false or (MagnitudeFromKillPoint < 30 or MagnitudeFromWipePoint < 30));
				if (ScroomBotEnabled == true) then 
					if (MagnitudeFromKillPoint < 20) then 
						task.wait(1);
						Humanoid:MoveTo(Vec3(1556.725830078125, 248.4423828125, 1308.765625));
					elseif (MagnitudeFromWipePoint < 20) then
						task.wait(1);
						Humanoid:MoveTo(Vec3(-7183.17529296875, 274.7593994140625, 2779.18408203125));
						Humanoid.MoveToFinished:Wait();
						Humanoid:MoveTo(Vec3(-7165.67724609375, 274.7593994140625, 2778.84326171875));
						Humanoid.MoveToFinished:Wait();
						Humanoid:MoveTo(Vec3(-7165.85693359375, 274.7593994140625, 2772.4365234375));
						Humanoid.MoveToFinished:Wait();
						Humanoid:MoveTo(Vec3(-7141.97314453125, 274.7592468261719, 2771.111328125));
						repeat task.wait()
							local Ferryman = workspace.NPCs['Ferryman'];
							if ((Character.HumanoidRootPart.Position - Ferryman.HumanoidRootPart.Position).Magnitude <= 20) then 
								fireclickdetector(Ferryman.ClickDetector);
							end;
						until (DialogueFrame.Visible == true);
						repeat task.wait() until (GetKey('PostDialogue'));
						GetKey('PostDialogue'):FireServer({choice = 'My son.'});
					end;
				end;
			end))
	
			insert(ScriptKillList.Funcs, function()
				ScroomBotEnabled = false;
			end)
		end;
	end;
	
end,warn)